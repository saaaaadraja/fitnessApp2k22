{"ast":null,"code":"import _isEqual from \"lodash/isEqual\";\nimport _sortBy from \"lodash/sortBy\";\nimport _isNaN from \"lodash/isNaN\";\nimport _isString from \"lodash/isString\";\nimport _isArray from \"lodash/isArray\";\nimport _max from \"lodash/max\";\nimport _min from \"lodash/min\";\nimport _flatMap from \"lodash/flatMap\";\nimport _isFunction from \"lodash/isFunction\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { getNiceTickValues, getTickValuesFixedDomain } from 'recharts-scale';\nimport * as d3Scales from 'd3-scale';\nimport { stack as shapeStack, stackOrderNone, stackOffsetExpand, stackOffsetNone, stackOffsetSilhouette, stackOffsetWiggle } from 'd3-shape';\nimport { isNumOrStr, uniqueId, isNumber, getPercentValue, mathSign, findEntryInArray } from './DataUtils';\nimport ErrorBar from '../cartesian/ErrorBar';\nimport Legend from '../component/Legend';\nimport { findAllByType, findChildByType, getDisplayName } from './ReactUtils';\nexport var getValueByDataKey = function getValueByDataKey(obj, dataKey, defaultValue) {\n  if (_isNil(obj) || _isNil(dataKey)) {\n    return defaultValue;\n  }\n\n  if (isNumOrStr(dataKey)) {\n    return _get(obj, dataKey, defaultValue);\n  }\n\n  if (_isFunction(dataKey)) {\n    return dataKey(obj);\n  }\n\n  return defaultValue;\n};\n/**\n * Get domain of data by key\n * @param  {Array}   data      The data displayed in the chart\n * @param  {String}  key       The unique key of a group of data\n * @param  {String}  type      The type of axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array} Domain of data\n */\n\nexport var getDomainOfDataByKey = function getDomainOfDataByKey(data, key, type, filterNil) {\n  var flattenData = _flatMap(data, function (entry) {\n    return getValueByDataKey(entry, key);\n  });\n\n  if (type === 'number') {\n    var domain = flattenData.filter(function (entry) {\n      return isNumber(entry) || parseFloat(entry, 10);\n    });\n    return domain.length ? [_min(domain), _max(domain)] : [Infinity, -Infinity];\n  }\n\n  var validateData = filterNil ? flattenData.filter(function (entry) {\n    return !_isNil(entry);\n  }) : flattenData;\n  return validateData.map(function (entry) {\n    return isNumOrStr(entry) ? entry : '';\n  });\n};\nexport var calculateActiveTickIndex = function calculateActiveTickIndex(coordinate, ticks, unsortedTicks, axis) {\n  var index = -1;\n  var len = ticks.length;\n\n  if (len > 1) {\n    if (axis && axis.axisType === 'angleAxis' && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {\n      var range = axis.range; // ticks are distributed in a circle\n\n      for (var i = 0; i < len; i++) {\n        var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;\n        var cur = unsortedTicks[i].coordinate;\n        var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;\n        var sameDirectionCoord = void 0;\n\n        if (mathSign(cur - before) !== mathSign(after - cur)) {\n          var diffInterval = [];\n\n          if (mathSign(after - cur) === mathSign(range[1] - range[0])) {\n            sameDirectionCoord = after;\n            var curInRange = cur + range[1] - range[0];\n            diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);\n            diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);\n          } else {\n            sameDirectionCoord = before;\n            var afterInRange = after + range[1] - range[0];\n            diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);\n            diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);\n          }\n\n          var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];\n\n          if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        } else {\n          var min = Math.min(before, after);\n          var max = Math.max(before, after);\n\n          if (coordinate > (min + cur) / 2 && coordinate <= (max + cur) / 2) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        }\n      }\n    } else {\n      // ticks are distributed in a single direction\n      for (var _i = 0; _i < len; _i++) {\n        if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {\n          index = ticks[_i].index;\n          break;\n        }\n      }\n    }\n  } else {\n    index = 0;\n  }\n\n  return index;\n};\n/**\n * Get the main color of each graphic item\n * @param  {ReactElement} item A graphic item\n * @return {String}            Color\n */\n\nexport var getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {\n  var displayName = item.type.displayName;\n  var _item$props = item.props,\n      stroke = _item$props.stroke,\n      fill = _item$props.fill;\n  var result;\n\n  switch (displayName) {\n    case 'Line':\n      result = stroke;\n      break;\n\n    case 'Area':\n    case 'Radar':\n      result = stroke && stroke !== 'none' ? stroke : fill;\n      break;\n\n    default:\n      result = fill;\n      break;\n  }\n\n  return result;\n};\nexport var getLegendProps = function getLegendProps(_ref) {\n  var children = _ref.children,\n      formatedGraphicalItems = _ref.formatedGraphicalItems,\n      legendWidth = _ref.legendWidth,\n      legendContent = _ref.legendContent;\n  var legendItem = findChildByType(children, Legend);\n\n  if (!legendItem) {\n    return null;\n  }\n\n  var legendData;\n\n  if (legendItem.props && legendItem.props.payload) {\n    legendData = legendItem.props && legendItem.props.payload;\n  } else if (legendContent === 'children') {\n    legendData = (formatedGraphicalItems || []).reduce(function (result, _ref2) {\n      var item = _ref2.item,\n          props = _ref2.props;\n      var data = props.sectors || props.data || [];\n      return result.concat(data.map(function (entry) {\n        return {\n          type: legendItem.props.iconType || item.props.legendType,\n          value: entry.name,\n          color: entry.fill,\n          payload: entry\n        };\n      }));\n    }, []);\n  } else {\n    legendData = (formatedGraphicalItems || []).map(function (_ref3) {\n      var item = _ref3.item;\n      var _item$props2 = item.props,\n          dataKey = _item$props2.dataKey,\n          name = _item$props2.name,\n          legendType = _item$props2.legendType,\n          hide = _item$props2.hide;\n      return {\n        inactive: hide,\n        dataKey: dataKey,\n        type: legendItem.props.iconType || legendType || 'square',\n        color: getMainColorOfGraphicItem(item),\n        value: name || dataKey,\n        payload: item.props\n      };\n    });\n  }\n\n  return _objectSpread({}, legendItem.props, {}, Legend.getWithHeight(legendItem, legendWidth), {\n    payload: legendData,\n    item: legendItem\n  });\n};\n/**\n * Calculate the size of all groups for stacked bar graph\n * @param  {Object} stackGroups The items grouped by axisId and stackId\n * @return {Object} The size of all groups\n */\n\nexport var getBarSizeList = function getBarSizeList(_ref4) {\n  var globalSize = _ref4.barSize,\n      _ref4$stackGroups = _ref4.stackGroups,\n      stackGroups = _ref4$stackGroups === void 0 ? {} : _ref4$stackGroups;\n\n  if (!stackGroups) {\n    return {};\n  }\n\n  var result = {};\n  var numericAxisIds = Object.keys(stackGroups);\n\n  for (var i = 0, len = numericAxisIds.length; i < len; i++) {\n    var sgs = stackGroups[numericAxisIds[i]].stackGroups;\n    var stackIds = Object.keys(sgs);\n\n    for (var j = 0, sLen = stackIds.length; j < sLen; j++) {\n      var _sgs$stackIds$j = sgs[stackIds[j]],\n          items = _sgs$stackIds$j.items,\n          cateAxisId = _sgs$stackIds$j.cateAxisId;\n      var barItems = items.filter(function (item) {\n        return getDisplayName(item.type).indexOf('Bar') >= 0;\n      });\n\n      if (barItems && barItems.length) {\n        var selfSize = barItems[0].props.barSize;\n        var cateId = barItems[0].props[cateAxisId];\n\n        if (!result[cateId]) {\n          result[cateId] = [];\n        }\n\n        result[cateId].push({\n          item: barItems[0],\n          stackList: barItems.slice(1),\n          barSize: _isNil(selfSize) ? globalSize : selfSize\n        });\n      }\n    }\n  }\n\n  return result;\n};\n/**\n   * Calculate the size of each bar and the gap between two bars\n   * @param  {Number} bandSize  The size of each category\n   * @param  {sizeList} sizeList  The size of all groups\n   * @param  {maxBarSize} maxBarSize The maximum size of bar\n   * @return {Number} The size of each bar and the gap between two bars\n   */\n\nexport var getBarPosition = function getBarPosition(_ref5) {\n  var barGap = _ref5.barGap,\n      barCategoryGap = _ref5.barCategoryGap,\n      bandSize = _ref5.bandSize,\n      _ref5$sizeList = _ref5.sizeList,\n      sizeList = _ref5$sizeList === void 0 ? [] : _ref5$sizeList,\n      maxBarSize = _ref5.maxBarSize;\n  var len = sizeList.length;\n  if (len < 1) return null;\n  var realBarGap = getPercentValue(barGap, bandSize, 0, true);\n  var result; // whether or not is barSize setted by user\n\n  if (sizeList[0].barSize === +sizeList[0].barSize) {\n    var useFull = false;\n    var fullBarSize = bandSize / len;\n    var sum = sizeList.reduce(function (res, entry) {\n      return res + entry.barSize || 0;\n    }, 0);\n    sum += (len - 1) * realBarGap;\n\n    if (sum >= bandSize) {\n      sum -= (len - 1) * realBarGap;\n      realBarGap = 0;\n    }\n\n    if (sum >= bandSize && fullBarSize > 0) {\n      useFull = true;\n      fullBarSize *= 0.9;\n      sum = len * fullBarSize;\n    }\n\n    var offset = (bandSize - sum) / 2 >> 0;\n    var prev = {\n      offset: offset - realBarGap,\n      size: 0\n    };\n    result = sizeList.reduce(function (res, entry) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: prev.offset + prev.size + realBarGap,\n          size: useFull ? fullBarSize : entry.barSize\n        }\n      }]);\n      prev = newRes[newRes.length - 1].position;\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: prev\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  } else {\n    var _offset = getPercentValue(barCategoryGap, bandSize, 0, true);\n\n    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\n      realBarGap = 0;\n    }\n\n    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\n\n    if (originalSize > 1) {\n      originalSize >>= 0;\n    }\n\n    var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;\n    result = sizeList.reduce(function (res, entry, i) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\n          size: size\n        }\n      }]);\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: newRes[newRes.length - 1].position\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  }\n\n  return result;\n};\nexport var appendOffsetOfLegend = function appendOffsetOfLegend(offset, items, props, legendBox) {\n  var children = props.children,\n      width = props.width,\n      height = props.height,\n      margin = props.margin;\n  var legendWidth = width - (margin.left || 0) - (margin.right || 0);\n  var legendHeight = height - (margin.top || 0) - (margin.bottom || 0);\n  var legendProps = getLegendProps({\n    children: children,\n    items: items,\n    legendWidth: legendWidth,\n    legendHeight: legendHeight\n  });\n  var newOffset = offset;\n\n  if (legendProps) {\n    var box = legendBox || {};\n    var align = legendProps.align,\n        verticalAlign = legendProps.verticalAlign,\n        layout = legendProps.layout;\n\n    if ((layout === 'vertical' || layout === 'horizontal' && verticalAlign === 'center') && isNumber(offset[align])) {\n      newOffset = _objectSpread({}, offset, _defineProperty({}, align, newOffset[align] + (box.width || 0)));\n    }\n\n    if ((layout === 'horizontal' || layout === 'vertical' && align === 'center') && isNumber(offset[verticalAlign])) {\n      newOffset = _objectSpread({}, offset, _defineProperty({}, verticalAlign, newOffset[verticalAlign] + (box.height || 0)));\n    }\n  }\n\n  return newOffset;\n};\nexport var getDomainOfErrorBars = function getDomainOfErrorBars(data, item, dataKey, axisType) {\n  var children = item.props.children;\n  var errorBars = findAllByType(children, ErrorBar).filter(function (errorBarChild) {\n    var direction = errorBarChild.props.direction;\n    return _isNil(direction) || _isNil(axisType) ? true : axisType.indexOf(direction) >= 0;\n  });\n\n  if (errorBars && errorBars.length) {\n    var keys = errorBars.map(function (errorBarChild) {\n      return errorBarChild.props.dataKey;\n    });\n    return data.reduce(function (result, entry) {\n      var entryValue = getValueByDataKey(entry, dataKey, 0);\n      var mainValue = _isArray(entryValue) ? [_min(entryValue), _max(entryValue)] : [entryValue, entryValue];\n      var errorDomain = keys.reduce(function (prevErrorArr, k) {\n        var errorValue = getValueByDataKey(entry, k, 0);\n        var lowerValue = mainValue[0] - Math.abs(_isArray(errorValue) ? errorValue[0] : errorValue);\n        var upperValue = mainValue[1] + Math.abs(_isArray(errorValue) ? errorValue[1] : errorValue);\n        return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];\n      }, [Infinity, -Infinity]);\n      return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\nexport var parseErrorBarsOfAxis = function parseErrorBarsOfAxis(data, items, dataKey, axisType) {\n  var domains = items.map(function (item) {\n    return getDomainOfErrorBars(data, item, dataKey, axisType);\n  }).filter(function (entry) {\n    return !_isNil(entry);\n  });\n\n  if (domains && domains.length) {\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\n/**\n * Get domain of data by the configuration of item element\n * @param  {Array}   data      The data displayed in the chart\n * @param  {Array}   items     The instances of item\n * @param  {String}  type      The type of axis, number - Number Axis, category - Category Axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array}        Domain\n */\n\nexport var getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type, filterNil) {\n  var domains = items.map(function (item) {\n    var dataKey = item.props.dataKey;\n\n    if (type === 'number' && dataKey) {\n      return getDomainOfErrorBars(data, item, dataKey) || getDomainOfDataByKey(data, dataKey, type, filterNil);\n    }\n\n    return getDomainOfDataByKey(data, dataKey, type, filterNil);\n  });\n\n  if (type === 'number') {\n    // Calculate the domain of number axis\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  var tag = {}; // Get the union set of category axis\n\n  return domains.reduce(function (result, entry) {\n    for (var i = 0, len = entry.length; i < len; i++) {\n      if (!tag[entry[i]]) {\n        tag[entry[i]] = true;\n        result.push(entry[i]);\n      }\n    }\n\n    return result;\n  }, []);\n};\nexport var isCategorialAxis = function isCategorialAxis(layout, axisType) {\n  return layout === 'horizontal' && axisType === 'xAxis' || layout === 'vertical' && axisType === 'yAxis' || layout === 'centric' && axisType === 'angleAxis' || layout === 'radial' && axisType === 'radiusAxis';\n};\n/**\n * Calculate the Coordinates of grid\n * @param  {Array} ticks The ticks in axis\n * @param {Number} min   The minimun value of axis\n * @param {Number} max   The maximun value of axis\n * @return {Array}       Coordinates\n */\n\nexport var getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, min, max) {\n  var hasMin, hasMax;\n  var values = ticks.map(function (entry) {\n    if (entry.coordinate === min) {\n      hasMin = true;\n    }\n\n    if (entry.coordinate === max) {\n      hasMax = true;\n    }\n\n    return entry.coordinate;\n  });\n\n  if (!hasMin) {\n    values.push(min);\n  }\n\n  if (!hasMax) {\n    values.push(max);\n  }\n\n  return values;\n};\n/**\n * Get the ticks of an axis\n * @param  {Object}  axis The configuration of an axis\n * @param {Boolean} isGrid Whether or not are the ticks in grid\n * @param {Boolean} isAll Return the ticks of all the points or not\n * @return {Array}  Ticks\n */\n\nexport var getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {\n  if (!axis) return null;\n  var scale = axis.scale;\n  var duplicateDomain = axis.duplicateDomain,\n      type = axis.type,\n      range = axis.range;\n  var offset = (isGrid || isAll) && type === 'category' && scale.bandwidth ? scale.bandwidth() / 2 : 0;\n  offset = axis.axisType === 'angleAxis' ? mathSign(range[0] - range[1]) * 2 * offset : offset; // The ticks setted by user should only affect the ticks adjacent to axis line\n\n  if (isGrid && (axis.ticks || axis.niceTicks)) {\n    return (axis.ticks || axis.niceTicks).map(function (entry) {\n      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;\n      return {\n        coordinate: scale(scaleContent) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  }\n\n  if (axis.isCategorial && axis.categoricalDomain) {\n    return axis.categoricalDomain.map(function (entry, index) {\n      return {\n        coordinate: scale(entry),\n        value: entry,\n        index: index,\n        offset: offset\n      };\n    });\n  }\n\n  if (scale.ticks && !isAll) {\n    return scale.ticks(axis.tickCount).map(function (entry) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  } // When axis has duplicated text, serial numbers are used to generate scale\n\n\n  return scale.domain().map(function (entry, index) {\n    return {\n      coordinate: scale(entry) + offset,\n      value: duplicateDomain ? duplicateDomain[entry] : entry,\n      index: index,\n      offset: offset\n    };\n  });\n};\n/**\n * combine the handlers\n * @param  {Function} defaultHandler Internal private handler\n * @param  {Function} parentHandler  Handler function specified in parent component\n * @param  {Function} childHandler   Handler function specified in child component\n * @return {Function}                The combined handler\n */\n\nexport var combineEventHandlers = function combineEventHandlers(defaultHandler, parentHandler, childHandler) {\n  var customizedHandler;\n\n  if (_isFunction(childHandler)) {\n    customizedHandler = childHandler;\n  } else if (_isFunction(parentHandler)) {\n    customizedHandler = parentHandler;\n  }\n\n  if (_isFunction(defaultHandler) || customizedHandler) {\n    return function (arg1, arg2, arg3, arg4) {\n      if (_isFunction(defaultHandler)) {\n        defaultHandler(arg1, arg2, arg3, arg4);\n      }\n\n      if (_isFunction(customizedHandler)) {\n        customizedHandler(arg1, arg2, arg3, arg4);\n      }\n    };\n  }\n\n  return null;\n};\n/**\n * Parse the scale function of axis\n * @param  {Object}   axis          The option of axis\n * @param  {String}   chartType     The displayName of chart\n * @return {Function}               The scale funcion\n */\n\nexport var parseScale = function parseScale(axis, chartType) {\n  var scale = axis.scale,\n      type = axis.type,\n      layout = axis.layout,\n      axisType = axis.axisType;\n\n  if (scale === 'auto') {\n    if (layout === 'radial' && axisType === 'radiusAxis') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    if (layout === 'radial' && axisType === 'angleAxis') {\n      return {\n        scale: d3Scales.scaleLinear(),\n        realScaleType: 'linear'\n      };\n    }\n\n    if (type === 'category' && chartType && (chartType.indexOf('LineChart') >= 0 || chartType.indexOf('AreaChart') >= 0)) {\n      return {\n        scale: d3Scales.scalePoint(),\n        realScaleType: 'point'\n      };\n    }\n\n    if (type === 'category') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    return {\n      scale: d3Scales.scaleLinear(),\n      realScaleType: 'linear'\n    };\n  }\n\n  if (_isString(scale)) {\n    var name = \"scale\".concat(scale.slice(0, 1).toUpperCase()).concat(scale.slice(1));\n    return {\n      scale: (d3Scales[name] || d3Scales.scalePoint)(),\n      realScaleType: d3Scales[name] ? name : 'point'\n    };\n  }\n\n  return _isFunction(scale) ? {\n    scale: scale\n  } : {\n    scale: d3Scales.scalePoint(),\n    realScaleType: 'point'\n  };\n};\nvar EPS = 1e-4;\nexport var checkDomainOfScale = function checkDomainOfScale(scale) {\n  var domain = scale.domain();\n\n  if (!domain || domain.length <= 2) {\n    return;\n  }\n\n  var len = domain.length;\n  var range = scale.range();\n  var min = Math.min(range[0], range[1]) - EPS;\n  var max = Math.max(range[0], range[1]) + EPS;\n  var first = scale(domain[0]);\n  var last = scale(domain[len - 1]);\n\n  if (first < min || first > max || last < min || last > max) {\n    scale.domain([domain[0], domain[len - 1]]);\n  }\n};\nexport var findPositionOfBar = function findPositionOfBar(barPosition, child) {\n  if (!barPosition) {\n    return null;\n  }\n\n  for (var i = 0, len = barPosition.length; i < len; i++) {\n    if (barPosition[i].item === child) {\n      return barPosition[i].position;\n    }\n  }\n\n  return null;\n};\nexport var truncateByDomain = function truncateByDomain(value, domain) {\n  if (!domain || domain.length !== 2 || !isNumber(domain[0]) || !isNumber(domain[1])) {\n    return value;\n  }\n\n  var min = Math.min(domain[0], domain[1]);\n  var max = Math.max(domain[0], domain[1]);\n  var result = [value[0], value[1]];\n\n  if (!isNumber(value[0]) || value[0] < min) {\n    result[0] = min;\n  }\n\n  if (!isNumber(value[1]) || value[1] > max) {\n    result[1] = max;\n  }\n\n  if (result[0] > max) {\n    result[0] = max;\n  }\n\n  if (result[1] < min) {\n    result[1] = min;\n  }\n\n  return result;\n};\n/* eslint no-param-reassign: 0 */\n\nexport var offsetSign = function offsetSign(series) {\n  var n = series.length;\n\n  if (n <= 0) {\n    return;\n  }\n\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n    var negative = 0;\n\n    for (var i = 0; i < n; ++i) {\n      var value = _isNaN(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n      /* eslint-disable prefer-destructuring */\n\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = negative;\n        series[i][j][1] = negative + value;\n        negative = series[i][j][1];\n      }\n      /* eslint-enable prefer-destructuring */\n\n    }\n  }\n};\nvar STACK_OFFSET_MAP = {\n  sign: offsetSign,\n  expand: stackOffsetExpand,\n  none: stackOffsetNone,\n  silhouette: stackOffsetSilhouette,\n  wiggle: stackOffsetWiggle\n};\nexport var getStackedData = function getStackedData(data, stackItems, offsetType) {\n  var dataKeys = stackItems.map(function (item) {\n    return item.props.dataKey;\n  });\n  var stack = shapeStack().keys(dataKeys).value(function (d, key) {\n    return +getValueByDataKey(d, key, 0);\n  }).order(stackOrderNone).offset(STACK_OFFSET_MAP[offsetType]);\n  return stack(data);\n};\nexport var getStackGroupsByAxisId = function getStackGroupsByAxisId(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {\n  if (!data) {\n    return null;\n  } // reversing items to affect render order (for layering)\n\n\n  var items = reverseStackOrder ? _items.reverse() : _items;\n  var stackGroups = items.reduce(function (result, item) {\n    var _item$props3 = item.props,\n        stackId = _item$props3.stackId,\n        hide = _item$props3.hide;\n\n    if (hide) {\n      return result;\n    }\n\n    var axisId = item.props[numericAxisId];\n    var parentGroup = result[axisId] || {\n      hasStack: false,\n      stackGroups: {}\n    };\n\n    if (isNumOrStr(stackId)) {\n      var childGroup = parentGroup.stackGroups[stackId] || {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: []\n      };\n      childGroup.items.push(item);\n      parentGroup.hasStack = true;\n      parentGroup.stackGroups[stackId] = childGroup;\n    } else {\n      parentGroup.stackGroups[uniqueId('_stackId_')] = {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: [item]\n      };\n    }\n\n    return _objectSpread({}, result, _defineProperty({}, axisId, parentGroup));\n  }, {});\n  return Object.keys(stackGroups).reduce(function (result, axisId) {\n    var group = stackGroups[axisId];\n\n    if (group.hasStack) {\n      group.stackGroups = Object.keys(group.stackGroups).reduce(function (res, stackId) {\n        var g = group.stackGroups[stackId];\n        return _objectSpread({}, res, _defineProperty({}, stackId, {\n          numericAxisId: numericAxisId,\n          cateAxisId: cateAxisId,\n          items: g.items,\n          stackedData: getStackedData(data, g.items, offsetType)\n        }));\n      }, {});\n    }\n\n    return _objectSpread({}, result, _defineProperty({}, axisId, group));\n  }, {});\n};\n/**\n * get domain of ticks\n * @param  {Array} ticks Ticks of axis\n * @param  {String} type  The type of axis\n * @return {Array} domain\n */\n\nexport var calculateDomainOfTicks = function calculateDomainOfTicks(ticks, type) {\n  if (type === 'number') {\n    return [_min(ticks), _max(ticks)];\n  }\n\n  return ticks;\n};\n/**\n * Configure the scale function of axis\n * @param {Object} scale The scale function\n * @param {Object} opts  The configuration of axis\n * @return {Object}      null\n */\n\nexport var getTicksOfScale = function getTicksOfScale(scale, opts) {\n  var realScaleType = opts.realScaleType,\n      type = opts.type,\n      tickCount = opts.tickCount,\n      originalDomain = opts.originalDomain,\n      allowDecimals = opts.allowDecimals;\n  var scaleType = realScaleType || opts.scale;\n\n  if (scaleType !== 'auto' && scaleType !== 'linear') {\n    return null;\n  }\n\n  if (tickCount && type === 'number' && originalDomain && (originalDomain[0] === 'auto' || originalDomain[1] === 'auto')) {\n    // Calculate the ticks by the number of grid when the axis is a number axis\n    var domain = scale.domain();\n    var tickValues = getNiceTickValues(domain, tickCount, allowDecimals);\n    scale.domain(calculateDomainOfTicks(tickValues, type));\n    return {\n      niceTicks: tickValues\n    };\n  }\n\n  if (tickCount && type === 'number') {\n    var _domain = scale.domain();\n\n    var _tickValues = getTickValuesFixedDomain(_domain, tickCount, allowDecimals);\n\n    return {\n      niceTicks: _tickValues\n    };\n  }\n\n  return null;\n};\nexport var getCateCoordinateOfLine = function getCateCoordinateOfLine(_ref6) {\n  var axis = _ref6.axis,\n      ticks = _ref6.ticks,\n      bandSize = _ref6.bandSize,\n      entry = _ref6.entry,\n      index = _ref6.index,\n      dataKey = _ref6.dataKey;\n\n  if (axis.type === 'category') {\n    // find coordinate of category axis by the value of category\n    if (!axis.allowDuplicatedCategory && axis.dataKey && !_isNil(entry[axis.dataKey])) {\n      var matchedTick = findEntryInArray(ticks, 'value', entry[axis.dataKey]);\n\n      if (matchedTick) {\n        return matchedTick.coordinate + bandSize / 2;\n      }\n    }\n\n    return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;\n  }\n\n  var value = getValueByDataKey(entry, !_isNil(dataKey) ? dataKey : axis.dataKey);\n  return !_isNil(value) ? axis.scale(value) : null;\n};\nexport var getCateCoordinateOfBar = function getCateCoordinateOfBar(_ref7) {\n  var axis = _ref7.axis,\n      ticks = _ref7.ticks,\n      offset = _ref7.offset,\n      bandSize = _ref7.bandSize,\n      entry = _ref7.entry,\n      index = _ref7.index;\n\n  if (axis.type === 'category') {\n    return ticks[index] ? ticks[index].coordinate + offset : null;\n  }\n\n  var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);\n  return !_isNil(value) ? axis.scale(value) - bandSize / 2 + offset : null;\n};\nexport var getBaseValueOfBar = function getBaseValueOfBar(_ref8) {\n  var numericAxis = _ref8.numericAxis;\n  var domain = numericAxis.scale.domain();\n\n  if (numericAxis.type === 'number') {\n    var min = Math.min(domain[0], domain[1]);\n    var max = Math.max(domain[0], domain[1]);\n\n    if (min <= 0 && max >= 0) {\n      return 0;\n    }\n\n    if (max < 0) {\n      return max;\n    }\n\n    return min;\n  }\n\n  return domain[0];\n};\nexport var getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {\n  var stackId = item.props.stackId;\n\n  if (isNumOrStr(stackId)) {\n    var group = stackGroups[stackId];\n\n    if (group && group.items.length) {\n      var itemIndex = -1;\n\n      for (var i = 0, len = group.items.length; i < len; i++) {\n        if (group.items[i] === item) {\n          itemIndex = i;\n          break;\n        }\n      }\n\n      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;\n    }\n  }\n\n  return null;\n};\n\nvar getDomainOfSingle = function getDomainOfSingle(data) {\n  return data.reduce(function (result, entry) {\n    return [_min(entry.concat([result[0]]).filter(isNumber)), _max(entry.concat([result[1]]).filter(isNumber))];\n  }, [Infinity, -Infinity]);\n};\n\nexport var getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {\n  return Object.keys(stackGroups).reduce(function (result, stackId) {\n    var group = stackGroups[stackId];\n    var stackedData = group.stackedData;\n    var domain = stackedData.reduce(function (res, entry) {\n      var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));\n      return [Math.min(res[0], s[0]), Math.max(res[1], s[1])];\n    }, [Infinity, -Infinity]);\n    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];\n  }, [Infinity, -Infinity]).map(function (result) {\n    return result === Infinity || result === -Infinity ? 0 : result;\n  });\n};\nexport var MIN_VALUE_REG = /^dataMin[\\s]*-[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexport var MAX_VALUE_REG = /^dataMax[\\s]*\\+[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexport var parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {\n  if (!_isArray(specifiedDomain)) {\n    return dataDomain;\n  }\n\n  var domain = [];\n  /* eslint-disable prefer-destructuring */\n\n  if (isNumber(specifiedDomain[0])) {\n    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);\n  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {\n    var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];\n    domain[0] = dataDomain[0] - value;\n  } else if (_isFunction(specifiedDomain[0])) {\n    domain[0] = specifiedDomain[0](dataDomain[0]);\n  } else {\n    domain[0] = dataDomain[0];\n  }\n\n  if (isNumber(specifiedDomain[1])) {\n    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);\n  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {\n    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];\n\n    domain[1] = dataDomain[1] + _value;\n  } else if (_isFunction(specifiedDomain[1])) {\n    domain[1] = specifiedDomain[1](dataDomain[1]);\n  } else {\n    domain[1] = dataDomain[1];\n  }\n  /* eslint-enable prefer-destructuring */\n\n\n  return domain;\n};\n/**\n * Calculate the size between two category\n * @param  {Object} axis  The options of axis\n * @param  {Array}  ticks The ticks of axis\n * @return {Number} Size\n */\n\nexport var getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks) {\n  if (axis && axis.scale && axis.scale.bandwidth) {\n    return axis.scale.bandwidth();\n  }\n\n  if (axis && ticks && ticks.length >= 2) {\n    var orderedTicks = _sortBy(ticks, function (o) {\n      return o.coordinate;\n    });\n\n    var bandSize = Infinity;\n\n    for (var i = 1, len = orderedTicks.length; i < len; i++) {\n      var cur = orderedTicks[i];\n      var prev = orderedTicks[i - 1];\n      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);\n    }\n\n    return bandSize === Infinity ? 0 : bandSize;\n  }\n\n  return 0;\n};\n/**\n * parse the domain of a category axis when a domain is specified\n * @param   {Array}        specifiedDomain  The domain specified by users\n * @param   {Array}        calculatedDomain The domain calculated by dateKey\n * @param   {ReactElement} axisChild        The axis element\n * @returns {Array}        domains\n */\n\nexport var parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis(specifiedDomain, calculatedDomain, axisChild) {\n  if (!specifiedDomain || !specifiedDomain.length) {\n    return calculatedDomain;\n  }\n\n  if (_isEqual(specifiedDomain, _get(axisChild, 'type.defaultProps.domain'))) {\n    return calculatedDomain;\n  }\n\n  return specifiedDomain;\n};","map":{"version":3,"names":["_isEqual","_sortBy","_isNaN","_isString","_isArray","_max","_min","_flatMap","_isFunction","_get","_isNil","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","TypeError","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","i","arr2","length","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","getNiceTickValues","getTickValuesFixedDomain","d3Scales","stack","shapeStack","stackOrderNone","stackOffsetExpand","stackOffsetNone","stackOffsetSilhouette","stackOffsetWiggle","isNumOrStr","uniqueId","isNumber","getPercentValue","mathSign","findEntryInArray","ErrorBar","Legend","findAllByType","findChildByType","getDisplayName","getValueByDataKey","dataKey","defaultValue","getDomainOfDataByKey","data","type","filterNil","flattenData","entry","domain","parseFloat","Infinity","validateData","map","calculateActiveTickIndex","coordinate","ticks","unsortedTicks","axis","index","len","axisType","Math","abs","range","before","cur","after","sameDirectionCoord","diffInterval","curInRange","min","max","afterInRange","sameInterval","_i","getMainColorOfGraphicItem","item","displayName","_item$props","props","stroke","fill","result","getLegendProps","_ref","children","formatedGraphicalItems","legendWidth","legendContent","legendItem","legendData","payload","reduce","_ref2","sectors","concat","iconType","legendType","name","color","_ref3","_item$props2","hide","inactive","getWithHeight","getBarSizeList","_ref4","globalSize","barSize","_ref4$stackGroups","stackGroups","numericAxisIds","sgs","stackIds","j","sLen","_sgs$stackIds$j","items","cateAxisId","barItems","indexOf","selfSize","cateId","stackList","slice","getBarPosition","_ref5","barGap","barCategoryGap","bandSize","_ref5$sizeList","sizeList","maxBarSize","realBarGap","useFull","fullBarSize","sum","res","offset","prev","size","newRes","position","_offset","originalSize","appendOffsetOfLegend","legendBox","width","height","margin","left","right","legendHeight","top","bottom","legendProps","newOffset","box","align","verticalAlign","layout","getDomainOfErrorBars","errorBars","errorBarChild","direction","entryValue","mainValue","errorDomain","prevErrorArr","k","errorValue","lowerValue","upperValue","parseErrorBarsOfAxis","domains","getDomainOfItemsWithSameAxis","tag","isCategorialAxis","getCoordinatesOfGrid","hasMin","hasMax","values","getTicksOfAxis","isGrid","isAll","scale","duplicateDomain","bandwidth","niceTicks","scaleContent","isCategorial","categoricalDomain","tickCount","combineEventHandlers","defaultHandler","parentHandler","childHandler","customizedHandler","arg1","arg2","arg3","arg4","parseScale","chartType","scaleBand","realScaleType","scaleLinear","scalePoint","toUpperCase","EPS","checkDomainOfScale","first","last","findPositionOfBar","barPosition","child","truncateByDomain","offsetSign","series","n","m","positive","negative","STACK_OFFSET_MAP","sign","expand","none","silhouette","wiggle","getStackedData","stackItems","offsetType","dataKeys","d","order","getStackGroupsByAxisId","_items","numericAxisId","reverseStackOrder","reverse","_item$props3","stackId","axisId","parentGroup","hasStack","childGroup","group","g","stackedData","calculateDomainOfTicks","getTicksOfScale","opts","originalDomain","allowDecimals","scaleType","tickValues","_domain","_tickValues","getCateCoordinateOfLine","_ref6","allowDuplicatedCategory","matchedTick","getCateCoordinateOfBar","_ref7","getBaseValueOfBar","_ref8","numericAxis","getStackedDataOfItem","itemIndex","getDomainOfSingle","getDomainOfStackGroups","startIndex","endIndex","s","MIN_VALUE_REG","MAX_VALUE_REG","parseSpecifiedDomain","specifiedDomain","dataDomain","allowDataOverflow","test","exec","_value","getBandSizeOfAxis","orderedTicks","o","parseDomainOfCategoryAxis","calculatedDomain","axisChild"],"sources":["D:/Theme/package/node_modules/recharts/es6/util/ChartUtils.js"],"sourcesContent":["import _isEqual from \"lodash/isEqual\";\nimport _sortBy from \"lodash/sortBy\";\nimport _isNaN from \"lodash/isNaN\";\nimport _isString from \"lodash/isString\";\nimport _isArray from \"lodash/isArray\";\nimport _max from \"lodash/max\";\nimport _min from \"lodash/min\";\nimport _flatMap from \"lodash/flatMap\";\nimport _isFunction from \"lodash/isFunction\";\nimport _get from \"lodash/get\";\nimport _isNil from \"lodash/isNil\";\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { getNiceTickValues, getTickValuesFixedDomain } from 'recharts-scale';\nimport * as d3Scales from 'd3-scale';\nimport { stack as shapeStack, stackOrderNone, stackOffsetExpand, stackOffsetNone, stackOffsetSilhouette, stackOffsetWiggle } from 'd3-shape';\nimport { isNumOrStr, uniqueId, isNumber, getPercentValue, mathSign, findEntryInArray } from './DataUtils';\nimport ErrorBar from '../cartesian/ErrorBar';\nimport Legend from '../component/Legend';\nimport { findAllByType, findChildByType, getDisplayName } from './ReactUtils';\nexport var getValueByDataKey = function getValueByDataKey(obj, dataKey, defaultValue) {\n  if (_isNil(obj) || _isNil(dataKey)) {\n    return defaultValue;\n  }\n\n  if (isNumOrStr(dataKey)) {\n    return _get(obj, dataKey, defaultValue);\n  }\n\n  if (_isFunction(dataKey)) {\n    return dataKey(obj);\n  }\n\n  return defaultValue;\n};\n/**\n * Get domain of data by key\n * @param  {Array}   data      The data displayed in the chart\n * @param  {String}  key       The unique key of a group of data\n * @param  {String}  type      The type of axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array} Domain of data\n */\n\nexport var getDomainOfDataByKey = function getDomainOfDataByKey(data, key, type, filterNil) {\n  var flattenData = _flatMap(data, function (entry) {\n    return getValueByDataKey(entry, key);\n  });\n\n  if (type === 'number') {\n    var domain = flattenData.filter(function (entry) {\n      return isNumber(entry) || parseFloat(entry, 10);\n    });\n    return domain.length ? [_min(domain), _max(domain)] : [Infinity, -Infinity];\n  }\n\n  var validateData = filterNil ? flattenData.filter(function (entry) {\n    return !_isNil(entry);\n  }) : flattenData;\n  return validateData.map(function (entry) {\n    return isNumOrStr(entry) ? entry : '';\n  });\n};\nexport var calculateActiveTickIndex = function calculateActiveTickIndex(coordinate, ticks, unsortedTicks, axis) {\n  var index = -1;\n  var len = ticks.length;\n\n  if (len > 1) {\n    if (axis && axis.axisType === 'angleAxis' && Math.abs(Math.abs(axis.range[1] - axis.range[0]) - 360) <= 1e-6) {\n      var range = axis.range; // ticks are distributed in a circle\n\n      for (var i = 0; i < len; i++) {\n        var before = i > 0 ? unsortedTicks[i - 1].coordinate : unsortedTicks[len - 1].coordinate;\n        var cur = unsortedTicks[i].coordinate;\n        var after = i >= len - 1 ? unsortedTicks[0].coordinate : unsortedTicks[i + 1].coordinate;\n        var sameDirectionCoord = void 0;\n\n        if (mathSign(cur - before) !== mathSign(after - cur)) {\n          var diffInterval = [];\n\n          if (mathSign(after - cur) === mathSign(range[1] - range[0])) {\n            sameDirectionCoord = after;\n            var curInRange = cur + range[1] - range[0];\n            diffInterval[0] = Math.min(curInRange, (curInRange + before) / 2);\n            diffInterval[1] = Math.max(curInRange, (curInRange + before) / 2);\n          } else {\n            sameDirectionCoord = before;\n            var afterInRange = after + range[1] - range[0];\n            diffInterval[0] = Math.min(cur, (afterInRange + cur) / 2);\n            diffInterval[1] = Math.max(cur, (afterInRange + cur) / 2);\n          }\n\n          var sameInterval = [Math.min(cur, (sameDirectionCoord + cur) / 2), Math.max(cur, (sameDirectionCoord + cur) / 2)];\n\n          if (coordinate > sameInterval[0] && coordinate <= sameInterval[1] || coordinate >= diffInterval[0] && coordinate <= diffInterval[1]) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        } else {\n          var min = Math.min(before, after);\n          var max = Math.max(before, after);\n\n          if (coordinate > (min + cur) / 2 && coordinate <= (max + cur) / 2) {\n            index = unsortedTicks[i].index;\n            break;\n          }\n        }\n      }\n    } else {\n      // ticks are distributed in a single direction\n      for (var _i = 0; _i < len; _i++) {\n        if (_i === 0 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i > 0 && _i < len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2 && coordinate <= (ticks[_i].coordinate + ticks[_i + 1].coordinate) / 2 || _i === len - 1 && coordinate > (ticks[_i].coordinate + ticks[_i - 1].coordinate) / 2) {\n          index = ticks[_i].index;\n          break;\n        }\n      }\n    }\n  } else {\n    index = 0;\n  }\n\n  return index;\n};\n/**\n * Get the main color of each graphic item\n * @param  {ReactElement} item A graphic item\n * @return {String}            Color\n */\n\nexport var getMainColorOfGraphicItem = function getMainColorOfGraphicItem(item) {\n  var displayName = item.type.displayName;\n  var _item$props = item.props,\n      stroke = _item$props.stroke,\n      fill = _item$props.fill;\n  var result;\n\n  switch (displayName) {\n    case 'Line':\n      result = stroke;\n      break;\n\n    case 'Area':\n    case 'Radar':\n      result = stroke && stroke !== 'none' ? stroke : fill;\n      break;\n\n    default:\n      result = fill;\n      break;\n  }\n\n  return result;\n};\nexport var getLegendProps = function getLegendProps(_ref) {\n  var children = _ref.children,\n      formatedGraphicalItems = _ref.formatedGraphicalItems,\n      legendWidth = _ref.legendWidth,\n      legendContent = _ref.legendContent;\n  var legendItem = findChildByType(children, Legend);\n\n  if (!legendItem) {\n    return null;\n  }\n\n  var legendData;\n\n  if (legendItem.props && legendItem.props.payload) {\n    legendData = legendItem.props && legendItem.props.payload;\n  } else if (legendContent === 'children') {\n    legendData = (formatedGraphicalItems || []).reduce(function (result, _ref2) {\n      var item = _ref2.item,\n          props = _ref2.props;\n      var data = props.sectors || props.data || [];\n      return result.concat(data.map(function (entry) {\n        return {\n          type: legendItem.props.iconType || item.props.legendType,\n          value: entry.name,\n          color: entry.fill,\n          payload: entry\n        };\n      }));\n    }, []);\n  } else {\n    legendData = (formatedGraphicalItems || []).map(function (_ref3) {\n      var item = _ref3.item;\n      var _item$props2 = item.props,\n          dataKey = _item$props2.dataKey,\n          name = _item$props2.name,\n          legendType = _item$props2.legendType,\n          hide = _item$props2.hide;\n      return {\n        inactive: hide,\n        dataKey: dataKey,\n        type: legendItem.props.iconType || legendType || 'square',\n        color: getMainColorOfGraphicItem(item),\n        value: name || dataKey,\n        payload: item.props\n      };\n    });\n  }\n\n  return _objectSpread({}, legendItem.props, {}, Legend.getWithHeight(legendItem, legendWidth), {\n    payload: legendData,\n    item: legendItem\n  });\n};\n/**\n * Calculate the size of all groups for stacked bar graph\n * @param  {Object} stackGroups The items grouped by axisId and stackId\n * @return {Object} The size of all groups\n */\n\nexport var getBarSizeList = function getBarSizeList(_ref4) {\n  var globalSize = _ref4.barSize,\n      _ref4$stackGroups = _ref4.stackGroups,\n      stackGroups = _ref4$stackGroups === void 0 ? {} : _ref4$stackGroups;\n\n  if (!stackGroups) {\n    return {};\n  }\n\n  var result = {};\n  var numericAxisIds = Object.keys(stackGroups);\n\n  for (var i = 0, len = numericAxisIds.length; i < len; i++) {\n    var sgs = stackGroups[numericAxisIds[i]].stackGroups;\n    var stackIds = Object.keys(sgs);\n\n    for (var j = 0, sLen = stackIds.length; j < sLen; j++) {\n      var _sgs$stackIds$j = sgs[stackIds[j]],\n          items = _sgs$stackIds$j.items,\n          cateAxisId = _sgs$stackIds$j.cateAxisId;\n      var barItems = items.filter(function (item) {\n        return getDisplayName(item.type).indexOf('Bar') >= 0;\n      });\n\n      if (barItems && barItems.length) {\n        var selfSize = barItems[0].props.barSize;\n        var cateId = barItems[0].props[cateAxisId];\n\n        if (!result[cateId]) {\n          result[cateId] = [];\n        }\n\n        result[cateId].push({\n          item: barItems[0],\n          stackList: barItems.slice(1),\n          barSize: _isNil(selfSize) ? globalSize : selfSize\n        });\n      }\n    }\n  }\n\n  return result;\n};\n/**\n   * Calculate the size of each bar and the gap between two bars\n   * @param  {Number} bandSize  The size of each category\n   * @param  {sizeList} sizeList  The size of all groups\n   * @param  {maxBarSize} maxBarSize The maximum size of bar\n   * @return {Number} The size of each bar and the gap between two bars\n   */\n\nexport var getBarPosition = function getBarPosition(_ref5) {\n  var barGap = _ref5.barGap,\n      barCategoryGap = _ref5.barCategoryGap,\n      bandSize = _ref5.bandSize,\n      _ref5$sizeList = _ref5.sizeList,\n      sizeList = _ref5$sizeList === void 0 ? [] : _ref5$sizeList,\n      maxBarSize = _ref5.maxBarSize;\n  var len = sizeList.length;\n  if (len < 1) return null;\n  var realBarGap = getPercentValue(barGap, bandSize, 0, true);\n  var result; // whether or not is barSize setted by user\n\n  if (sizeList[0].barSize === +sizeList[0].barSize) {\n    var useFull = false;\n    var fullBarSize = bandSize / len;\n    var sum = sizeList.reduce(function (res, entry) {\n      return res + entry.barSize || 0;\n    }, 0);\n    sum += (len - 1) * realBarGap;\n\n    if (sum >= bandSize) {\n      sum -= (len - 1) * realBarGap;\n      realBarGap = 0;\n    }\n\n    if (sum >= bandSize && fullBarSize > 0) {\n      useFull = true;\n      fullBarSize *= 0.9;\n      sum = len * fullBarSize;\n    }\n\n    var offset = (bandSize - sum) / 2 >> 0;\n    var prev = {\n      offset: offset - realBarGap,\n      size: 0\n    };\n    result = sizeList.reduce(function (res, entry) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: prev.offset + prev.size + realBarGap,\n          size: useFull ? fullBarSize : entry.barSize\n        }\n      }]);\n      prev = newRes[newRes.length - 1].position;\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: prev\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  } else {\n    var _offset = getPercentValue(barCategoryGap, bandSize, 0, true);\n\n    if (bandSize - 2 * _offset - (len - 1) * realBarGap <= 0) {\n      realBarGap = 0;\n    }\n\n    var originalSize = (bandSize - 2 * _offset - (len - 1) * realBarGap) / len;\n\n    if (originalSize > 1) {\n      originalSize >>= 0;\n    }\n\n    var size = maxBarSize === +maxBarSize ? Math.min(originalSize, maxBarSize) : originalSize;\n    result = sizeList.reduce(function (res, entry, i) {\n      var newRes = [].concat(_toConsumableArray(res), [{\n        item: entry.item,\n        position: {\n          offset: _offset + (originalSize + realBarGap) * i + (originalSize - size) / 2,\n          size: size\n        }\n      }]);\n\n      if (entry.stackList && entry.stackList.length) {\n        entry.stackList.forEach(function (item) {\n          newRes.push({\n            item: item,\n            position: newRes[newRes.length - 1].position\n          });\n        });\n      }\n\n      return newRes;\n    }, []);\n  }\n\n  return result;\n};\nexport var appendOffsetOfLegend = function appendOffsetOfLegend(offset, items, props, legendBox) {\n  var children = props.children,\n      width = props.width,\n      height = props.height,\n      margin = props.margin;\n  var legendWidth = width - (margin.left || 0) - (margin.right || 0);\n  var legendHeight = height - (margin.top || 0) - (margin.bottom || 0);\n  var legendProps = getLegendProps({\n    children: children,\n    items: items,\n    legendWidth: legendWidth,\n    legendHeight: legendHeight\n  });\n  var newOffset = offset;\n\n  if (legendProps) {\n    var box = legendBox || {};\n    var align = legendProps.align,\n        verticalAlign = legendProps.verticalAlign,\n        layout = legendProps.layout;\n\n    if ((layout === 'vertical' || layout === 'horizontal' && verticalAlign === 'center') && isNumber(offset[align])) {\n      newOffset = _objectSpread({}, offset, _defineProperty({}, align, newOffset[align] + (box.width || 0)));\n    }\n\n    if ((layout === 'horizontal' || layout === 'vertical' && align === 'center') && isNumber(offset[verticalAlign])) {\n      newOffset = _objectSpread({}, offset, _defineProperty({}, verticalAlign, newOffset[verticalAlign] + (box.height || 0)));\n    }\n  }\n\n  return newOffset;\n};\nexport var getDomainOfErrorBars = function getDomainOfErrorBars(data, item, dataKey, axisType) {\n  var children = item.props.children;\n  var errorBars = findAllByType(children, ErrorBar).filter(function (errorBarChild) {\n    var direction = errorBarChild.props.direction;\n    return _isNil(direction) || _isNil(axisType) ? true : axisType.indexOf(direction) >= 0;\n  });\n\n  if (errorBars && errorBars.length) {\n    var keys = errorBars.map(function (errorBarChild) {\n      return errorBarChild.props.dataKey;\n    });\n    return data.reduce(function (result, entry) {\n      var entryValue = getValueByDataKey(entry, dataKey, 0);\n      var mainValue = _isArray(entryValue) ? [_min(entryValue), _max(entryValue)] : [entryValue, entryValue];\n      var errorDomain = keys.reduce(function (prevErrorArr, k) {\n        var errorValue = getValueByDataKey(entry, k, 0);\n        var lowerValue = mainValue[0] - Math.abs(_isArray(errorValue) ? errorValue[0] : errorValue);\n        var upperValue = mainValue[1] + Math.abs(_isArray(errorValue) ? errorValue[1] : errorValue);\n        return [Math.min(lowerValue, prevErrorArr[0]), Math.max(upperValue, prevErrorArr[1])];\n      }, [Infinity, -Infinity]);\n      return [Math.min(errorDomain[0], result[0]), Math.max(errorDomain[1], result[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\nexport var parseErrorBarsOfAxis = function parseErrorBarsOfAxis(data, items, dataKey, axisType) {\n  var domains = items.map(function (item) {\n    return getDomainOfErrorBars(data, item, dataKey, axisType);\n  }).filter(function (entry) {\n    return !_isNil(entry);\n  });\n\n  if (domains && domains.length) {\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  return null;\n};\n/**\n * Get domain of data by the configuration of item element\n * @param  {Array}   data      The data displayed in the chart\n * @param  {Array}   items     The instances of item\n * @param  {String}  type      The type of axis, number - Number Axis, category - Category Axis\n * @param  {Boolean} filterNil Whether or not filter nil values\n * @return {Array}        Domain\n */\n\nexport var getDomainOfItemsWithSameAxis = function getDomainOfItemsWithSameAxis(data, items, type, filterNil) {\n  var domains = items.map(function (item) {\n    var dataKey = item.props.dataKey;\n\n    if (type === 'number' && dataKey) {\n      return getDomainOfErrorBars(data, item, dataKey) || getDomainOfDataByKey(data, dataKey, type, filterNil);\n    }\n\n    return getDomainOfDataByKey(data, dataKey, type, filterNil);\n  });\n\n  if (type === 'number') {\n    // Calculate the domain of number axis\n    return domains.reduce(function (result, entry) {\n      return [Math.min(result[0], entry[0]), Math.max(result[1], entry[1])];\n    }, [Infinity, -Infinity]);\n  }\n\n  var tag = {}; // Get the union set of category axis\n\n  return domains.reduce(function (result, entry) {\n    for (var i = 0, len = entry.length; i < len; i++) {\n      if (!tag[entry[i]]) {\n        tag[entry[i]] = true;\n        result.push(entry[i]);\n      }\n    }\n\n    return result;\n  }, []);\n};\nexport var isCategorialAxis = function isCategorialAxis(layout, axisType) {\n  return layout === 'horizontal' && axisType === 'xAxis' || layout === 'vertical' && axisType === 'yAxis' || layout === 'centric' && axisType === 'angleAxis' || layout === 'radial' && axisType === 'radiusAxis';\n};\n/**\n * Calculate the Coordinates of grid\n * @param  {Array} ticks The ticks in axis\n * @param {Number} min   The minimun value of axis\n * @param {Number} max   The maximun value of axis\n * @return {Array}       Coordinates\n */\n\nexport var getCoordinatesOfGrid = function getCoordinatesOfGrid(ticks, min, max) {\n  var hasMin, hasMax;\n  var values = ticks.map(function (entry) {\n    if (entry.coordinate === min) {\n      hasMin = true;\n    }\n\n    if (entry.coordinate === max) {\n      hasMax = true;\n    }\n\n    return entry.coordinate;\n  });\n\n  if (!hasMin) {\n    values.push(min);\n  }\n\n  if (!hasMax) {\n    values.push(max);\n  }\n\n  return values;\n};\n/**\n * Get the ticks of an axis\n * @param  {Object}  axis The configuration of an axis\n * @param {Boolean} isGrid Whether or not are the ticks in grid\n * @param {Boolean} isAll Return the ticks of all the points or not\n * @return {Array}  Ticks\n */\n\nexport var getTicksOfAxis = function getTicksOfAxis(axis, isGrid, isAll) {\n  if (!axis) return null;\n  var scale = axis.scale;\n  var duplicateDomain = axis.duplicateDomain,\n      type = axis.type,\n      range = axis.range;\n  var offset = (isGrid || isAll) && type === 'category' && scale.bandwidth ? scale.bandwidth() / 2 : 0;\n  offset = axis.axisType === 'angleAxis' ? mathSign(range[0] - range[1]) * 2 * offset : offset; // The ticks setted by user should only affect the ticks adjacent to axis line\n\n  if (isGrid && (axis.ticks || axis.niceTicks)) {\n    return (axis.ticks || axis.niceTicks).map(function (entry) {\n      var scaleContent = duplicateDomain ? duplicateDomain.indexOf(entry) : entry;\n      return {\n        coordinate: scale(scaleContent) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  }\n\n  if (axis.isCategorial && axis.categoricalDomain) {\n    return axis.categoricalDomain.map(function (entry, index) {\n      return {\n        coordinate: scale(entry),\n        value: entry,\n        index: index,\n        offset: offset\n      };\n    });\n  }\n\n  if (scale.ticks && !isAll) {\n    return scale.ticks(axis.tickCount).map(function (entry) {\n      return {\n        coordinate: scale(entry) + offset,\n        value: entry,\n        offset: offset\n      };\n    });\n  } // When axis has duplicated text, serial numbers are used to generate scale\n\n\n  return scale.domain().map(function (entry, index) {\n    return {\n      coordinate: scale(entry) + offset,\n      value: duplicateDomain ? duplicateDomain[entry] : entry,\n      index: index,\n      offset: offset\n    };\n  });\n};\n/**\n * combine the handlers\n * @param  {Function} defaultHandler Internal private handler\n * @param  {Function} parentHandler  Handler function specified in parent component\n * @param  {Function} childHandler   Handler function specified in child component\n * @return {Function}                The combined handler\n */\n\nexport var combineEventHandlers = function combineEventHandlers(defaultHandler, parentHandler, childHandler) {\n  var customizedHandler;\n\n  if (_isFunction(childHandler)) {\n    customizedHandler = childHandler;\n  } else if (_isFunction(parentHandler)) {\n    customizedHandler = parentHandler;\n  }\n\n  if (_isFunction(defaultHandler) || customizedHandler) {\n    return function (arg1, arg2, arg3, arg4) {\n      if (_isFunction(defaultHandler)) {\n        defaultHandler(arg1, arg2, arg3, arg4);\n      }\n\n      if (_isFunction(customizedHandler)) {\n        customizedHandler(arg1, arg2, arg3, arg4);\n      }\n    };\n  }\n\n  return null;\n};\n/**\n * Parse the scale function of axis\n * @param  {Object}   axis          The option of axis\n * @param  {String}   chartType     The displayName of chart\n * @return {Function}               The scale funcion\n */\n\nexport var parseScale = function parseScale(axis, chartType) {\n  var scale = axis.scale,\n      type = axis.type,\n      layout = axis.layout,\n      axisType = axis.axisType;\n\n  if (scale === 'auto') {\n    if (layout === 'radial' && axisType === 'radiusAxis') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    if (layout === 'radial' && axisType === 'angleAxis') {\n      return {\n        scale: d3Scales.scaleLinear(),\n        realScaleType: 'linear'\n      };\n    }\n\n    if (type === 'category' && chartType && (chartType.indexOf('LineChart') >= 0 || chartType.indexOf('AreaChart') >= 0)) {\n      return {\n        scale: d3Scales.scalePoint(),\n        realScaleType: 'point'\n      };\n    }\n\n    if (type === 'category') {\n      return {\n        scale: d3Scales.scaleBand(),\n        realScaleType: 'band'\n      };\n    }\n\n    return {\n      scale: d3Scales.scaleLinear(),\n      realScaleType: 'linear'\n    };\n  }\n\n  if (_isString(scale)) {\n    var name = \"scale\".concat(scale.slice(0, 1).toUpperCase()).concat(scale.slice(1));\n    return {\n      scale: (d3Scales[name] || d3Scales.scalePoint)(),\n      realScaleType: d3Scales[name] ? name : 'point'\n    };\n  }\n\n  return _isFunction(scale) ? {\n    scale: scale\n  } : {\n    scale: d3Scales.scalePoint(),\n    realScaleType: 'point'\n  };\n};\nvar EPS = 1e-4;\nexport var checkDomainOfScale = function checkDomainOfScale(scale) {\n  var domain = scale.domain();\n\n  if (!domain || domain.length <= 2) {\n    return;\n  }\n\n  var len = domain.length;\n  var range = scale.range();\n  var min = Math.min(range[0], range[1]) - EPS;\n  var max = Math.max(range[0], range[1]) + EPS;\n  var first = scale(domain[0]);\n  var last = scale(domain[len - 1]);\n\n  if (first < min || first > max || last < min || last > max) {\n    scale.domain([domain[0], domain[len - 1]]);\n  }\n};\nexport var findPositionOfBar = function findPositionOfBar(barPosition, child) {\n  if (!barPosition) {\n    return null;\n  }\n\n  for (var i = 0, len = barPosition.length; i < len; i++) {\n    if (barPosition[i].item === child) {\n      return barPosition[i].position;\n    }\n  }\n\n  return null;\n};\nexport var truncateByDomain = function truncateByDomain(value, domain) {\n  if (!domain || domain.length !== 2 || !isNumber(domain[0]) || !isNumber(domain[1])) {\n    return value;\n  }\n\n  var min = Math.min(domain[0], domain[1]);\n  var max = Math.max(domain[0], domain[1]);\n  var result = [value[0], value[1]];\n\n  if (!isNumber(value[0]) || value[0] < min) {\n    result[0] = min;\n  }\n\n  if (!isNumber(value[1]) || value[1] > max) {\n    result[1] = max;\n  }\n\n  if (result[0] > max) {\n    result[0] = max;\n  }\n\n  if (result[1] < min) {\n    result[1] = min;\n  }\n\n  return result;\n};\n/* eslint no-param-reassign: 0 */\n\nexport var offsetSign = function offsetSign(series) {\n  var n = series.length;\n\n  if (n <= 0) {\n    return;\n  }\n\n  for (var j = 0, m = series[0].length; j < m; ++j) {\n    var positive = 0;\n    var negative = 0;\n\n    for (var i = 0; i < n; ++i) {\n      var value = _isNaN(series[i][j][1]) ? series[i][j][0] : series[i][j][1];\n      /* eslint-disable prefer-destructuring */\n\n      if (value >= 0) {\n        series[i][j][0] = positive;\n        series[i][j][1] = positive + value;\n        positive = series[i][j][1];\n      } else {\n        series[i][j][0] = negative;\n        series[i][j][1] = negative + value;\n        negative = series[i][j][1];\n      }\n      /* eslint-enable prefer-destructuring */\n\n    }\n  }\n};\nvar STACK_OFFSET_MAP = {\n  sign: offsetSign,\n  expand: stackOffsetExpand,\n  none: stackOffsetNone,\n  silhouette: stackOffsetSilhouette,\n  wiggle: stackOffsetWiggle\n};\nexport var getStackedData = function getStackedData(data, stackItems, offsetType) {\n  var dataKeys = stackItems.map(function (item) {\n    return item.props.dataKey;\n  });\n  var stack = shapeStack().keys(dataKeys).value(function (d, key) {\n    return +getValueByDataKey(d, key, 0);\n  }).order(stackOrderNone).offset(STACK_OFFSET_MAP[offsetType]);\n  return stack(data);\n};\nexport var getStackGroupsByAxisId = function getStackGroupsByAxisId(data, _items, numericAxisId, cateAxisId, offsetType, reverseStackOrder) {\n  if (!data) {\n    return null;\n  } // reversing items to affect render order (for layering)\n\n\n  var items = reverseStackOrder ? _items.reverse() : _items;\n  var stackGroups = items.reduce(function (result, item) {\n    var _item$props3 = item.props,\n        stackId = _item$props3.stackId,\n        hide = _item$props3.hide;\n\n    if (hide) {\n      return result;\n    }\n\n    var axisId = item.props[numericAxisId];\n    var parentGroup = result[axisId] || {\n      hasStack: false,\n      stackGroups: {}\n    };\n\n    if (isNumOrStr(stackId)) {\n      var childGroup = parentGroup.stackGroups[stackId] || {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: []\n      };\n      childGroup.items.push(item);\n      parentGroup.hasStack = true;\n      parentGroup.stackGroups[stackId] = childGroup;\n    } else {\n      parentGroup.stackGroups[uniqueId('_stackId_')] = {\n        numericAxisId: numericAxisId,\n        cateAxisId: cateAxisId,\n        items: [item]\n      };\n    }\n\n    return _objectSpread({}, result, _defineProperty({}, axisId, parentGroup));\n  }, {});\n  return Object.keys(stackGroups).reduce(function (result, axisId) {\n    var group = stackGroups[axisId];\n\n    if (group.hasStack) {\n      group.stackGroups = Object.keys(group.stackGroups).reduce(function (res, stackId) {\n        var g = group.stackGroups[stackId];\n        return _objectSpread({}, res, _defineProperty({}, stackId, {\n          numericAxisId: numericAxisId,\n          cateAxisId: cateAxisId,\n          items: g.items,\n          stackedData: getStackedData(data, g.items, offsetType)\n        }));\n      }, {});\n    }\n\n    return _objectSpread({}, result, _defineProperty({}, axisId, group));\n  }, {});\n};\n/**\n * get domain of ticks\n * @param  {Array} ticks Ticks of axis\n * @param  {String} type  The type of axis\n * @return {Array} domain\n */\n\nexport var calculateDomainOfTicks = function calculateDomainOfTicks(ticks, type) {\n  if (type === 'number') {\n    return [_min(ticks), _max(ticks)];\n  }\n\n  return ticks;\n};\n/**\n * Configure the scale function of axis\n * @param {Object} scale The scale function\n * @param {Object} opts  The configuration of axis\n * @return {Object}      null\n */\n\nexport var getTicksOfScale = function getTicksOfScale(scale, opts) {\n  var realScaleType = opts.realScaleType,\n      type = opts.type,\n      tickCount = opts.tickCount,\n      originalDomain = opts.originalDomain,\n      allowDecimals = opts.allowDecimals;\n  var scaleType = realScaleType || opts.scale;\n\n  if (scaleType !== 'auto' && scaleType !== 'linear') {\n    return null;\n  }\n\n  if (tickCount && type === 'number' && originalDomain && (originalDomain[0] === 'auto' || originalDomain[1] === 'auto')) {\n    // Calculate the ticks by the number of grid when the axis is a number axis\n    var domain = scale.domain();\n    var tickValues = getNiceTickValues(domain, tickCount, allowDecimals);\n    scale.domain(calculateDomainOfTicks(tickValues, type));\n    return {\n      niceTicks: tickValues\n    };\n  }\n\n  if (tickCount && type === 'number') {\n    var _domain = scale.domain();\n\n    var _tickValues = getTickValuesFixedDomain(_domain, tickCount, allowDecimals);\n\n    return {\n      niceTicks: _tickValues\n    };\n  }\n\n  return null;\n};\nexport var getCateCoordinateOfLine = function getCateCoordinateOfLine(_ref6) {\n  var axis = _ref6.axis,\n      ticks = _ref6.ticks,\n      bandSize = _ref6.bandSize,\n      entry = _ref6.entry,\n      index = _ref6.index,\n      dataKey = _ref6.dataKey;\n\n  if (axis.type === 'category') {\n    // find coordinate of category axis by the value of category\n    if (!axis.allowDuplicatedCategory && axis.dataKey && !_isNil(entry[axis.dataKey])) {\n      var matchedTick = findEntryInArray(ticks, 'value', entry[axis.dataKey]);\n\n      if (matchedTick) {\n        return matchedTick.coordinate + bandSize / 2;\n      }\n    }\n\n    return ticks[index] ? ticks[index].coordinate + bandSize / 2 : null;\n  }\n\n  var value = getValueByDataKey(entry, !_isNil(dataKey) ? dataKey : axis.dataKey);\n  return !_isNil(value) ? axis.scale(value) : null;\n};\nexport var getCateCoordinateOfBar = function getCateCoordinateOfBar(_ref7) {\n  var axis = _ref7.axis,\n      ticks = _ref7.ticks,\n      offset = _ref7.offset,\n      bandSize = _ref7.bandSize,\n      entry = _ref7.entry,\n      index = _ref7.index;\n\n  if (axis.type === 'category') {\n    return ticks[index] ? ticks[index].coordinate + offset : null;\n  }\n\n  var value = getValueByDataKey(entry, axis.dataKey, axis.domain[index]);\n  return !_isNil(value) ? axis.scale(value) - bandSize / 2 + offset : null;\n};\nexport var getBaseValueOfBar = function getBaseValueOfBar(_ref8) {\n  var numericAxis = _ref8.numericAxis;\n  var domain = numericAxis.scale.domain();\n\n  if (numericAxis.type === 'number') {\n    var min = Math.min(domain[0], domain[1]);\n    var max = Math.max(domain[0], domain[1]);\n\n    if (min <= 0 && max >= 0) {\n      return 0;\n    }\n\n    if (max < 0) {\n      return max;\n    }\n\n    return min;\n  }\n\n  return domain[0];\n};\nexport var getStackedDataOfItem = function getStackedDataOfItem(item, stackGroups) {\n  var stackId = item.props.stackId;\n\n  if (isNumOrStr(stackId)) {\n    var group = stackGroups[stackId];\n\n    if (group && group.items.length) {\n      var itemIndex = -1;\n\n      for (var i = 0, len = group.items.length; i < len; i++) {\n        if (group.items[i] === item) {\n          itemIndex = i;\n          break;\n        }\n      }\n\n      return itemIndex >= 0 ? group.stackedData[itemIndex] : null;\n    }\n  }\n\n  return null;\n};\n\nvar getDomainOfSingle = function getDomainOfSingle(data) {\n  return data.reduce(function (result, entry) {\n    return [_min(entry.concat([result[0]]).filter(isNumber)), _max(entry.concat([result[1]]).filter(isNumber))];\n  }, [Infinity, -Infinity]);\n};\n\nexport var getDomainOfStackGroups = function getDomainOfStackGroups(stackGroups, startIndex, endIndex) {\n  return Object.keys(stackGroups).reduce(function (result, stackId) {\n    var group = stackGroups[stackId];\n    var stackedData = group.stackedData;\n    var domain = stackedData.reduce(function (res, entry) {\n      var s = getDomainOfSingle(entry.slice(startIndex, endIndex + 1));\n      return [Math.min(res[0], s[0]), Math.max(res[1], s[1])];\n    }, [Infinity, -Infinity]);\n    return [Math.min(domain[0], result[0]), Math.max(domain[1], result[1])];\n  }, [Infinity, -Infinity]).map(function (result) {\n    return result === Infinity || result === -Infinity ? 0 : result;\n  });\n};\nexport var MIN_VALUE_REG = /^dataMin[\\s]*-[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexport var MAX_VALUE_REG = /^dataMax[\\s]*\\+[\\s]*([0-9]+([.]{1}[0-9]+){0,1})$/;\nexport var parseSpecifiedDomain = function parseSpecifiedDomain(specifiedDomain, dataDomain, allowDataOverflow) {\n  if (!_isArray(specifiedDomain)) {\n    return dataDomain;\n  }\n\n  var domain = [];\n  /* eslint-disable prefer-destructuring */\n\n  if (isNumber(specifiedDomain[0])) {\n    domain[0] = allowDataOverflow ? specifiedDomain[0] : Math.min(specifiedDomain[0], dataDomain[0]);\n  } else if (MIN_VALUE_REG.test(specifiedDomain[0])) {\n    var value = +MIN_VALUE_REG.exec(specifiedDomain[0])[1];\n    domain[0] = dataDomain[0] - value;\n  } else if (_isFunction(specifiedDomain[0])) {\n    domain[0] = specifiedDomain[0](dataDomain[0]);\n  } else {\n    domain[0] = dataDomain[0];\n  }\n\n  if (isNumber(specifiedDomain[1])) {\n    domain[1] = allowDataOverflow ? specifiedDomain[1] : Math.max(specifiedDomain[1], dataDomain[1]);\n  } else if (MAX_VALUE_REG.test(specifiedDomain[1])) {\n    var _value = +MAX_VALUE_REG.exec(specifiedDomain[1])[1];\n\n    domain[1] = dataDomain[1] + _value;\n  } else if (_isFunction(specifiedDomain[1])) {\n    domain[1] = specifiedDomain[1](dataDomain[1]);\n  } else {\n    domain[1] = dataDomain[1];\n  }\n  /* eslint-enable prefer-destructuring */\n\n\n  return domain;\n};\n/**\n * Calculate the size between two category\n * @param  {Object} axis  The options of axis\n * @param  {Array}  ticks The ticks of axis\n * @return {Number} Size\n */\n\nexport var getBandSizeOfAxis = function getBandSizeOfAxis(axis, ticks) {\n  if (axis && axis.scale && axis.scale.bandwidth) {\n    return axis.scale.bandwidth();\n  }\n\n  if (axis && ticks && ticks.length >= 2) {\n    var orderedTicks = _sortBy(ticks, function (o) {\n      return o.coordinate;\n    });\n\n    var bandSize = Infinity;\n\n    for (var i = 1, len = orderedTicks.length; i < len; i++) {\n      var cur = orderedTicks[i];\n      var prev = orderedTicks[i - 1];\n      bandSize = Math.min((cur.coordinate || 0) - (prev.coordinate || 0), bandSize);\n    }\n\n    return bandSize === Infinity ? 0 : bandSize;\n  }\n\n  return 0;\n};\n/**\n * parse the domain of a category axis when a domain is specified\n * @param   {Array}        specifiedDomain  The domain specified by users\n * @param   {Array}        calculatedDomain The domain calculated by dateKey\n * @param   {ReactElement} axisChild        The axis element\n * @returns {Array}        domains\n */\n\nexport var parseDomainOfCategoryAxis = function parseDomainOfCategoryAxis(specifiedDomain, calculatedDomain, axisChild) {\n  if (!specifiedDomain || !specifiedDomain.length) {\n    return calculatedDomain;\n  }\n\n  if (_isEqual(specifiedDomain, _get(axisChild, 'type.defaultProps.domain'))) {\n    return calculatedDomain;\n  }\n\n  return specifiedDomain;\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}