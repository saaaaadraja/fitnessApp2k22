{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * ShapeLayouter.ts class for EJ2-PDF\n * @private\n */\n\n\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutBreakType, PdfLayoutType } from './../../figures/enum';\nimport { BeginPageLayoutEventArgs, EndPageLayoutEventArgs } from './../../../structured-elements/grid/layout/grid-layouter';\n/**\n * ShapeLayouter class.\n * @private\n */\n\nvar ShapeLayouter =\n/** @class */\nfunction (_super) {\n  __extends(ShapeLayouter, _super); // Constructors\n\n  /**\n   * Initializes a new instance of the `ShapeLayouter` class.\n   * @private\n   */\n\n\n  function ShapeLayouter(element) {\n    var _this = _super.call(this, element) || this; // Fields\n\n    /**\n     * Initializes the object to store `older form elements` of previous page.\n     * @default 0\n     * @private\n     */\n\n\n    _this.olderPdfForm = 0;\n    /**\n     * The `bounds` of the shape element.\n     * * @default new RectangleF()\n     * @private\n     */\n\n    _this.shapeBounds = new RectangleF();\n    /**\n     * Total Page size of the web page.\n     * * @default 0\n     * @private\n     */\n\n    _this.totalPageSize = 0;\n    return _this;\n  }\n\n  Object.defineProperty(ShapeLayouter.prototype, \"element\", {\n    // Properties\n\n    /**\n     * Gets shape element.\n     * @private\n     */\n    get: function get() {\n      return this.elements;\n    },\n    enumerable: true,\n    configurable: true\n  }); // Implementation\n\n  /**\n   * Layouts the element.\n   * @private\n   */\n\n  ShapeLayouter.prototype.layoutInternal = function (param) {\n    var currentPage = param.page;\n    var currentBounds = param.bounds;\n    var shapeLayoutBounds = this.element.getBounds();\n    shapeLayoutBounds.x = 0;\n    shapeLayoutBounds.y = 0;\n    /* tslint:disable */\n\n    var isEmpty = this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0 ? true : false;\n    /* tslint:enable */\n\n    if (this.isPdfGrid && !isEmpty) {\n      shapeLayoutBounds = this.shapeBounds;\n    }\n\n    var result = null;\n    var pageResult = new ShapeLayoutResult();\n    pageResult.page = currentPage;\n    /*tslint:disable:no-constant-condition */\n\n    while (true) {\n      // Raise event.\n      var result1 = this.raiseBeforePageLayout(currentPage, currentBounds);\n      currentBounds = result1.currentBounds;\n      var endArgs = null;\n\n      if (!result1.cancel) {\n        pageResult = this.layoutOnPage(currentPage, currentBounds, shapeLayoutBounds, param); // Raise event.\n\n        endArgs = this.raiseEndPageLayout(pageResult);\n        result1.cancel = endArgs === null ? false : endArgs.cancel;\n      }\n\n      if (!pageResult.end && !result1.cancel) {\n        currentBounds = this.getPaginateBounds(param);\n        shapeLayoutBounds = this.getNextShapeBounds(shapeLayoutBounds, pageResult);\n        currentPage = endArgs === null || endArgs.nextPage === null ? this.getNextPage(currentPage) : endArgs.nextPage;\n\n        if (this.isPdfGrid) {\n          result = this.getLayoutResult(pageResult);\n          break;\n        }\n      } else {\n        result = this.getLayoutResult(pageResult);\n        break;\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Raises BeforePageLayout event.\n   * @private\n   */\n\n\n  ShapeLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds) {\n    var cancel = false;\n\n    if (this.element.raiseBeginPageLayout) {\n      var args = new BeginPageLayoutEventArgs(currentBounds, currentPage);\n      this.element.onBeginPageLayout(args);\n      cancel = args.cancel;\n      currentBounds = args.bounds;\n    }\n\n    return {\n      currentBounds: currentBounds,\n      cancel: cancel\n    };\n  };\n  /**\n   * Raises PageLayout event if needed.\n   * @private\n   */\n\n\n  ShapeLayouter.prototype.raiseEndPageLayout = function (pageResult) {\n    var args = null;\n\n    if (this.element.raiseEndPageLayout) {\n      var res = this.getLayoutResult(pageResult);\n      args = new EndPageLayoutEventArgs(res);\n      this.element.onEndPageLayout(args);\n    }\n\n    return args;\n  };\n  /**\n   * Creates layout result.\n   * @private\n   */\n\n\n  ShapeLayouter.prototype.getLayoutResult = function (pageResult) {\n    var result = new PdfLayoutResult(pageResult.page, pageResult.bounds);\n    return result;\n  };\n  /**\n   * Calculates the next active shape bounds.\n   * @private\n   */\n\n\n  ShapeLayouter.prototype.getNextShapeBounds = function (shapeLayoutBounds, pageResult) {\n    var layoutedBounds = pageResult.bounds;\n    shapeLayoutBounds.y = shapeLayoutBounds.y + layoutedBounds.height;\n    shapeLayoutBounds.height = shapeLayoutBounds.height - layoutedBounds.height;\n    return shapeLayoutBounds;\n  };\n  /**\n   * Layouts the element on the current page.\n   * @private\n   */\n\n\n  ShapeLayouter.prototype.layoutOnPage = function (currentPage, curBounds, sBounds, param) {\n    var result = new ShapeLayoutResult();\n    curBounds = this.checkCorrectCurrentBounds(currentPage, curBounds, param);\n    var fitToPage = this.fitsToBounds(curBounds, sBounds);\n    var canDraw = !(param.format.break === PdfLayoutBreakType.FitElement && !fitToPage && currentPage === param.page);\n    var shapeFinished = false;\n\n    if (canDraw) {\n      var drawRectangle = this.getDrawBounds(curBounds, sBounds);\n      this.drawShape(currentPage.graphics, curBounds, drawRectangle);\n      result.bounds = this.getPageResultBounds(curBounds, sBounds);\n      shapeFinished = curBounds.height >= sBounds.height;\n    }\n\n    result.end = shapeFinished || param.format.layout === PdfLayoutType.OnePage;\n    result.page = currentPage;\n    return result;\n  };\n  /**\n   * Returns Rectangle for element drawing on the page.\n   * @private\n   */\n\n\n  ShapeLayouter.prototype.getDrawBounds = function (currentBounds, shapeLayoutBounds) {\n    var result = currentBounds;\n    result.y = result.y - shapeLayoutBounds.y;\n    result.height = result.height + shapeLayoutBounds.y;\n    return result;\n  };\n  /**\n   * Draws the shape.\n   * @private\n   */\n\n\n  ShapeLayouter.prototype.drawShape = function (g, currentBounds, drawRectangle) {\n    var gState = g.save();\n\n    try {\n      g.setClip(currentBounds);\n      this.element.drawGraphicsHelper(g, new PointF(drawRectangle.x, drawRectangle.y));\n    } finally {\n      g.restore(gState);\n    }\n  };\n  /**\n   * Corrects current bounds on the page.\n   * @protected\n   */\n\n\n  ShapeLayouter.prototype.checkCorrectCurrentBounds = function (currentPage, curBounds, param) {\n    var pageSize = currentPage.graphics.clientSize;\n    curBounds.width = curBounds.width > 0 ? curBounds.width : pageSize.width - curBounds.x;\n    curBounds.height = curBounds.height > 0 ? curBounds.height : pageSize.height - curBounds.y;\n\n    if (this.isPdfGrid) {\n      curBounds.height = curBounds.height - this.bottomCellPadding;\n    }\n\n    return curBounds;\n  };\n  /**\n   * Calculates bounds where the shape was layout on the page.\n   * @private\n   */\n\n\n  ShapeLayouter.prototype.getPageResultBounds = function (currentBounds, shapeLayoutBounds) {\n    var result = currentBounds;\n    result.height = Math.min(result.height, shapeLayoutBounds.height);\n    return result;\n  };\n  /**\n   * Checks whether shape rectangle fits to the lay outing bounds.\n   * @private\n   */\n\n\n  ShapeLayouter.prototype.fitsToBounds = function (currentBounds, shapeLayoutBounds) {\n    var fits = shapeLayoutBounds.height <= currentBounds.height;\n    return fits;\n  };\n  /**\n   * Initializes the offset `index`.\n   * * @default 0\n   * @private\n   */\n\n\n  ShapeLayouter.index = 0;\n  /**\n   * Initializes the `difference in page height`.\n   * * @default 0\n   * @private\n   */\n\n  ShapeLayouter.splitDiff = 0;\n  /**\n   * Determines the `end of Vertical offset` values.\n   * * @default false\n   * @private\n   */\n\n  ShapeLayouter.last = false;\n  /**\n   * Determines the document link annotation `border width`.\n   * * @default 0\n   * @private\n   */\n\n  ShapeLayouter.borderWidth = 0;\n  return ShapeLayouter;\n}(ElementLayouter);\n\nexport { ShapeLayouter };\n/**\n * Contains lay outing result settings.\n * @private\n */\n\nvar ShapeLayoutResult =\n/** @class */\nfunction () {\n  function ShapeLayoutResult() {}\n\n  return ShapeLayoutResult;\n}();","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","ElementLayouter","PdfLayoutResult","RectangleF","PointF","PdfLayoutBreakType","PdfLayoutType","BeginPageLayoutEventArgs","EndPageLayoutEventArgs","ShapeLayouter","_super","element","_this","call","olderPdfForm","shapeBounds","totalPageSize","defineProperty","get","elements","enumerable","configurable","layoutInternal","param","currentPage","page","currentBounds","bounds","shapeLayoutBounds","getBounds","x","y","isEmpty","width","height","isPdfGrid","result","pageResult","ShapeLayoutResult","result1","raiseBeforePageLayout","endArgs","cancel","layoutOnPage","raiseEndPageLayout","end","getPaginateBounds","getNextShapeBounds","nextPage","getNextPage","getLayoutResult","raiseBeginPageLayout","args","onBeginPageLayout","res","onEndPageLayout","layoutedBounds","curBounds","sBounds","checkCorrectCurrentBounds","fitToPage","fitsToBounds","canDraw","format","break","FitElement","shapeFinished","drawRectangle","getDrawBounds","drawShape","graphics","getPageResultBounds","layout","OnePage","g","gState","save","setClip","drawGraphicsHelper","restore","pageSize","clientSize","bottomCellPadding","Math","min","fits","index","splitDiff","last","borderWidth"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/figures/base/shape-layouter.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * ShapeLayouter.ts class for EJ2-PDF\n * @private\n */\nimport { ElementLayouter, PdfLayoutResult } from './element-layouter';\nimport { RectangleF, PointF } from './../../../drawing/pdf-drawing';\nimport { PdfLayoutBreakType, PdfLayoutType } from './../../figures/enum';\nimport { BeginPageLayoutEventArgs, EndPageLayoutEventArgs } from './../../../structured-elements/grid/layout/grid-layouter';\n/**\n * ShapeLayouter class.\n * @private\n */\nvar ShapeLayouter = /** @class */ (function (_super) {\n    __extends(ShapeLayouter, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `ShapeLayouter` class.\n     * @private\n     */\n    function ShapeLayouter(element) {\n        var _this = _super.call(this, element) || this;\n        // Fields\n        /**\n         * Initializes the object to store `older form elements` of previous page.\n         * @default 0\n         * @private\n         */\n        _this.olderPdfForm = 0;\n        /**\n         * The `bounds` of the shape element.\n         * * @default new RectangleF()\n         * @private\n         */\n        _this.shapeBounds = new RectangleF();\n        /**\n         * Total Page size of the web page.\n         * * @default 0\n         * @private\n         */\n        _this.totalPageSize = 0;\n        return _this;\n    }\n    Object.defineProperty(ShapeLayouter.prototype, \"element\", {\n        // Properties\n        /**\n         * Gets shape element.\n         * @private\n         */\n        get: function () {\n            return this.elements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * Layouts the element.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutInternal = function (param) {\n        var currentPage = param.page;\n        var currentBounds = param.bounds;\n        var shapeLayoutBounds = this.element.getBounds();\n        shapeLayoutBounds.x = 0;\n        shapeLayoutBounds.y = 0;\n        /* tslint:disable */\n        var isEmpty = (this.shapeBounds.x === this.shapeBounds.y && this.shapeBounds.y === this.shapeBounds.width && this.shapeBounds.width === this.shapeBounds.height && this.shapeBounds.height === 0) ? true : false;\n        /* tslint:enable */\n        if ((this.isPdfGrid) && (!(isEmpty))) {\n            shapeLayoutBounds = this.shapeBounds;\n        }\n        var result = null;\n        var pageResult = new ShapeLayoutResult();\n        pageResult.page = currentPage;\n        /*tslint:disable:no-constant-condition */\n        while (true) {\n            // Raise event.\n            var result1 = this.raiseBeforePageLayout(currentPage, currentBounds);\n            currentBounds = result1.currentBounds;\n            var endArgs = null;\n            if (!result1.cancel) {\n                pageResult = this.layoutOnPage(currentPage, currentBounds, shapeLayoutBounds, param);\n                // Raise event.\n                endArgs = this.raiseEndPageLayout(pageResult);\n                result1.cancel = (endArgs === null) ? false : endArgs.cancel;\n            }\n            if (!pageResult.end && !result1.cancel) {\n                currentBounds = this.getPaginateBounds(param);\n                shapeLayoutBounds = this.getNextShapeBounds(shapeLayoutBounds, pageResult);\n                currentPage = (endArgs === null || endArgs.nextPage === null) ?\n                    this.getNextPage(currentPage) : endArgs.nextPage;\n                if (this.isPdfGrid) {\n                    result = this.getLayoutResult(pageResult);\n                    break;\n                }\n            }\n            else {\n                result = this.getLayoutResult(pageResult);\n                break;\n            }\n        }\n        return result;\n    };\n    /**\n     * Raises BeforePageLayout event.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseBeforePageLayout = function (currentPage, currentBounds) {\n        var cancel = false;\n        if (this.element.raiseBeginPageLayout) {\n            var args = new BeginPageLayoutEventArgs(currentBounds, currentPage);\n            this.element.onBeginPageLayout(args);\n            cancel = args.cancel;\n            currentBounds = args.bounds;\n        }\n        return { currentBounds: currentBounds, cancel: cancel };\n    };\n    /**\n     * Raises PageLayout event if needed.\n     * @private\n     */\n    ShapeLayouter.prototype.raiseEndPageLayout = function (pageResult) {\n        var args = null;\n        if (this.element.raiseEndPageLayout) {\n            var res = this.getLayoutResult(pageResult);\n            args = new EndPageLayoutEventArgs(res);\n            this.element.onEndPageLayout(args);\n        }\n        return args;\n    };\n    /**\n     * Creates layout result.\n     * @private\n     */\n    ShapeLayouter.prototype.getLayoutResult = function (pageResult) {\n        var result = new PdfLayoutResult(pageResult.page, pageResult.bounds);\n        return result;\n    };\n    /**\n     * Calculates the next active shape bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.getNextShapeBounds = function (shapeLayoutBounds, pageResult) {\n        var layoutedBounds = pageResult.bounds;\n        shapeLayoutBounds.y = (shapeLayoutBounds.y + layoutedBounds.height);\n        shapeLayoutBounds.height = (shapeLayoutBounds.height - layoutedBounds.height);\n        return shapeLayoutBounds;\n    };\n    /**\n     * Layouts the element on the current page.\n     * @private\n     */\n    ShapeLayouter.prototype.layoutOnPage = function (currentPage, curBounds, sBounds, param) {\n        var result = new ShapeLayoutResult();\n        curBounds = this.checkCorrectCurrentBounds(currentPage, curBounds, param);\n        var fitToPage = this.fitsToBounds(curBounds, sBounds);\n        var canDraw = !((param.format.break === PdfLayoutBreakType.FitElement)\n            && (!fitToPage && (currentPage === param.page)));\n        var shapeFinished = false;\n        if (canDraw) {\n            var drawRectangle = this.getDrawBounds(curBounds, sBounds);\n            this.drawShape(currentPage.graphics, curBounds, drawRectangle);\n            result.bounds = this.getPageResultBounds(curBounds, sBounds);\n            shapeFinished = ((curBounds.height) >= (sBounds.height));\n        }\n        result.end = (shapeFinished || (param.format.layout === PdfLayoutType.OnePage));\n        result.page = currentPage;\n        return result;\n    };\n    /**\n     * Returns Rectangle for element drawing on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getDrawBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.y = (result.y - shapeLayoutBounds.y);\n        result.height = (result.height + shapeLayoutBounds.y);\n        return result;\n    };\n    /**\n     * Draws the shape.\n     * @private\n     */\n    ShapeLayouter.prototype.drawShape = function (g, currentBounds, drawRectangle) {\n        var gState = g.save();\n        try {\n            g.setClip(currentBounds);\n            this.element.drawGraphicsHelper(g, new PointF(drawRectangle.x, drawRectangle.y));\n        }\n        finally {\n            g.restore(gState);\n        }\n    };\n    /**\n     * Corrects current bounds on the page.\n     * @protected\n     */\n    ShapeLayouter.prototype.checkCorrectCurrentBounds = function (currentPage, curBounds, param) {\n        var pageSize = currentPage.graphics.clientSize;\n        curBounds.width = (curBounds.width > 0) ? curBounds.width : (pageSize.width - curBounds.x);\n        curBounds.height = (curBounds.height > 0) ? curBounds.height : (pageSize.height - curBounds.y);\n        if (this.isPdfGrid) {\n            curBounds.height = (curBounds.height - this.bottomCellPadding);\n        }\n        return curBounds;\n    };\n    /**\n     * Calculates bounds where the shape was layout on the page.\n     * @private\n     */\n    ShapeLayouter.prototype.getPageResultBounds = function (currentBounds, shapeLayoutBounds) {\n        var result = currentBounds;\n        result.height = Math.min(result.height, shapeLayoutBounds.height);\n        return result;\n    };\n    /**\n     * Checks whether shape rectangle fits to the lay outing bounds.\n     * @private\n     */\n    ShapeLayouter.prototype.fitsToBounds = function (currentBounds, shapeLayoutBounds) {\n        var fits = (shapeLayoutBounds.height <= currentBounds.height);\n        return fits;\n    };\n    /**\n     * Initializes the offset `index`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.index = 0;\n    /**\n     * Initializes the `difference in page height`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.splitDiff = 0;\n    /**\n     * Determines the `end of Vertical offset` values.\n     * * @default false\n     * @private\n     */\n    ShapeLayouter.last = false;\n    /**\n     * Determines the document link annotation `border width`.\n     * * @default 0\n     * @private\n     */\n    ShapeLayouter.borderWidth = 0;\n    return ShapeLayouter;\n}(ElementLayouter));\nexport { ShapeLayouter };\n/**\n * Contains lay outing result settings.\n * @private\n */\nvar ShapeLayoutResult = /** @class */ (function () {\n    function ShapeLayoutResult() {\n    }\n    return ShapeLayoutResult;\n}());\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}