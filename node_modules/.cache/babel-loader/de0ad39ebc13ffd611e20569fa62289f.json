{"ast":null,"code":"/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\n\nvar PdfTransformationMatrix =\n/** @class */\nfunction () {\n  function PdfTransformationMatrix(value) {\n    /**\n     * Value for `angle converting`.\n     * @default 180.0 / Math.PI\n     * @private\n     */\n    this.radDegFactor = 180.0 / Math.PI;\n\n    if (typeof value === 'undefined') {\n      this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n    } else {\n      this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n    }\n  }\n\n  Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n    // Properties\n\n    /**\n     * Gets or sets the `internal matrix object`.\n     * @private\n     */\n    get: function get() {\n      return this.transformationMatrix;\n    },\n    set: function set(value) {\n      this.transformationMatrix = value;\n    },\n    enumerable: true,\n    configurable: true\n  }); // Public methods\n\n  /**\n   * `Translates` coordinates by specified coordinates.\n   * @private\n   */\n\n  PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n    this.transformationMatrix.translate(offsetX, offsetY);\n  };\n  /**\n   * `Scales` coordinates by specified coordinates.\n   * @private\n   */\n\n\n  PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n    this.transformationMatrix.elements[0] = scaleX;\n    this.transformationMatrix.elements[3] = scaleY;\n  };\n  /**\n   * `Rotates` coordinate system in counterclockwise direction.\n   * @private\n   */\n\n\n  PdfTransformationMatrix.prototype.rotate = function (angle) {\n    //Convert from degree to radian \n    angle = angle * Math.PI / 180; //Rotation \n\n    this.transformationMatrix.elements[0] = Math.cos(angle);\n    this.transformationMatrix.elements[1] = Math.sin(angle);\n    this.transformationMatrix.elements[2] = -Math.sin(angle);\n    this.transformationMatrix.elements[3] = Math.cos(angle);\n  }; // Overrides\n\n  /**\n   * Gets `PDF representation`.\n   * @private\n   */\n\n\n  PdfTransformationMatrix.prototype.toString = function () {\n    var builder = '';\n    var whitespace = ' ';\n\n    for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n      var temp = this.matrix.elements[i];\n      builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n      builder += whitespace;\n    }\n\n    return builder;\n  }; // Implementation\n\n  /**\n   * `Multiplies` matrices (changes coordinate system.)\n   * @private\n   */\n\n\n  PdfTransformationMatrix.prototype.multiply = function (matrix) {\n    this.transformationMatrix.multiply(matrix.matrix);\n  };\n  /**\n   * Converts `degrees to radians`.\n   * @private\n   */\n\n\n  PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n    return this.degRadFactor * degreesX;\n  };\n  /**\n   * Converts `radians to degrees`.\n   * @private\n   */\n\n\n  PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n    return this.radDegFactor * radians;\n  };\n  /**\n   * `Clones` this instance of PdfTransformationMatrix.\n   * @private\n   */\n\n\n  PdfTransformationMatrix.prototype.clone = function () {\n    return this;\n  }; // Constants\n\n  /**\n   * Value for `angle converting`.\n   * @default Math.PI / 180.0\n   * @private\n   */\n\n\n  PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n  return PdfTransformationMatrix;\n}();\n\nexport { PdfTransformationMatrix };\n\nvar Matrix =\n/** @class */\nfunction () {\n  function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n    if (typeof arg1 === 'undefined') {\n      this.metrixElements = [];\n    } else if (typeof arg1 === 'number') {\n      this.metrixElements = [];\n      this.metrixElements.push(arg1);\n      this.metrixElements.push(arg2);\n      this.metrixElements.push(arg3);\n      this.metrixElements.push(arg4);\n      this.metrixElements.push(arg5);\n      this.metrixElements.push(arg6);\n    } else {\n      this.metrixElements = arg1;\n    }\n  }\n\n  Object.defineProperty(Matrix.prototype, \"elements\", {\n    // Properties\n\n    /**\n     * Gets the `elements`.\n     * @private\n     */\n    get: function get() {\n      return this.metrixElements;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Matrix.prototype, \"offsetX\", {\n    /**\n     * Gets the off set `X`.\n     * @private\n     */\n    get: function get() {\n      return this.metrixElements[4];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Matrix.prototype, \"offsetY\", {\n    /**\n     * Gets the off set `Y`.\n     * @private\n     */\n    get: function get() {\n      return this.metrixElements[5];\n    },\n    enumerable: true,\n    configurable: true\n  }); // Implementation\n\n  /**\n   * `Translates` coordinates by specified coordinates.\n   * @private\n   */\n\n  Matrix.prototype.translate = function (offsetX, offsetY) {\n    this.metrixElements[4] = offsetX;\n    this.metrixElements[5] = offsetY;\n  };\n  /**\n   * `Translates` the specified offset X.\n   * @private\n   */\n\n\n  Matrix.prototype.transform = function (point) {\n    var x = point.x;\n    var y = point.y;\n    var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n    var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n    return new PointF(x2, y2);\n  };\n  /**\n   * `Multiplies matrices` (changes coordinate system.)\n   * @private\n   */\n\n\n  Matrix.prototype.multiply = function (matrix) {\n    var tempMatrix = [];\n    tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n    tempMatrix[1] = this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3];\n    tempMatrix[2] = this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2];\n    tempMatrix[3] = this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3];\n    tempMatrix[4] = this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX;\n    tempMatrix[5] = this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY;\n\n    for (var i = 0; i < tempMatrix.length; i++) {\n      this.elements[i] = tempMatrix[i];\n    }\n  }; // IDisposable Members\n\n  /**\n   * `Dispose` this instance of PdfTransformationMatrix class.\n   * @private\n   */\n\n\n  Matrix.prototype.dispose = function () {\n    this.metrixElements = null;\n  }; // ICloneable Members\n\n  /**\n   * `Clones` this instance of PdfTransformationMatrix class.\n   * @private\n   */\n\n\n  Matrix.prototype.clone = function () {\n    var m = new Matrix(this.metrixElements);\n    return m;\n  };\n\n  return Matrix;\n}();\n\nexport { Matrix };","map":{"version":3,"names":["PointF","PdfNumber","PdfTransformationMatrix","value","radDegFactor","Math","PI","transformationMatrix","Matrix","Object","defineProperty","prototype","get","set","enumerable","configurable","translate","offsetX","offsetY","scale","scaleX","scaleY","elements","rotate","angle","cos","sin","toString","builder","whitespace","i","len","length","temp","matrix","floatToString","multiply","degreesToRadians","degreesX","degRadFactor","radiansToDegrees","radians","clone","arg1","arg2","arg3","arg4","arg5","arg6","metrixElements","push","transform","point","x","y","x2","y2","tempMatrix","dispose","m"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/pdf-transformation-matrix.js"],"sourcesContent":["/**\n * PdfTransformationMatrix.ts class for EJ2-PDF\n */\nimport { PointF } from './../drawing/pdf-drawing';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * Class for representing Root `transformation matrix`.\n */\nvar PdfTransformationMatrix = /** @class */ (function () {\n    function PdfTransformationMatrix(value) {\n        /**\n         * Value for `angle converting`.\n         * @default 180.0 / Math.PI\n         * @private\n         */\n        this.radDegFactor = 180.0 / Math.PI;\n        if (typeof value === 'undefined') {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, 1.00, 0.00, 0.00);\n        }\n        else {\n            this.transformationMatrix = new Matrix(1.00, 0.00, 0.00, -1.00, 0.00, 0.00);\n        }\n    }\n    Object.defineProperty(PdfTransformationMatrix.prototype, \"matrix\", {\n        // Properties\n        /**\n         * Gets or sets the `internal matrix object`.\n         * @private\n         */\n        get: function () {\n            return this.transformationMatrix;\n        },\n        set: function (value) {\n            this.transformationMatrix = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Public methods\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.translate = function (offsetX, offsetY) {\n        this.transformationMatrix.translate(offsetX, offsetY);\n    };\n    /**\n     * `Scales` coordinates by specified coordinates.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.scale = function (scaleX, scaleY) {\n        this.transformationMatrix.elements[0] = scaleX;\n        this.transformationMatrix.elements[3] = scaleY;\n    };\n    /**\n     * `Rotates` coordinate system in counterclockwise direction.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.rotate = function (angle) {\n        //Convert from degree to radian \n        angle = (angle * Math.PI) / 180;\n        //Rotation \n        this.transformationMatrix.elements[0] = Math.cos(angle);\n        this.transformationMatrix.elements[1] = Math.sin(angle);\n        this.transformationMatrix.elements[2] = -Math.sin(angle);\n        this.transformationMatrix.elements[3] = Math.cos(angle);\n    };\n    // Overrides\n    /**\n     * Gets `PDF representation`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.toString = function () {\n        var builder = '';\n        var whitespace = ' ';\n        for (var i = 0, len = this.transformationMatrix.elements.length; i < len; i++) {\n            var temp = this.matrix.elements[i];\n            builder += PdfNumber.floatToString(this.transformationMatrix.elements[i]);\n            builder += whitespace;\n        }\n        return builder;\n    };\n    // Implementation\n    /**\n     * `Multiplies` matrices (changes coordinate system.)\n     * @private\n     */\n    PdfTransformationMatrix.prototype.multiply = function (matrix) {\n        this.transformationMatrix.multiply(matrix.matrix);\n    };\n    /**\n     * Converts `degrees to radians`.\n     * @private\n     */\n    PdfTransformationMatrix.degreesToRadians = function (degreesX) {\n        return this.degRadFactor * degreesX;\n    };\n    /**\n     * Converts `radians to degrees`.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.radiansToDegrees = function (radians) {\n        return this.radDegFactor * radians;\n    };\n    /**\n     * `Clones` this instance of PdfTransformationMatrix.\n     * @private\n     */\n    PdfTransformationMatrix.prototype.clone = function () {\n        return this;\n    };\n    // Constants\n    /**\n     * Value for `angle converting`.\n     * @default Math.PI / 180.0\n     * @private\n     */\n    PdfTransformationMatrix.degRadFactor = Math.PI / 180.0;\n    return PdfTransformationMatrix;\n}());\nexport { PdfTransformationMatrix };\nvar Matrix = /** @class */ (function () {\n    function Matrix(arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (typeof arg1 === 'undefined') {\n            this.metrixElements = [];\n        }\n        else if (typeof arg1 === 'number') {\n            this.metrixElements = [];\n            this.metrixElements.push(arg1);\n            this.metrixElements.push(arg2);\n            this.metrixElements.push(arg3);\n            this.metrixElements.push(arg4);\n            this.metrixElements.push(arg5);\n            this.metrixElements.push(arg6);\n        }\n        else {\n            this.metrixElements = arg1;\n        }\n    }\n    Object.defineProperty(Matrix.prototype, \"elements\", {\n        // Properties\n        /**\n         * Gets the `elements`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetX\", {\n        /**\n         * Gets the off set `X`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[4];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Matrix.prototype, \"offsetY\", {\n        /**\n         * Gets the off set `Y`.\n         * @private\n         */\n        get: function () {\n            return this.metrixElements[5];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Translates` coordinates by specified coordinates.\n     * @private\n     */\n    Matrix.prototype.translate = function (offsetX, offsetY) {\n        this.metrixElements[4] = offsetX;\n        this.metrixElements[5] = offsetY;\n    };\n    /**\n     * `Translates` the specified offset X.\n     * @private\n     */\n    Matrix.prototype.transform = function (point) {\n        var x = point.x;\n        var y = point.y;\n        var x2 = x * this.elements[0] + y * this.elements[2] + this.offsetX;\n        var y2 = x * this.elements[1] + y * this.elements[3] + this.offsetY;\n        return new PointF(x2, y2);\n    };\n    /**\n     * `Multiplies matrices` (changes coordinate system.)\n     * @private\n     */\n    Matrix.prototype.multiply = function (matrix) {\n        var tempMatrix = [];\n        tempMatrix.push(this.elements[0] * matrix.elements[0] + this.elements[1] * matrix.elements[2]);\n        tempMatrix[1] = (this.elements[0] * matrix.elements[1] + this.elements[1] * matrix.elements[3]);\n        tempMatrix[2] = (this.elements[2] * matrix.elements[0] + this.elements[3] * matrix.elements[2]);\n        tempMatrix[3] = (this.elements[2] * matrix.elements[1] + this.elements[3] * matrix.elements[3]);\n        tempMatrix[4] = (this.offsetX * matrix.elements[0] + this.offsetY * matrix.elements[2] + matrix.offsetX);\n        tempMatrix[5] = (this.offsetX * matrix.elements[1] + this.offsetY * matrix.elements[3] + matrix.offsetY);\n        for (var i = 0; i < tempMatrix.length; i++) {\n            this.elements[i] = tempMatrix[i];\n        }\n    };\n    // IDisposable Members\n    /**\n     * `Dispose` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.dispose = function () {\n        this.metrixElements = null;\n    };\n    // ICloneable Members\n    /**\n     * `Clones` this instance of PdfTransformationMatrix class.\n     * @private\n     */\n    Matrix.prototype.clone = function () {\n        var m = new Matrix(this.metrixElements);\n        return m;\n    };\n    return Matrix;\n}());\nexport { Matrix };\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,MAAT,QAAuB,0BAAvB;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA;AACA;AACA;;AACA,IAAIC,uBAAuB;AAAG;AAAe,YAAY;EACrD,SAASA,uBAAT,CAAiCC,KAAjC,EAAwC;IACpC;AACR;AACA;AACA;AACA;IACQ,KAAKC,YAAL,GAAoB,QAAQC,IAAI,CAACC,EAAjC;;IACA,IAAI,OAAOH,KAAP,KAAiB,WAArB,EAAkC;MAC9B,KAAKI,oBAAL,GAA4B,IAAIC,MAAJ,CAAW,IAAX,EAAiB,IAAjB,EAAuB,IAAvB,EAA6B,IAA7B,EAAmC,IAAnC,EAAyC,IAAzC,CAA5B;IACH,CAFD,MAGK;MACD,KAAKD,oBAAL,GAA4B,IAAIC,MAAJ,CAAW,IAAX,EAAiB,IAAjB,EAAuB,IAAvB,EAA6B,CAAC,IAA9B,EAAoC,IAApC,EAA0C,IAA1C,CAA5B;IACH;EACJ;;EACDC,MAAM,CAACC,cAAP,CAAsBR,uBAAuB,CAACS,SAA9C,EAAyD,QAAzD,EAAmE;IAC/D;;IACA;AACR;AACA;AACA;IACQC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKL,oBAAZ;IACH,CAR8D;IAS/DM,GAAG,EAAE,aAAUV,KAAV,EAAiB;MAClB,KAAKI,oBAAL,GAA4BJ,KAA5B;IACH,CAX8D;IAY/DW,UAAU,EAAE,IAZmD;IAa/DC,YAAY,EAAE;EAbiD,CAAnE,EAfqD,CA8BrD;;EACA;AACJ;AACA;AACA;;EACIb,uBAAuB,CAACS,SAAxB,CAAkCK,SAAlC,GAA8C,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;IACtE,KAAKX,oBAAL,CAA0BS,SAA1B,CAAoCC,OAApC,EAA6CC,OAA7C;EACH,CAFD;EAGA;AACJ;AACA;AACA;;;EACIhB,uBAAuB,CAACS,SAAxB,CAAkCQ,KAAlC,GAA0C,UAAUC,MAAV,EAAkBC,MAAlB,EAA0B;IAChE,KAAKd,oBAAL,CAA0Be,QAA1B,CAAmC,CAAnC,IAAwCF,MAAxC;IACA,KAAKb,oBAAL,CAA0Be,QAA1B,CAAmC,CAAnC,IAAwCD,MAAxC;EACH,CAHD;EAIA;AACJ;AACA;AACA;;;EACInB,uBAAuB,CAACS,SAAxB,CAAkCY,MAAlC,GAA2C,UAAUC,KAAV,EAAiB;IACxD;IACAA,KAAK,GAAIA,KAAK,GAAGnB,IAAI,CAACC,EAAd,GAAoB,GAA5B,CAFwD,CAGxD;;IACA,KAAKC,oBAAL,CAA0Be,QAA1B,CAAmC,CAAnC,IAAwCjB,IAAI,CAACoB,GAAL,CAASD,KAAT,CAAxC;IACA,KAAKjB,oBAAL,CAA0Be,QAA1B,CAAmC,CAAnC,IAAwCjB,IAAI,CAACqB,GAAL,CAASF,KAAT,CAAxC;IACA,KAAKjB,oBAAL,CAA0Be,QAA1B,CAAmC,CAAnC,IAAwC,CAACjB,IAAI,CAACqB,GAAL,CAASF,KAAT,CAAzC;IACA,KAAKjB,oBAAL,CAA0Be,QAA1B,CAAmC,CAAnC,IAAwCjB,IAAI,CAACoB,GAAL,CAASD,KAAT,CAAxC;EACH,CARD,CAlDqD,CA2DrD;;EACA;AACJ;AACA;AACA;;;EACItB,uBAAuB,CAACS,SAAxB,CAAkCgB,QAAlC,GAA6C,YAAY;IACrD,IAAIC,OAAO,GAAG,EAAd;IACA,IAAIC,UAAU,GAAG,GAAjB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG,KAAKxB,oBAAL,CAA0Be,QAA1B,CAAmCU,MAAzD,EAAiEF,CAAC,GAAGC,GAArE,EAA0ED,CAAC,EAA3E,EAA+E;MAC3E,IAAIG,IAAI,GAAG,KAAKC,MAAL,CAAYZ,QAAZ,CAAqBQ,CAArB,CAAX;MACAF,OAAO,IAAI3B,SAAS,CAACkC,aAAV,CAAwB,KAAK5B,oBAAL,CAA0Be,QAA1B,CAAmCQ,CAAnC,CAAxB,CAAX;MACAF,OAAO,IAAIC,UAAX;IACH;;IACD,OAAOD,OAAP;EACH,CATD,CAhEqD,CA0ErD;;EACA;AACJ;AACA;AACA;;;EACI1B,uBAAuB,CAACS,SAAxB,CAAkCyB,QAAlC,GAA6C,UAAUF,MAAV,EAAkB;IAC3D,KAAK3B,oBAAL,CAA0B6B,QAA1B,CAAmCF,MAAM,CAACA,MAA1C;EACH,CAFD;EAGA;AACJ;AACA;AACA;;;EACIhC,uBAAuB,CAACmC,gBAAxB,GAA2C,UAAUC,QAAV,EAAoB;IAC3D,OAAO,KAAKC,YAAL,GAAoBD,QAA3B;EACH,CAFD;EAGA;AACJ;AACA;AACA;;;EACIpC,uBAAuB,CAACS,SAAxB,CAAkC6B,gBAAlC,GAAqD,UAAUC,OAAV,EAAmB;IACpE,OAAO,KAAKrC,YAAL,GAAoBqC,OAA3B;EACH,CAFD;EAGA;AACJ;AACA;AACA;;;EACIvC,uBAAuB,CAACS,SAAxB,CAAkC+B,KAAlC,GAA0C,YAAY;IAClD,OAAO,IAAP;EACH,CAFD,CApGqD,CAuGrD;;EACA;AACJ;AACA;AACA;AACA;;;EACIxC,uBAAuB,CAACqC,YAAxB,GAAuClC,IAAI,CAACC,EAAL,GAAU,KAAjD;EACA,OAAOJ,uBAAP;AACH,CA/G4C,EAA7C;;AAgHA,SAASA,uBAAT;;AACA,IAAIM,MAAM;AAAG;AAAe,YAAY;EACpC,SAASA,MAAT,CAAgBmC,IAAhB,EAAsBC,IAAtB,EAA4BC,IAA5B,EAAkCC,IAAlC,EAAwCC,IAAxC,EAA8CC,IAA9C,EAAoD;IAChD,IAAI,OAAOL,IAAP,KAAgB,WAApB,EAAiC;MAC7B,KAAKM,cAAL,GAAsB,EAAtB;IACH,CAFD,MAGK,IAAI,OAAON,IAAP,KAAgB,QAApB,EAA8B;MAC/B,KAAKM,cAAL,GAAsB,EAAtB;MACA,KAAKA,cAAL,CAAoBC,IAApB,CAAyBP,IAAzB;MACA,KAAKM,cAAL,CAAoBC,IAApB,CAAyBN,IAAzB;MACA,KAAKK,cAAL,CAAoBC,IAApB,CAAyBL,IAAzB;MACA,KAAKI,cAAL,CAAoBC,IAApB,CAAyBJ,IAAzB;MACA,KAAKG,cAAL,CAAoBC,IAApB,CAAyBH,IAAzB;MACA,KAAKE,cAAL,CAAoBC,IAApB,CAAyBF,IAAzB;IACH,CARI,MASA;MACD,KAAKC,cAAL,GAAsBN,IAAtB;IACH;EACJ;;EACDlC,MAAM,CAACC,cAAP,CAAsBF,MAAM,CAACG,SAA7B,EAAwC,UAAxC,EAAoD;IAChD;;IACA;AACR;AACA;AACA;IACQC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKqC,cAAZ;IACH,CAR+C;IAShDnC,UAAU,EAAE,IAToC;IAUhDC,YAAY,EAAE;EAVkC,CAApD;EAYAN,MAAM,CAACC,cAAP,CAAsBF,MAAM,CAACG,SAA7B,EAAwC,SAAxC,EAAmD;IAC/C;AACR;AACA;AACA;IACQC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKqC,cAAL,CAAoB,CAApB,CAAP;IACH,CAP8C;IAQ/CnC,UAAU,EAAE,IARmC;IAS/CC,YAAY,EAAE;EATiC,CAAnD;EAWAN,MAAM,CAACC,cAAP,CAAsBF,MAAM,CAACG,SAA7B,EAAwC,SAAxC,EAAmD;IAC/C;AACR;AACA;AACA;IACQC,GAAG,EAAE,eAAY;MACb,OAAO,KAAKqC,cAAL,CAAoB,CAApB,CAAP;IACH,CAP8C;IAQ/CnC,UAAU,EAAE,IARmC;IAS/CC,YAAY,EAAE;EATiC,CAAnD,EAzCoC,CAoDpC;;EACA;AACJ;AACA;AACA;;EACIP,MAAM,CAACG,SAAP,CAAiBK,SAAjB,GAA6B,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;IACrD,KAAK+B,cAAL,CAAoB,CAApB,IAAyBhC,OAAzB;IACA,KAAKgC,cAAL,CAAoB,CAApB,IAAyB/B,OAAzB;EACH,CAHD;EAIA;AACJ;AACA;AACA;;;EACIV,MAAM,CAACG,SAAP,CAAiBwC,SAAjB,GAA6B,UAAUC,KAAV,EAAiB;IAC1C,IAAIC,CAAC,GAAGD,KAAK,CAACC,CAAd;IACA,IAAIC,CAAC,GAAGF,KAAK,CAACE,CAAd;IACA,IAAIC,EAAE,GAAGF,CAAC,GAAG,KAAK/B,QAAL,CAAc,CAAd,CAAJ,GAAuBgC,CAAC,GAAG,KAAKhC,QAAL,CAAc,CAAd,CAA3B,GAA8C,KAAKL,OAA5D;IACA,IAAIuC,EAAE,GAAGH,CAAC,GAAG,KAAK/B,QAAL,CAAc,CAAd,CAAJ,GAAuBgC,CAAC,GAAG,KAAKhC,QAAL,CAAc,CAAd,CAA3B,GAA8C,KAAKJ,OAA5D;IACA,OAAO,IAAIlB,MAAJ,CAAWuD,EAAX,EAAeC,EAAf,CAAP;EACH,CAND;EAOA;AACJ;AACA;AACA;;;EACIhD,MAAM,CAACG,SAAP,CAAiByB,QAAjB,GAA4B,UAAUF,MAAV,EAAkB;IAC1C,IAAIuB,UAAU,GAAG,EAAjB;IACAA,UAAU,CAACP,IAAX,CAAgB,KAAK5B,QAAL,CAAc,CAAd,IAAmBY,MAAM,CAACZ,QAAP,CAAgB,CAAhB,CAAnB,GAAwC,KAAKA,QAAL,CAAc,CAAd,IAAmBY,MAAM,CAACZ,QAAP,CAAgB,CAAhB,CAA3E;IACAmC,UAAU,CAAC,CAAD,CAAV,GAAiB,KAAKnC,QAAL,CAAc,CAAd,IAAmBY,MAAM,CAACZ,QAAP,CAAgB,CAAhB,CAAnB,GAAwC,KAAKA,QAAL,CAAc,CAAd,IAAmBY,MAAM,CAACZ,QAAP,CAAgB,CAAhB,CAA5E;IACAmC,UAAU,CAAC,CAAD,CAAV,GAAiB,KAAKnC,QAAL,CAAc,CAAd,IAAmBY,MAAM,CAACZ,QAAP,CAAgB,CAAhB,CAAnB,GAAwC,KAAKA,QAAL,CAAc,CAAd,IAAmBY,MAAM,CAACZ,QAAP,CAAgB,CAAhB,CAA5E;IACAmC,UAAU,CAAC,CAAD,CAAV,GAAiB,KAAKnC,QAAL,CAAc,CAAd,IAAmBY,MAAM,CAACZ,QAAP,CAAgB,CAAhB,CAAnB,GAAwC,KAAKA,QAAL,CAAc,CAAd,IAAmBY,MAAM,CAACZ,QAAP,CAAgB,CAAhB,CAA5E;IACAmC,UAAU,CAAC,CAAD,CAAV,GAAiB,KAAKxC,OAAL,GAAeiB,MAAM,CAACZ,QAAP,CAAgB,CAAhB,CAAf,GAAoC,KAAKJ,OAAL,GAAegB,MAAM,CAACZ,QAAP,CAAgB,CAAhB,CAAnD,GAAwEY,MAAM,CAACjB,OAAhG;IACAwC,UAAU,CAAC,CAAD,CAAV,GAAiB,KAAKxC,OAAL,GAAeiB,MAAM,CAACZ,QAAP,CAAgB,CAAhB,CAAf,GAAoC,KAAKJ,OAAL,GAAegB,MAAM,CAACZ,QAAP,CAAgB,CAAhB,CAAnD,GAAwEY,MAAM,CAAChB,OAAhG;;IACA,KAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2B,UAAU,CAACzB,MAA/B,EAAuCF,CAAC,EAAxC,EAA4C;MACxC,KAAKR,QAAL,CAAcQ,CAAd,IAAmB2B,UAAU,CAAC3B,CAAD,CAA7B;IACH;EACJ,CAXD,CA5EoC,CAwFpC;;EACA;AACJ;AACA;AACA;;;EACItB,MAAM,CAACG,SAAP,CAAiB+C,OAAjB,GAA2B,YAAY;IACnC,KAAKT,cAAL,GAAsB,IAAtB;EACH,CAFD,CA7FoC,CAgGpC;;EACA;AACJ;AACA;AACA;;;EACIzC,MAAM,CAACG,SAAP,CAAiB+B,KAAjB,GAAyB,YAAY;IACjC,IAAIiB,CAAC,GAAG,IAAInD,MAAJ,CAAW,KAAKyC,cAAhB,CAAR;IACA,OAAOU,CAAP;EACH,CAHD;;EAIA,OAAOnD,MAAP;AACH,CA1G2B,EAA5B;;AA2GA,SAASA,MAAT"},"metadata":{},"sourceType":"module"}