{"ast":null,"code":"import { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Selection Module handles the selection for chart.\n * @private\n */\n\nvar BaseSelection =\n/** @class */\nfunction () {\n  function BaseSelection(control) {\n    this.control = control;\n  }\n  /**\n   * To create selection styles for series\n   */\n\n\n  BaseSelection.prototype.seriesStyles = function () {\n    var seriesclass;\n    var style = document.getElementById(this.styleId);\n    var pattern = '{}';\n    var fill;\n    var opacity;\n    var selectionPattern = this.control.selectionPattern;\n    var highlightPattern = this.control.highlightPattern;\n\n    if (isNullOrUndefined(style) || selectionPattern !== 'None' || highlightPattern !== 'None') {\n      style = document.createElement('style');\n      style.setAttribute('id', this.styleId);\n\n      for (var _i = 0, _a = this.control.visibleSeries; _i < _a.length; _i++) {\n        var series = _a[_i];\n        var visibleSeries = this.control.visibleSeries[series.index] || this.control.visibleSeries[series.index];\n\n        if ((!isNullOrUndefined(selectionPattern) || !isNullOrUndefined(highlightPattern)) && (selectionPattern !== 'None' || highlightPattern !== 'None')) {\n          var patternName = this.styleId.indexOf('highlight') > 0 ? highlightPattern : selectionPattern;\n\n          if (visibleSeries.type === 'Pie' || visibleSeries.type === 'Funnel' || visibleSeries.type === 'Pyramid') {\n            for (var i = 0; i < visibleSeries.points.length; i++) {\n              opacity = visibleSeries.opacity;\n              fill = this.pattern(this.control, visibleSeries.points[i].color, series.index, patternName, opacity);\n              pattern = '{ fill:' + fill + '}';\n            }\n          } else if (visibleSeries.type) {\n            opacity = visibleSeries.opacity;\n            fill = this.pattern(this.control, visibleSeries.interior, series.index, patternName, opacity);\n            pattern = '{ fill:' + fill + '}';\n          }\n        }\n\n        seriesclass = series.selectionStyle || this.styleId + '_series_' + series.index + ',' + '.' + this.styleId + '_series_' + series.index + '> *';\n        pattern = pattern.indexOf('None') > -1 ? '{}' : pattern;\n        style.innerHTML += series.selectionStyle ? '' : '.' + seriesclass + pattern;\n      }\n\n      style.innerHTML += '.' + this.unselected + ' { opacity:' + 0.3 + ';} ';\n      document.body.appendChild(style);\n    }\n  };\n  /**\n   * To create the pattern for series/points\n   */\n  // tslint:disable-next-line:max-func-body-length\n\n\n  BaseSelection.prototype.pattern = function (chart, color, index, patternName, opacity) {\n    var backgroundColor = '#ffffff';\n    var svg;\n    svg = chart.svgObject;\n    var pattern;\n    var pathOptions = [];\n    var patternGroup = {\n      'id': patternName + '_Selection' + '_' + index,\n      'patternUnits': 'userSpaceOnUse'\n    };\n    var heightStr = 'height';\n    var widthStr = 'width';\n    var width = 10;\n    var height = 12;\n    var patternNum = 6;\n\n    switch (patternName) {\n      case 'Dots':\n        patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n        patternGroup[widthStr] = patternNum;\n        pathOptions[0] = {\n          'x': 0,\n          'y': 0,\n          'width': 7,\n          'height': 7,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[1] = {\n          'cx': 3,\n          'cy': 3,\n          'r': 2,\n          'stroke-width': 1,\n          'fill': color,\n          'name': 'circle'\n        };\n        break;\n\n      case 'Pacman':\n        patternGroup[heightStr] = '18.384';\n        patternGroup[widthStr] = '17.917';\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': 17.917,\n          'height': 18.384,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        }; // tslint:disable-next-line:max-line-length\n\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M9.081,9.194l5.806-3.08c-0.812-1.496-2.403-3.052-4.291-3.052H8.835C6.138,3.063,3,6.151,3,8.723v1.679   c0,2.572,3.138,5.661,5.835,5.661h1.761c2.085,0,3.835-1.76,4.535-3.514L9.081,9.194z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'Chessboard':\n        patternGroup[heightStr] = patternGroup[widthStr] = width;\n        pathOptions[0] = {\n          'x': 0,\n          'y': 0,\n          'width': width,\n          'height': width,\n          'fill': backgroundColor,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[1] = {\n          'x': 0,\n          'y': 0,\n          'width': 5,\n          'height': 5,\n          'fill': color,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[2] = {\n          'x': 5,\n          'y': 5,\n          'width': 5,\n          'height': 5,\n          'fill': color,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        break;\n\n      case 'Crosshatch':\n        patternGroup[heightStr] = patternGroup[widthStr] = '8';\n        pathOptions[0] = {\n          'x': 0,\n          'y': 0,\n          'width': 8,\n          'height': 8,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[1] = {\n          'd': 'M0 0L8 8ZM8 0L0 8Z',\n          'stroke-width': 1,\n          'stroke': color,\n          'name': 'path'\n        };\n        break;\n\n      case 'DiagonalForward':\n        patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n        pathOptions[0] = {\n          'x': 0,\n          'y': 0,\n          'width': patternNum,\n          'height': patternNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[1] = {\n          'd': 'M 3 -3 L 9 3 M 6 6 L 0 0 M 3 9 L -3 3',\n          'stroke-width': 2,\n          'stroke': color,\n          'name': 'path'\n        };\n        break;\n\n      case 'DiagonalBackward':\n        patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n        pathOptions[0] = {\n          'x': 0,\n          'y': 0,\n          'width': patternNum,\n          'height': patternNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity,\n          'name': 'rect'\n        };\n        pathOptions[1] = {\n          'd': 'M 3 -3 L -3 3 M 0 6 L 6 0 M 9 3 L 3 9',\n          'stroke-width': 2,\n          'stroke': color,\n          'name': 'path'\n        };\n        break;\n\n      case 'Grid':\n        patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': patternNum,\n          'height': patternNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M1 3.5L11 3.5 M0 3.5L11 3.5 M0 7.5L11 7.5 M0 11.5L11 11.5 M5.5 0L5.5 12 M11.5 0L11.5 12Z',\n          'stroke-width': 1,\n          'stroke': color\n        };\n        break;\n\n      case 'Turquoise':\n        var turquoiseNum = 17;\n        var turstrokewidth = 1;\n        patternGroup[heightStr] = patternGroup[widthStr] = turquoiseNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': turquoiseNum,\n          'height': turquoiseNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M0.5739999999999998,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[2] = {\n          'name': 'path',\n          'd': 'M11.805,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[3] = {\n          'name': 'path',\n          'd': 'M6.19,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[4] = {\n          'name': 'path',\n          'd': 'M11.805,8.217a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[5] = {\n          'name': 'path',\n          'd': 'M6.19,8.217a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[6] = {\n          'name': 'path',\n          'd': 'M11.805,13.899a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[7] = {\n          'name': 'path',\n          'd': 'M6.19,13.899a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n          'stroke-width': turstrokewidth,\n          'stroke-miterlimit': width,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'Star':\n        var starNum = 21;\n        patternGroup[heightStr] = patternGroup[widthStr] = starNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': starNum,\n          'height': starNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          // tslint:disable-next-line:max-line-length\n          'd': 'M15.913,18.59L10.762 12.842 5.613 18.75 8.291 11.422 0.325 9.91 8.154 8.33 5.337 0.91 10.488 6.658 15.637 0.75 12.959 8.078 20.925 9.59 13.096 11.17 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'Triangle':\n        patternGroup[heightStr] = patternGroup[widthStr] = width;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': width,\n          'height': width,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M4.987,0L7.48 4.847 9.974 9.694 4.987 9.694 0 9.694 2.493 4.847 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'Circle':\n        var circleNum = 9;\n        patternGroup[heightStr] = patternGroup[widthStr] = circleNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': circleNum,\n          'height': circleNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'circle',\n          'cx': 5.125,\n          'cy': 3.875,\n          'r': 3.625,\n          'stroke-width': 1,\n          'fill': color\n        };\n        break;\n\n      case 'Tile':\n        var tileNum = 18;\n        var strokeWidth = 1;\n        patternGroup[heightStr] = patternGroup[widthStr] = tileNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': tileNum,\n          'height': tileNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M0,9L0 0 9 0 z',\n          'stroke-width': strokeWidth,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[2] = {\n          'name': 'path',\n          'd': 'M9,9L9 0 18 0 z',\n          'stroke-width': strokeWidth,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[3] = {\n          'name': 'path',\n          'd': 'M0,18L0 9 9 9 z',\n          'stroke-width': strokeWidth,\n          'stroke': color,\n          'fill': color\n        };\n        pathOptions[4] = {\n          'name': 'path',\n          'd': 'M9,18L9 9 18 9 z',\n          'stroke-width': strokeWidth,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'HorizontalDash':\n        patternGroup[heightStr] = patternGroup[widthStr] = height;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': height,\n          'height': height,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M0,1.5 L10 1.5 M0,5.5 L10 5.5 M0,9.5 L10 9.5 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'VerticalDash':\n        patternGroup[heightStr] = patternGroup[widthStr] = height;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': height,\n          'height': height,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M1.5,0 L1.5 10 M5.5,0 L5.5 10 M9.5,0 L9.5 10 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'Rectangle':\n        patternGroup[heightStr] = patternGroup[widthStr] = height;\n        pathOptions[0] = {\n          'name': 'rect',\n          'width': height,\n          'height': height,\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'rect',\n          'x': 1,\n          'y': 2,\n          'width': 4,\n          'height': 9,\n          'fill': color,\n          'opacity': opacity\n        };\n        pathOptions[2] = {\n          'name': 'rect',\n          'x': 7,\n          'y': 2,\n          'width': 4,\n          'height': 9,\n          'fill': color,\n          'opacity': opacity\n        };\n        break;\n\n      case 'Box':\n        patternGroup[heightStr] = patternGroup[widthStr] = width;\n        pathOptions[0] = {\n          'name': 'rect',\n          'width': 13,\n          'height': 13,\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'rect',\n          'x': 1.5,\n          'y': 1.5,\n          'width': width,\n          'height': 9,\n          'fill': color,\n          'opacity': opacity\n        };\n        break;\n\n      case 'HorizontalStripe':\n        patternGroup[heightStr] = height;\n        patternGroup[widthStr] = width;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': width,\n          'height': height,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M0,0.5 L10 0.5 M0,4.5 L10 4.5 M0,8.5 L10 8.5 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'VerticalStripe':\n        patternGroup[heightStr] = width;\n        patternGroup[widthStr] = height;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': height,\n          'height': width,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'path',\n          'd': 'M0.5,0 L0.5 10 M4.5,0 L4.5 10 M8.5,0 L8.5 10 z',\n          'stroke-width': 1,\n          'stroke': color,\n          'fill': color\n        };\n        break;\n\n      case 'Bubble':\n        var bubNum = 20;\n        patternGroup[heightStr] = patternGroup[widthStr] = bubNum;\n        pathOptions[0] = {\n          'name': 'rect',\n          'x': 0,\n          'y': 0,\n          'width': bubNum,\n          'height': bubNum,\n          'transform': 'translate(0,0)',\n          'fill': backgroundColor,\n          'opacity': opacity\n        };\n        pathOptions[1] = {\n          'name': 'circle',\n          'cx': 5.217,\n          'cy': 11.325,\n          'r': 3.429,\n          'stroke-width': 1,\n          'fill': '#D0A6D1'\n        };\n        pathOptions[2] = {\n          'name': 'circle',\n          'cx': 13.328,\n          'cy': 6.24,\n          'r': 4.884,\n          'stroke-width': 1,\n          'fill': color\n        };\n        pathOptions[3] = {\n          'name': 'circle',\n          'cx': 13.277,\n          'cy': 14.66,\n          'r': 3.018,\n          'stroke-width': 1,\n          'fill': '#D0A6D1'\n        };\n        break;\n    }\n\n    var svgRenderer = chart.svgRenderer || chart.renderer;\n    pattern = svgRenderer.createPattern(patternGroup, 'pattern');\n    this.loadPattern(chart, pathOptions, pattern, svgRenderer);\n    svg.appendChild(pattern);\n    return 'url(#' + patternName + '_' + 'Selection' + '_' + index + ')';\n  };\n  /**\n   * To load the pattern into svg\n   */\n\n\n  BaseSelection.prototype.loadPattern = function (chart, options, pattern, svgRenderer) {\n    var i;\n\n    for (i = 0; i < options.length; i++) {\n      var path = svgRenderer.createPattern(options[i], options[i].name);\n      pattern.appendChild(path);\n    }\n  };\n  /**\n   * To concat indexes\n   */\n\n\n  BaseSelection.prototype.concatIndexes = function (userIndexes, localIndexes) {\n    return userIndexes.concat(localIndexes);\n  };\n  /**\n   * Selected points series visibility checking on legend click\n   */\n\n\n  BaseSelection.prototype.checkVisibility = function (selectedIndexes) {\n    if (!selectedIndexes) {\n      return false;\n    }\n\n    var visible = false;\n    var uniqueSeries = [];\n\n    for (var _i = 0, selectedIndexes_1 = selectedIndexes; _i < selectedIndexes_1.length; _i++) {\n      var index = selectedIndexes_1[_i];\n\n      if (uniqueSeries.indexOf(index.series) === -1) {\n        uniqueSeries.push(index.series);\n      }\n    }\n\n    for (var _a = 0, uniqueSeries_1 = uniqueSeries; _a < uniqueSeries_1.length; _a++) {\n      var index = uniqueSeries_1[_a];\n\n      if (this.control.series[index].visible) {\n        visible = true;\n        break;\n      }\n    }\n\n    return visible;\n  };\n  /**\n   * To add svg element style class\n   * @private\n   */\n\n\n  BaseSelection.prototype.addSvgClass = function (element, className) {\n    var elementClassName = element.getAttribute('class') || '';\n    elementClassName += elementClassName !== '' ? ' ' : '';\n\n    if (elementClassName.indexOf(className) === -1) {\n      element.setAttribute('class', elementClassName + className);\n    }\n  };\n  /**\n   * To remove svg element style class\n   * @private\n   */\n\n\n  BaseSelection.prototype.removeSvgClass = function (element, className) {\n    var elementClassName = element.getAttribute('class') || '';\n\n    if (elementClassName.indexOf(className) > -1) {\n      element.setAttribute('class', elementClassName.replace(className, ''));\n    }\n  };\n  /**\n   * To get children from parent element\n   */\n\n\n  BaseSelection.prototype.getChildren = function (parent) {\n    var children = [];\n\n    for (var i = 0; i < parent.childNodes.length; i++) {\n      if (parent.childNodes[i].tagName !== 'defs') {\n        children.push(parent.childNodes[i]);\n      }\n    }\n\n    return children;\n  };\n\n  return BaseSelection;\n}();\n\nexport { BaseSelection };","map":{"version":3,"names":["isNullOrUndefined","BaseSelection","control","prototype","seriesStyles","seriesclass","style","document","getElementById","styleId","pattern","fill","opacity","selectionPattern","highlightPattern","createElement","setAttribute","_i","_a","visibleSeries","length","series","index","patternName","indexOf","type","i","points","color","interior","selectionStyle","innerHTML","unselected","body","appendChild","chart","backgroundColor","svg","svgObject","pathOptions","patternGroup","heightStr","widthStr","width","height","patternNum","turquoiseNum","turstrokewidth","starNum","circleNum","tileNum","strokeWidth","bubNum","svgRenderer","renderer","createPattern","loadPattern","options","path","name","concatIndexes","userIndexes","localIndexes","concat","checkVisibility","selectedIndexes","visible","uniqueSeries","selectedIndexes_1","push","uniqueSeries_1","addSvgClass","element","className","elementClassName","getAttribute","removeSvgClass","replace","getChildren","parent","children","childNodes","tagName"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-charts/src/common/user-interaction/selection.js"],"sourcesContent":["import { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Selection Module handles the selection for chart.\n * @private\n */\nvar BaseSelection = /** @class */ (function () {\n    function BaseSelection(control) {\n        this.control = control;\n    }\n    /**\n     * To create selection styles for series\n     */\n    BaseSelection.prototype.seriesStyles = function () {\n        var seriesclass;\n        var style = document.getElementById(this.styleId);\n        var pattern = '{}';\n        var fill;\n        var opacity;\n        var selectionPattern = this.control.selectionPattern;\n        var highlightPattern = this.control.highlightPattern;\n        if (isNullOrUndefined(style) || selectionPattern !== 'None' || highlightPattern !== 'None') {\n            style = document.createElement('style');\n            style.setAttribute('id', this.styleId);\n            for (var _i = 0, _a = this.control.visibleSeries; _i < _a.length; _i++) {\n                var series = _a[_i];\n                var visibleSeries = this.control.visibleSeries[series.index] ||\n                    this.control.visibleSeries[series.index];\n                if ((!isNullOrUndefined(selectionPattern) || !isNullOrUndefined(highlightPattern)) &&\n                    (selectionPattern !== 'None' || highlightPattern !== 'None')) {\n                    var patternName = this.styleId.indexOf('highlight') > 0 ? highlightPattern : selectionPattern;\n                    if (visibleSeries.type === 'Pie' || visibleSeries.type === 'Funnel' ||\n                        visibleSeries.type === 'Pyramid') {\n                        for (var i = 0; i < visibleSeries.points.length; i++) {\n                            opacity = visibleSeries.opacity;\n                            fill = this.pattern(this.control, (visibleSeries.points[i]).color, series.index, patternName, opacity);\n                            pattern = '{ fill:' + fill + '}';\n                        }\n                    }\n                    else if (visibleSeries.type) {\n                        opacity = visibleSeries.opacity;\n                        fill = this.pattern(this.control, visibleSeries.interior, series.index, patternName, opacity);\n                        pattern = '{ fill:' + fill + '}';\n                    }\n                }\n                seriesclass = series.selectionStyle || this.styleId + '_series_' + series.index + ',' + '.' +\n                    this.styleId + '_series_' + series.index + '> *';\n                pattern = (pattern.indexOf('None') > -1) ? '{}' : pattern;\n                style.innerHTML += series.selectionStyle ? '' : '.' + seriesclass + pattern;\n            }\n            style.innerHTML += '.' + this.unselected + ' { opacity:' + (0.3) + ';} ';\n            document.body.appendChild(style);\n        }\n    };\n    /**\n     * To create the pattern for series/points\n     */\n    // tslint:disable-next-line:max-func-body-length\n    BaseSelection.prototype.pattern = function (chart, color, index, patternName, opacity) {\n        var backgroundColor = '#ffffff';\n        var svg;\n        svg = chart.svgObject;\n        var pattern;\n        var pathOptions = [];\n        var patternGroup = { 'id': patternName + '_Selection' + '_' + index, 'patternUnits': 'userSpaceOnUse' };\n        var heightStr = 'height';\n        var widthStr = 'width';\n        var width = 10;\n        var height = 12;\n        var patternNum = 6;\n        switch (patternName) {\n            case 'Dots':\n                patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n                patternGroup[widthStr] = patternNum;\n                pathOptions[0] = {\n                    'x': 0, 'y': 0, 'width': 7, 'height': 7, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity, 'name': 'rect'\n                };\n                pathOptions[1] = {\n                    'cx': 3,\n                    'cy': 3,\n                    'r': 2,\n                    'stroke-width': 1,\n                    'fill': color,\n                    'name': 'circle'\n                };\n                break;\n            case 'Pacman':\n                patternGroup[heightStr] = '18.384';\n                patternGroup[widthStr] = '17.917';\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': 17.917, 'height': 18.384,\n                    'transform': 'translate(0,0)', 'fill': backgroundColor, 'opacity': opacity\n                };\n                // tslint:disable-next-line:max-line-length\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M9.081,9.194l5.806-3.08c-0.812-1.496-2.403-3.052-4.291-3.052H8.835C6.138,3.063,3,6.151,3,8.723v1.679   c0,2.572,3.138,5.661,5.835,5.661h1.761c2.085,0,3.835-1.76,4.535-3.514L9.081,9.194z', 'stroke-width': 1, 'stroke': color, 'fill': color\n                };\n                break;\n            case 'Chessboard':\n                patternGroup[heightStr] = patternGroup[widthStr] = width;\n                pathOptions[0] = {\n                    'x': 0, 'y': 0, 'width': width, 'height': width, 'fill': backgroundColor, 'opacity': opacity,\n                    'name': 'rect'\n                };\n                pathOptions[1] = { 'x': 0, 'y': 0, 'width': 5, 'height': 5, 'fill': color, 'opacity': opacity, 'name': 'rect' };\n                pathOptions[2] = { 'x': 5, 'y': 5, 'width': 5, 'height': 5, 'fill': color, 'opacity': opacity, 'name': 'rect' };\n                break;\n            case 'Crosshatch':\n                patternGroup[heightStr] = patternGroup[widthStr] = '8';\n                pathOptions[0] = {\n                    'x': 0, 'y': 0, 'width': 8, 'height': 8, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity, 'name': 'rect'\n                };\n                pathOptions[1] = {\n                    'd': 'M0 0L8 8ZM8 0L0 8Z',\n                    'stroke-width': 1,\n                    'stroke': color,\n                    'name': 'path'\n                };\n                break;\n            case 'DiagonalForward':\n                patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n                pathOptions[0] = {\n                    'x': 0, 'y': 0, 'width': patternNum, 'height': patternNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity, 'name': 'rect'\n                };\n                pathOptions[1] = {\n                    'd': 'M 3 -3 L 9 3 M 6 6 L 0 0 M 3 9 L -3 3',\n                    'stroke-width': 2,\n                    'stroke': color,\n                    'name': 'path'\n                };\n                break;\n            case 'DiagonalBackward':\n                patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n                pathOptions[0] = {\n                    'x': 0, 'y': 0, 'width': patternNum, 'height': patternNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity, 'name': 'rect'\n                };\n                pathOptions[1] = {\n                    'd': 'M 3 -3 L -3 3 M 0 6 L 6 0 M 9 3 L 3 9',\n                    'stroke-width': 2,\n                    'stroke': color,\n                    'name': 'path'\n                };\n                break;\n            case 'Grid':\n                patternGroup[heightStr] = patternGroup[widthStr] = patternNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': patternNum, 'height': patternNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path',\n                    'd': 'M1 3.5L11 3.5 M0 3.5L11 3.5 M0 7.5L11 7.5 M0 11.5L11 11.5 M5.5 0L5.5 12 M11.5 0L11.5 12Z',\n                    'stroke-width': 1,\n                    'stroke': color\n                };\n                break;\n            case 'Turquoise':\n                var turquoiseNum = 17;\n                var turstrokewidth = 1;\n                patternGroup[heightStr] = patternGroup[widthStr] = turquoiseNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': turquoiseNum, 'height': turquoiseNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M0.5739999999999998,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[2] = {\n                    'name': 'path', 'd': 'M11.805,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[3] = {\n                    'name': 'path', 'd': 'M6.19,2.643a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[4] = {\n                    'name': 'path', 'd': 'M11.805,8.217a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[5] = {\n                    'name': 'path', 'd': 'M6.19,8.217a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[6] = {\n                    'name': 'path', 'd': 'M11.805,13.899a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                pathOptions[7] = {\n                    'name': 'path', 'd': 'M6.19,13.899a2.123,2.111 0 1,0 4.246,0a2.123,2.111 0 1,0 -4.246,0',\n                    'stroke-width': turstrokewidth, 'stroke-miterlimit': width, 'stroke': color, 'fill': color\n                };\n                break;\n            case 'Star':\n                var starNum = 21;\n                patternGroup[heightStr] = patternGroup[widthStr] = starNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': starNum, 'height': starNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path',\n                    // tslint:disable-next-line:max-line-length\n                    'd': 'M15.913,18.59L10.762 12.842 5.613 18.75 8.291 11.422 0.325 9.91 8.154 8.33 5.337 0.91 10.488 6.658 15.637 0.75 12.959 8.078 20.925 9.59 13.096 11.17 z',\n                    'stroke-width': 1,\n                    'stroke': color,\n                    'fill': color\n                };\n                break;\n            case 'Triangle':\n                patternGroup[heightStr] = patternGroup[widthStr] = width;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': width, 'height': width, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path',\n                    'd': 'M4.987,0L7.48 4.847 9.974 9.694 4.987 9.694 0 9.694 2.493 4.847 z',\n                    'stroke-width': 1,\n                    'stroke': color,\n                    'fill': color\n                };\n                break;\n            case 'Circle':\n                var circleNum = 9;\n                patternGroup[heightStr] = patternGroup[widthStr] = circleNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': circleNum, 'height': circleNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'circle',\n                    'cx': 5.125,\n                    'cy': 3.875,\n                    'r': 3.625,\n                    'stroke-width': 1,\n                    'fill': color\n                };\n                break;\n            case 'Tile':\n                var tileNum = 18;\n                var strokeWidth = 1;\n                patternGroup[heightStr] = patternGroup[widthStr] = tileNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': tileNum, 'height': tileNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = { 'name': 'path', 'd': 'M0,9L0 0 9 0 z', 'stroke-width': strokeWidth, 'stroke': color, 'fill': color };\n                pathOptions[2] = { 'name': 'path', 'd': 'M9,9L9 0 18 0 z', 'stroke-width': strokeWidth, 'stroke': color, 'fill': color };\n                pathOptions[3] = { 'name': 'path', 'd': 'M0,18L0 9 9 9 z', 'stroke-width': strokeWidth, 'stroke': color, 'fill': color };\n                pathOptions[4] = { 'name': 'path', 'd': 'M9,18L9 9 18 9 z', 'stroke-width': strokeWidth, 'stroke': color, 'fill': color };\n                break;\n            case 'HorizontalDash':\n                patternGroup[heightStr] = patternGroup[widthStr] = height;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': height, 'height': height, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M0,1.5 L10 1.5 M0,5.5 L10 5.5 M0,9.5 L10 9.5 z', 'stroke-width': 1,\n                    'stroke': color, 'fill': color\n                };\n                break;\n            case 'VerticalDash':\n                patternGroup[heightStr] = patternGroup[widthStr] = height;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': height, 'height': height, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M1.5,0 L1.5 10 M5.5,0 L5.5 10 M9.5,0 L9.5 10 z', 'stroke-width': 1,\n                    'stroke': color, 'fill': color\n                };\n                break;\n            case 'Rectangle':\n                patternGroup[heightStr] = patternGroup[widthStr] = height;\n                pathOptions[0] = { 'name': 'rect', 'width': height, 'height': height, 'fill': backgroundColor, 'opacity': opacity };\n                pathOptions[1] = { 'name': 'rect', 'x': 1, 'y': 2, 'width': 4, 'height': 9, 'fill': color, 'opacity': opacity };\n                pathOptions[2] = { 'name': 'rect', 'x': 7, 'y': 2, 'width': 4, 'height': 9, 'fill': color, 'opacity': opacity };\n                break;\n            case 'Box':\n                patternGroup[heightStr] = patternGroup[widthStr] = width;\n                pathOptions[0] = { 'name': 'rect', 'width': 13, 'height': 13, 'fill': backgroundColor, 'opacity': opacity };\n                pathOptions[1] = {\n                    'name': 'rect', 'x': 1.5, 'y': 1.5, 'width': width, 'height': 9, 'fill': color,\n                    'opacity': opacity\n                };\n                break;\n            case 'HorizontalStripe':\n                patternGroup[heightStr] = height;\n                patternGroup[widthStr] = width;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': width, 'height': height,\n                    'transform': 'translate(0,0)', 'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M0,0.5 L10 0.5 M0,4.5 L10 4.5 M0,8.5 L10 8.5 z', 'stroke-width': 1,\n                    'stroke': color, 'fill': color\n                };\n                break;\n            case 'VerticalStripe':\n                patternGroup[heightStr] = width;\n                patternGroup[widthStr] = height;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': height, 'height': width, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = {\n                    'name': 'path', 'd': 'M0.5,0 L0.5 10 M4.5,0 L4.5 10 M8.5,0 L8.5 10 z', 'stroke-width': 1,\n                    'stroke': color, 'fill': color\n                };\n                break;\n            case 'Bubble':\n                var bubNum = 20;\n                patternGroup[heightStr] = patternGroup[widthStr] = bubNum;\n                pathOptions[0] = {\n                    'name': 'rect', 'x': 0, 'y': 0, 'width': bubNum, 'height': bubNum, 'transform': 'translate(0,0)',\n                    'fill': backgroundColor, 'opacity': opacity\n                };\n                pathOptions[1] = { 'name': 'circle', 'cx': 5.217, 'cy': 11.325, 'r': 3.429, 'stroke-width': 1, 'fill': '#D0A6D1' };\n                pathOptions[2] = { 'name': 'circle', 'cx': 13.328, 'cy': 6.24, 'r': 4.884, 'stroke-width': 1, 'fill': color };\n                pathOptions[3] = {\n                    'name': 'circle', 'cx': 13.277, 'cy': 14.66, 'r': 3.018, 'stroke-width': 1,\n                    'fill': '#D0A6D1'\n                };\n                break;\n        }\n        var svgRenderer = (chart.svgRenderer || chart.renderer);\n        pattern = svgRenderer.createPattern(patternGroup, 'pattern');\n        this.loadPattern(chart, pathOptions, pattern, svgRenderer);\n        svg.appendChild(pattern);\n        return 'url(#' + patternName + '_' + 'Selection' + '_' + index + ')';\n    };\n    /**\n     * To load the pattern into svg\n     */\n    BaseSelection.prototype.loadPattern = function (chart, options, pattern, svgRenderer) {\n        var i;\n        for (i = 0; i < options.length; i++) {\n            var path = svgRenderer.createPattern(options[i], options[i].name);\n            pattern.appendChild(path);\n        }\n    };\n    /**\n     * To concat indexes\n     */\n    BaseSelection.prototype.concatIndexes = function (userIndexes, localIndexes) {\n        return userIndexes.concat(localIndexes);\n    };\n    /**\n     * Selected points series visibility checking on legend click\n     */\n    BaseSelection.prototype.checkVisibility = function (selectedIndexes) {\n        if (!selectedIndexes) {\n            return false;\n        }\n        var visible = false;\n        var uniqueSeries = [];\n        for (var _i = 0, selectedIndexes_1 = selectedIndexes; _i < selectedIndexes_1.length; _i++) {\n            var index = selectedIndexes_1[_i];\n            if (uniqueSeries.indexOf(index.series) === -1) {\n                uniqueSeries.push(index.series);\n            }\n        }\n        for (var _a = 0, uniqueSeries_1 = uniqueSeries; _a < uniqueSeries_1.length; _a++) {\n            var index = uniqueSeries_1[_a];\n            if (this.control.series[index].visible) {\n                visible = true;\n                break;\n            }\n        }\n        return visible;\n    };\n    /**\n     * To add svg element style class\n     * @private\n     */\n    BaseSelection.prototype.addSvgClass = function (element, className) {\n        var elementClassName = element.getAttribute('class') || '';\n        elementClassName += ((elementClassName !== '') ? ' ' : '');\n        if (elementClassName.indexOf(className) === -1) {\n            element.setAttribute('class', elementClassName + className);\n        }\n    };\n    /**\n     * To remove svg element style class\n     * @private\n     */\n    BaseSelection.prototype.removeSvgClass = function (element, className) {\n        var elementClassName = element.getAttribute('class') || '';\n        if (elementClassName.indexOf(className) > -1) {\n            element.setAttribute('class', elementClassName.replace(className, ''));\n        }\n    };\n    /**\n     * To get children from parent element\n     */\n    BaseSelection.prototype.getChildren = function (parent) {\n        var children = [];\n        for (var i = 0; i < parent.childNodes.length; i++) {\n            if (parent.childNodes[i].tagName !== 'defs') {\n                children.push(parent.childNodes[i]);\n            }\n        }\n        return children;\n    };\n    return BaseSelection;\n}());\nexport { BaseSelection };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}