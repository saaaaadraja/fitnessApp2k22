{"ast":null,"code":"import axios from 'axios';\nimport swal from \"sweetalert\";\nimport { loginConfirmedAction, logout } from '../store/actions/AuthActions';\nexport function signUp(email, password) {\n  //axios call\n  const postData = {\n    email,\n    password,\n    returnSecureToken: true\n  };\n  return axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD3RPAp3nuETDn9OQimqn_YF6zdzqWITII`, postData);\n}\nexport function login(email, password) {\n  const postData = {\n    email,\n    password,\n    returnSecureToken: true\n  };\n  return axios.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD3RPAp3nuETDn9OQimqn_YF6zdzqWITII`, postData);\n}\nexport function formatError(errorResponse) {\n  switch (errorResponse.error.message) {\n    case 'EMAIL_EXISTS':\n      //return 'Email already exists';\n      swal(\"Oops\", \"Email already exists\", \"error\");\n      break;\n\n    case 'EMAIL_NOT_FOUND':\n      //return 'Email not found';\n      swal(\"Oops\", \"Email not found\", \"error\", {\n        button: \"Try Again!\"\n      });\n      break;\n\n    case 'INVALID_PASSWORD':\n      //return 'Invalid Password';\n      swal(\"Oops\", \"Invalid Password\", \"error\", {\n        button: \"Try Again!\"\n      });\n      break;\n\n    case 'USER_DISABLED':\n      return 'User Disabled';\n\n    default:\n      return '';\n  }\n}\nexport function saveTokenInLocalStorage(tokenDetails) {\n  tokenDetails.expireDate = new Date(new Date().getTime() + tokenDetails.expiresIn * 1000);\n  localStorage.setItem('userDetails', JSON.stringify(tokenDetails));\n}\nexport function runLogoutTimer(dispatch, timer, history) {\n  setTimeout(() => {\n    dispatch(logout(history));\n  }, timer);\n}\nexport function checkAutoLogin(dispatch, history) {\n  const tokenDetailsString = localStorage.getItem('userDetails');\n  let tokenDetails = '';\n\n  if (!tokenDetailsString) {\n    dispatch(logout(history));\n    return;\n  }\n\n  tokenDetails = JSON.parse(tokenDetailsString);\n  let expireDate = new Date(tokenDetails.expireDate);\n  let todaysDate = new Date();\n\n  if (todaysDate > expireDate) {\n    dispatch(logout(history));\n    return;\n  }\n\n  dispatch(loginConfirmedAction(tokenDetails));\n  const timer = expireDate.getTime() - todaysDate.getTime();\n  runLogoutTimer(dispatch, timer, history);\n}","map":{"version":3,"names":["axios","swal","loginConfirmedAction","logout","signUp","email","password","postData","returnSecureToken","post","login","formatError","errorResponse","error","message","button","saveTokenInLocalStorage","tokenDetails","expireDate","Date","getTime","expiresIn","localStorage","setItem","JSON","stringify","runLogoutTimer","dispatch","timer","history","setTimeout","checkAutoLogin","tokenDetailsString","getItem","parse","todaysDate"],"sources":["D:/Theme/package/src/services/AuthService.js"],"sourcesContent":["import axios from 'axios';\nimport swal from \"sweetalert\";\nimport {\n    loginConfirmedAction,\n    logout,\n} from '../store/actions/AuthActions';\n\nexport function signUp(email, password) {\n    //axios call\n\n    const postData = {\n        email,\n        password,\n        returnSecureToken: true,\n    };\n\n    return axios.post(\n        `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyD3RPAp3nuETDn9OQimqn_YF6zdzqWITII`,\n        postData,\n    );\n}\n\nexport function login(email, password) {\n    const postData = {\n        email,\n        password,\n        returnSecureToken: true,\n    };\n\n    return axios.post(\n        `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyD3RPAp3nuETDn9OQimqn_YF6zdzqWITII`,\n        postData,\n    );\n}\n\nexport function formatError(errorResponse) {\n    switch (errorResponse.error.message) {\n        case 'EMAIL_EXISTS':\n            //return 'Email already exists';\n            swal(\"Oops\", \"Email already exists\", \"error\");\n            break;\n        case 'EMAIL_NOT_FOUND':\n            //return 'Email not found';\n           swal(\"Oops\", \"Email not found\", \"error\",{ button: \"Try Again!\",});\n           break;\n        case 'INVALID_PASSWORD':\n            //return 'Invalid Password';\n            swal(\"Oops\", \"Invalid Password\", \"error\",{ button: \"Try Again!\",});\n            break;\n        case 'USER_DISABLED':\n            return 'User Disabled';\n\n        default:\n            return '';\n    }\n}\n\nexport function saveTokenInLocalStorage(tokenDetails) {\n    tokenDetails.expireDate = new Date(\n        new Date().getTime() + tokenDetails.expiresIn * 1000,\n    );\n    localStorage.setItem('userDetails', JSON.stringify(tokenDetails));\n}\n\nexport function runLogoutTimer(dispatch, timer, history) {\n    setTimeout(() => {\n        dispatch(logout(history));\n    }, timer);\n}\n\nexport function checkAutoLogin(dispatch, history) {\n    const tokenDetailsString = localStorage.getItem('userDetails');\n    let tokenDetails = '';\n    if (!tokenDetailsString) {\n        dispatch(logout(history));\n        return;\n    }\n\n    tokenDetails = JSON.parse(tokenDetailsString);\n    let expireDate = new Date(tokenDetails.expireDate);\n    let todaysDate = new Date();\n\n    if (todaysDate > expireDate) {\n        dispatch(logout(history));\n        return;\n    }\n    dispatch(loginConfirmedAction(tokenDetails));\n\n    const timer = expireDate.getTime() - todaysDate.getTime();\n    runLogoutTimer(dispatch, timer, history);\n}\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,SACIC,oBADJ,EAEIC,MAFJ,QAGO,8BAHP;AAKA,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;EACpC;EAEA,MAAMC,QAAQ,GAAG;IACbF,KADa;IAEbC,QAFa;IAGbE,iBAAiB,EAAE;EAHN,CAAjB;EAMA,OAAOR,KAAK,CAACS,IAAN,CACF,uGADE,EAEHF,QAFG,CAAP;AAIH;AAED,OAAO,SAASG,KAAT,CAAeL,KAAf,EAAsBC,QAAtB,EAAgC;EACnC,MAAMC,QAAQ,GAAG;IACbF,KADa;IAEbC,QAFa;IAGbE,iBAAiB,EAAE;EAHN,CAAjB;EAMA,OAAOR,KAAK,CAACS,IAAN,CACF,mHADE,EAEHF,QAFG,CAAP;AAIH;AAED,OAAO,SAASI,WAAT,CAAqBC,aAArB,EAAoC;EACvC,QAAQA,aAAa,CAACC,KAAd,CAAoBC,OAA5B;IACI,KAAK,cAAL;MACI;MACAb,IAAI,CAAC,MAAD,EAAS,sBAAT,EAAiC,OAAjC,CAAJ;MACA;;IACJ,KAAK,iBAAL;MACI;MACDA,IAAI,CAAC,MAAD,EAAS,iBAAT,EAA4B,OAA5B,EAAoC;QAAEc,MAAM,EAAE;MAAV,CAApC,CAAJ;MACA;;IACH,KAAK,kBAAL;MACI;MACAd,IAAI,CAAC,MAAD,EAAS,kBAAT,EAA6B,OAA7B,EAAqC;QAAEc,MAAM,EAAE;MAAV,CAArC,CAAJ;MACA;;IACJ,KAAK,eAAL;MACI,OAAO,eAAP;;IAEJ;MACI,OAAO,EAAP;EAjBR;AAmBH;AAED,OAAO,SAASC,uBAAT,CAAiCC,YAAjC,EAA+C;EAClDA,YAAY,CAACC,UAAb,GAA0B,IAAIC,IAAJ,CACtB,IAAIA,IAAJ,GAAWC,OAAX,KAAuBH,YAAY,CAACI,SAAb,GAAyB,IAD1B,CAA1B;EAGAC,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAeR,YAAf,CAApC;AACH;AAED,OAAO,SAASS,cAAT,CAAwBC,QAAxB,EAAkCC,KAAlC,EAAyCC,OAAzC,EAAkD;EACrDC,UAAU,CAAC,MAAM;IACbH,QAAQ,CAACxB,MAAM,CAAC0B,OAAD,CAAP,CAAR;EACH,CAFS,EAEPD,KAFO,CAAV;AAGH;AAED,OAAO,SAASG,cAAT,CAAwBJ,QAAxB,EAAkCE,OAAlC,EAA2C;EAC9C,MAAMG,kBAAkB,GAAGV,YAAY,CAACW,OAAb,CAAqB,aAArB,CAA3B;EACA,IAAIhB,YAAY,GAAG,EAAnB;;EACA,IAAI,CAACe,kBAAL,EAAyB;IACrBL,QAAQ,CAACxB,MAAM,CAAC0B,OAAD,CAAP,CAAR;IACA;EACH;;EAEDZ,YAAY,GAAGO,IAAI,CAACU,KAAL,CAAWF,kBAAX,CAAf;EACA,IAAId,UAAU,GAAG,IAAIC,IAAJ,CAASF,YAAY,CAACC,UAAtB,CAAjB;EACA,IAAIiB,UAAU,GAAG,IAAIhB,IAAJ,EAAjB;;EAEA,IAAIgB,UAAU,GAAGjB,UAAjB,EAA6B;IACzBS,QAAQ,CAACxB,MAAM,CAAC0B,OAAD,CAAP,CAAR;IACA;EACH;;EACDF,QAAQ,CAACzB,oBAAoB,CAACe,YAAD,CAArB,CAAR;EAEA,MAAMW,KAAK,GAAGV,UAAU,CAACE,OAAX,KAAuBe,UAAU,CAACf,OAAX,EAArC;EACAM,cAAc,CAACC,QAAD,EAAWC,KAAX,EAAkBC,OAAlB,CAAd;AACH"},"metadata":{},"sourceType":"module"}