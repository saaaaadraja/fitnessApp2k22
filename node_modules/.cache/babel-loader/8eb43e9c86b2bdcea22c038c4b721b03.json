{"ast":null,"code":"var _jsxFileName = \"D:\\\\Theme\\\\package\\\\src\\\\App.js\";\n// import { lazy, Suspense, useEffect } from 'react';\n/// Components\nimport Index from './jsx/index';\nimport { connect, useDispatch } from 'react-redux';\nimport { Route, Switch, withRouter } from 'react-router-dom'; // action\n// import { checkAutoLogin } from './services/AuthService';\n\nimport { isAuthenticated } from './store/selectors/AuthSelectors'; /// Style\n\nimport \"./vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\nimport \"./css/style.css\"; // const SignUp = lazy(() => import('./jsx/pages/Registration'));\n// const ForgotPassword = lazy(() => import('./jsx/pages/ForgotPassword'));\n// const Login = lazy(() => {\n//     return new Promise(resolve => {\n// \t\tsetTimeout(() => resolve(import('./jsx/pages/Login')), 500);\n// \t});\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  // const dispatch = useDispatch();\n  // useEffect(() => {\n  //     checkAutoLogin(dispatch, props.history);\n  // }, [dispatch, props.history]);\n  // let routes = (  \n  //     <Switch>\n  //         <Route exact path='/login' component={Login} />\n  //         <Route exact path='/page-register' component={SignUp} />\n  //         <Route exact path='/page-forgot-password' component={ForgotPassword} />\n  //     </Switch>\n  // );\n  // if (props.isAuthenticated) {\n  // \treturn (\n  // \t\t<>\n  //             <Suspense fallback={\n  //                 <div id=\"preloader\">\n  //                     <div className=\"sk-three-bounce\">\n  //                         <div className=\"sk-child sk-bounce1\"></div>\n  //                         <div className=\"sk-child sk-bounce2\"></div>\n  //                         <div className=\"sk-child sk-bounce3\"></div>\n  //                     </div>\n  //                 </div>  \n  //                }\n  //             >\n  //                 <Index />\n  //             </Suspense>\n  //         </>\n  //     );\n  // }else{\n  // \treturn (\n  // \t\t<div className=\"vh-100\">\n  //             <Suspense fallback={\n  //                 <div id=\"preloader\">\n  //                     <div className=\"sk-three-bounce\">\n  //                         <div className=\"sk-child sk-bounce1\"></div>\n  //                         <div className=\"sk-child sk-bounce2\"></div>\n  //                         <div className=\"sk-child sk-bounce3\"></div>\n  //                     </div>\n  //                 </div>\n  //               }\n  //             >\n  //                 {routes}\n  //             </Suspense>\n  // \t\t</div>\n  // );\n  // }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Index, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_c = App;\n;\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: isAuthenticated(state)\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(App));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Index","connect","useDispatch","Route","Switch","withRouter","isAuthenticated","App","props","mapStateToProps","state"],"sources":["D:/Theme/package/src/App.js"],"sourcesContent":["// import { lazy, Suspense, useEffect } from 'react';\r\n/// Components\r\nimport Index from './jsx/index';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport {  Route,Switch, withRouter } from 'react-router-dom';\r\n// action\r\n// import { checkAutoLogin } from './services/AuthService';\r\nimport { isAuthenticated } from './store/selectors/AuthSelectors';\r\n/// Style\r\nimport \"./vendor/bootstrap-select/dist/css/bootstrap-select.min.css\";\r\nimport \"./css/style.css\";\r\n\r\n\r\n// const SignUp = lazy(() => import('./jsx/pages/Registration'));\r\n// const ForgotPassword = lazy(() => import('./jsx/pages/ForgotPassword'));\r\n// const Login = lazy(() => {\r\n//     return new Promise(resolve => {\r\n// \t\tsetTimeout(() => resolve(import('./jsx/pages/Login')), 500);\r\n// \t});\r\n// });\r\nfunction App (props) {\r\n    // const dispatch = useDispatch();\r\n    // useEffect(() => {\r\n    //     checkAutoLogin(dispatch, props.history);\r\n    // }, [dispatch, props.history]);\r\n    \r\n    // let routes = (  \r\n    //     <Switch>\r\n    //         <Route exact path='/login' component={Login} />\r\n    //         <Route exact path='/page-register' component={SignUp} />\r\n    //         <Route exact path='/page-forgot-password' component={ForgotPassword} />\r\n    //     </Switch>\r\n    // );\r\n    // if (props.isAuthenticated) {\r\n\t// \treturn (\r\n\t// \t\t<>\r\n    //             <Suspense fallback={\r\n    //                 <div id=\"preloader\">\r\n    //                     <div className=\"sk-three-bounce\">\r\n    //                         <div className=\"sk-child sk-bounce1\"></div>\r\n    //                         <div className=\"sk-child sk-bounce2\"></div>\r\n    //                         <div className=\"sk-child sk-bounce3\"></div>\r\n    //                     </div>\r\n    //                 </div>  \r\n    //                }\r\n    //             >\r\n    //                 <Index />\r\n    //             </Suspense>\r\n    //         </>\r\n    //     );\r\n\t\r\n\t// }else{\r\n\t// \treturn (\r\n\t// \t\t<div className=\"vh-100\">\r\n    //             <Suspense fallback={\r\n    //                 <div id=\"preloader\">\r\n    //                     <div className=\"sk-three-bounce\">\r\n    //                         <div className=\"sk-child sk-bounce1\"></div>\r\n    //                         <div className=\"sk-child sk-bounce2\"></div>\r\n    //                         <div className=\"sk-child sk-bounce3\"></div>\r\n    //                     </div>\r\n    //                 </div>\r\n    //               }\r\n    //             >\r\n    //                 {routes}\r\n    //             </Suspense>\r\n\t// \t\t</div>\r\n\t\t// );\r\n\t// }\r\n    return(<>\r\n    <Index/>\r\n    </>)\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthenticated: isAuthenticated(state),\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(App)); \r\n"],"mappings":";AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAAUC,KAAV,EAAgBC,MAAhB,EAAwBC,UAAxB,QAA0C,kBAA1C,C,CACA;AACA;;AACA,SAASC,eAAT,QAAgC,iCAAhC,C,CACA;;AACA,OAAO,6DAAP;AACA,OAAO,iBAAP,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA,SAASC,GAAT,CAAcC,KAAd,EAAqB;EACjB;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACH;EACA;EACG;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEH;EACA;EACA;EACG;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACH;EACC;EACD;EACG,oBAAO;IAAA,uBACP,QAAC,KAAD;MAAA;MAAA;MAAA;IAAA;EADO,iBAAP;AAGH;;KApDQD,G;AAoDR;;AAED,MAAME,eAAe,GAAIC,KAAD,IAAW;EAC/B,OAAO;IACHJ,eAAe,EAAEA,eAAe,CAACI,KAAD;EAD7B,CAAP;AAGH,CAJD;;AAMA,eAAeL,UAAU,CAACJ,OAAO,CAACQ,eAAD,CAAP,CAAyBF,GAAzB,CAAD,CAAzB"},"metadata":{},"sourceType":"module"}