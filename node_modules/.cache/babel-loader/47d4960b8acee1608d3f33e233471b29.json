{"ast":null,"code":"import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\n\nvar PdfStreamWriter =\n/** @class */\nfunction () {\n  /**\n   * Initialize an instance of `PdfStreamWriter` class.\n   * @private\n   */\n  function PdfStreamWriter(stream) {\n    if (stream == null) {\n      throw new Error('ArgumentNullException:stream');\n    }\n\n    this.stream = stream;\n  } //Implementation\n\n  /**\n   * `Clear` the stream.\n   * @public\n   */\n\n\n  PdfStreamWriter.prototype.clear = function () {\n    this.stream.clearStream();\n  };\n\n  PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n    if (dictionaryName instanceof PdfName) {\n      this.stream.write(dictionaryName.toString());\n      this.stream.write(Operators.whiteSpace);\n      this.writeOperator(Operators.setGraphicsState);\n    } else {\n      this.stream.write(Operators.slash);\n      this.stream.write(dictionaryName);\n      this.stream.write(Operators.whiteSpace);\n      this.writeOperator(Operators.setGraphicsState);\n    }\n  };\n  /**\n   * `Executes the XObject`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.executeObject = function (name) {\n    this.stream.write(name.toString());\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.paintXObject);\n    this.stream.write(Operators.newLine);\n  };\n  /**\n   * `Closes path object`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.closePath = function () {\n    this.writeOperator(Operators.closePath);\n  };\n  /**\n   * `Clips the path`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n    this.stream.write(Operators.clipPath);\n\n    if (useEvenOddRule) {\n      this.stream.write(Operators.evenOdd);\n    }\n\n    this.stream.write(Operators.whiteSpace);\n    this.stream.write(Operators.endPath);\n    this.stream.write(Operators.newLine);\n  };\n  /**\n   * `Closes, then fills and strokes the path`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n    this.stream.write(Operators.closeFillStrokePath);\n\n    if (useEvenOddRule) {\n      this.stream.write(Operators.evenOdd);\n      this.stream.write(Operators.newLine);\n    } else {\n      this.stream.write(Operators.newLine);\n    }\n  };\n  /**\n   * `Fills and strokes path`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n    this.stream.write(Operators.fillStroke);\n\n    if (useEvenOddRule) {\n      this.stream.write(Operators.evenOdd);\n      this.stream.write(Operators.newLine);\n    } else {\n      this.stream.write(Operators.newLine);\n    }\n  };\n  /**\n   * `Fills path`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n    this.stream.write(Operators.fill);\n\n    if (useEvenOddRule) {\n      this.stream.write(Operators.evenOdd);\n      this.stream.write(Operators.newLine);\n    } else {\n      this.stream.write(Operators.newLine);\n    }\n  };\n  /**\n   * `Ends the path`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.endPath = function () {\n    this.writeOperator(Operators.n);\n  };\n  /**\n   * `Closes and fills the path`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n    this.writeOperator(Operators.closePath);\n    this.stream.write(Operators.fill);\n\n    if (useEvenOddRule) {\n      this.stream.write(Operators.evenOdd);\n      this.stream.write(Operators.newLine);\n    } else {\n      this.stream.write(Operators.newLine);\n    }\n  };\n  /**\n   * `Closes and strokes the path`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.closeStrokePath = function () {\n    this.writeOperator(Operators.closeStrokePath);\n  };\n  /**\n   * `Sets the text scaling`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n    this.stream.write(PdfNumber.floatToString(textScaling));\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setTextScaling);\n  };\n  /**\n   * `Strokes path`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.strokePath = function () {\n    this.writeOperator(Operators.stroke);\n  };\n  /**\n   * `Restores` the graphics state.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.restoreGraphicsState = function () {\n    this.writeOperator(Operators.restoreState);\n  };\n  /**\n   * `Saves` the graphics state.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.saveGraphicsState = function () {\n    this.writeOperator(Operators.saveState);\n  };\n\n  PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n    if (typeof arg1 === 'undefined') {\n      this.writeOperator(Operators.goToNextLine);\n    } else if (arg1 instanceof PointF) {\n      this.writePoint(arg1);\n      this.writeOperator(Operators.setCoords);\n    } else {\n      this.writePoint(arg1, arg2);\n      this.writeOperator(Operators.setCoords);\n    }\n  };\n  /**\n   * Shows the `text`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.showText = function (text) {\n    this.checkTextParam(text);\n    this.writeText(text);\n    this.writeOperator(Operators.setText);\n  };\n  /**\n   * Sets `text leading`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.setLeading = function (leading) {\n    this.stream.write(PdfNumber.floatToString(leading));\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setTextLeading);\n  };\n  /**\n   * `Begins the path`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.beginPath = function (x, y) {\n    this.writePoint(x, y);\n    this.writeOperator(Operators.beginPath);\n  };\n  /**\n   * `Begins text`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.beginText = function () {\n    this.writeOperator(Operators.beginText);\n  };\n  /**\n   * `Ends text`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.endText = function () {\n    this.writeOperator(Operators.endText);\n  };\n\n  PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n    if (arg1 instanceof RectangleF) {\n      this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n    } else {\n      this.writePoint(arg1, arg2);\n      this.writePoint(arg3, arg4);\n      this.writeOperator(Operators.appendRectangle);\n    }\n  };\n\n  PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n    if (arg1 instanceof PointF) {\n      this.appendLineSegment(arg1.x, arg1.y);\n    } else {\n      this.writePoint(arg1, arg2);\n      this.writeOperator(Operators.appendLineSegment);\n    }\n  };\n  /**\n   * Sets the `text rendering mode`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n    this.stream.write(renderingMode.toString());\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setRenderingMode);\n  };\n  /**\n   * Sets the `character spacing`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n    this.stream.write(PdfNumber.floatToString(charSpacing));\n    this.stream.write(Operators.whiteSpace);\n    this.stream.write(Operators.setCharacterSpace);\n    this.stream.write(Operators.newLine);\n  };\n  /**\n   * Sets the `word spacing`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n    this.stream.write(PdfNumber.floatToString(wordSpacing));\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setWordSpace);\n  };\n\n  PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n    if (arg1 instanceof PdfString) {\n      this.checkTextParam(arg1);\n      this.writeText(arg1);\n      this.writeOperator(Operators.setTextOnNewLine);\n    } else {\n      this.checkTextParam(arg1);\n      this.writeText(arg1, arg2);\n      this.writeOperator(Operators.setTextOnNewLine);\n    }\n  };\n\n  PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n    if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n      var temparg1 = arg1;\n      var temparg2 = arg2; // if (temparg1 == null) {\n      //     throw new Error('ArgumentNullException:name');\n      // }\n\n      var op = temparg2 ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n      this.stream.write(temparg1.toString());\n      this.stream.write(Operators.whiteSpace);\n      this.stream.write(op);\n      this.stream.write(Operators.newLine);\n    } else {\n      var temparg1 = arg1;\n      var temparg2 = arg2;\n      this.setColorSpace(new PdfName(temparg1), temparg2);\n    }\n  };\n  /**\n   * Modifies current `transformation matrix`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n    if (matrix == null) {\n      throw new Error('ArgumentNullException:matrix');\n    }\n\n    this.stream.write(matrix.toString());\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.modifyCtm);\n  };\n\n  PdfStreamWriter.prototype.setFont = function (font, name, size) {\n    if (typeof name === 'string') {\n      this.setFont(font, new PdfName(name), size);\n    } else {\n      if (font == null) {\n        throw new Error('ArgumentNullException:font');\n      }\n\n      this.stream.write(name.toString());\n      this.stream.write(Operators.whiteSpace);\n      this.stream.write(PdfNumber.floatToString(size));\n      this.stream.write(Operators.whiteSpace);\n      this.writeOperator(Operators.setFont);\n    }\n  };\n  /**\n   * `Writes the operator`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.writeOperator = function (opcode) {\n    this.stream.write(opcode);\n    this.stream.write(Operators.newLine);\n  };\n\n  PdfStreamWriter.prototype.checkTextParam = function (text) {\n    if (text == null) {\n      throw new Error('ArgumentNullException:text');\n    }\n\n    if (typeof text === 'string' && text === '') {\n      throw new Error('ArgumentException:The text can not be an empty string, text');\n    }\n  };\n\n  PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n    if (arg1 instanceof PdfString && typeof arg2 === 'undefined') {\n      this.stream.write(arg1.pdfEncode());\n    } else {\n      var start = void 0;\n      var end = void 0;\n\n      if (arg2) {\n        start = PdfString.hexStringMark[0];\n        end = PdfString.hexStringMark[1];\n      } else {\n        start = PdfString.stringMark[0];\n        end = PdfString.stringMark[1];\n      }\n\n      this.stream.write(start);\n      this.stream.write(arg1);\n      this.stream.write(end);\n    }\n  };\n\n  PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n    if (arg1 instanceof PointF && typeof arg2 === 'undefined') {\n      this.writePoint(arg1.x, arg1.y);\n    } else {\n      var temparg1 = arg1;\n      this.stream.write(PdfNumber.floatToString(temparg1));\n      this.stream.write(Operators.whiteSpace); // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n\n      arg2 = this.updateY(arg2);\n      this.stream.write(PdfNumber.floatToString(arg2));\n      this.stream.write(Operators.whiteSpace);\n    }\n  };\n  /**\n   * `Updates y` co-ordinate.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.updateY = function (arg) {\n    return -arg;\n  };\n  /**\n   * `Writes string` to the file.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.write = function (string) {\n    var builder = '';\n    builder += string;\n    builder += Operators.newLine;\n    this.writeOperator(builder);\n  };\n  /**\n   * `Writes comment` to the file.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.writeComment = function (comment) {\n    if (comment != null && comment.length > 0) {\n      var builder = '';\n      builder += Operators.comment;\n      builder += Operators.whiteSpace;\n      builder += comment; //builder.Append( Operators.NewLine );\n\n      this.writeOperator(builder);\n    } else {\n      throw new Error('Invalid comment');\n    }\n  };\n  /**\n   * Sets the `color and space`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n    if (!color.isEmpty) {\n      // bool test = color is PdfExtendedColor;\n      this.stream.write(color.toString(colorSpace, forStroking));\n      this.stream.write(Operators.newLine);\n    }\n  }; // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n  // {\n  //     let pat : PdfArray = new PdfArray(pattern);\n  //     let off : PdfNumber = new PdfNumber(patternOffset);\n  //     this.setLineDashPatternHelper(pat, off);\n  // }\n  // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n  // {\n  //     pattern.Save(this);\n  //     this.m_stream.write(Operators.whiteSpace);\n  //     patternOffset.Save(this);\n  //     this.m_stream.write(Operators.whiteSpace);\n  //     this.writeOperator(Operators.setDashPattern);\n  // }\n\n  /**\n   * Sets the `line dash pattern`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n    // let pat : PdfArray = new PdfArray(pattern);\n    // let off : PdfNumber = new PdfNumber(patternOffset);\n    // this.setLineDashPatternHelper(pat, off);\n    this.setLineDashPatternHelper(pattern, patternOffset);\n  };\n  /**\n   * Sets the `line dash pattern`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n    var tempPattern = '[';\n\n    if (pattern.length > 1) {\n      for (var index = 0; index < pattern.length; index++) {\n        if (index === pattern.length - 1) {\n          tempPattern += pattern[index].toString();\n        } else {\n          tempPattern += pattern[index].toString() + ' ';\n        }\n      }\n    }\n\n    tempPattern += '] ';\n    tempPattern += patternOffset.toString();\n    tempPattern += ' ' + Operators.setDashPattern;\n    this.stream.write(tempPattern);\n    this.stream.write(Operators.newLine);\n  };\n  /**\n   * Sets the `miter limit`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n    this.stream.write(PdfNumber.floatToString(miterLimit));\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setMiterLimit);\n  };\n  /**\n   * Sets the `width of the line`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.setLineWidth = function (width) {\n    this.stream.write(PdfNumber.floatToString(width));\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setLineWidth);\n  };\n  /**\n   * Sets the `line cap`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n    this.stream.write(lineCapStyle.toString());\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setLineCapStyle);\n  };\n  /**\n   * Sets the `line join`.\n   * @private\n   */\n\n\n  PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n    this.stream.write(lineJoinStyle.toString());\n    this.stream.write(Operators.whiteSpace);\n    this.writeOperator(Operators.setLineJoinStyle);\n  };\n\n  Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n    //IPdfWriter members\n\n    /**\n     * Gets or sets the current `position` within the stream.\n     * @private\n     */\n    get: function get() {\n      return this.stream.position;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n    /**\n     * Gets `stream length`.\n     * @private\n     */\n    get: function get() {\n      var returnValue = 0;\n\n      if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n        for (var index = 0; index < this.stream.data.length; index++) {\n          returnValue += this.stream.data[index].length;\n        }\n      }\n\n      return returnValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n    /**\n     * Gets and Sets the `current document`.\n     * @private\n     */\n    get: function get() {\n      return null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /* tslint:disable-next-line:max-line-length */\n\n  PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n    if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF) {\n      this.writePoint(arg1.x, arg1.y);\n      this.writePoint(arg2.x, arg2.y);\n      this.writePoint(arg3.x, arg3.y);\n    } else {\n      this.writePoint(arg1, arg2);\n      this.writePoint(arg3, arg4);\n      this.writePoint(arg5, arg6);\n    }\n\n    this.writeOperator(Operators.appendbeziercurve);\n  };\n\n  PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {\n    if (colours != null) {\n      var count = colours.length;\n      var i = 0;\n\n      for (i = 0; i < count; ++i) {\n        this.stream.write(colours[i].toString());\n        this.stream.write(Operators.whiteSpace);\n      }\n    }\n\n    if (patternName != null) {\n      this.stream.write(patternName.toString());\n      this.stream.write(Operators.whiteSpace);\n    }\n\n    if (forStroking) {\n      this.writeOperator(Operators.setColorAndPatternStroking);\n    } else {\n      this.writeOperator(Operators.setColorAndPattern);\n    }\n  };\n\n  return PdfStreamWriter;\n}();\n\nexport { PdfStreamWriter };","map":{"version":3,"names":["Operators","PdfNumber","PointF","RectangleF","PdfString","PdfName","PdfStreamWriter","stream","Error","prototype","clear","clearStream","setGraphicsState","dictionaryName","write","toString","whiteSpace","writeOperator","slash","executeObject","name","paintXObject","newLine","closePath","clipPath","useEvenOddRule","evenOdd","endPath","closeFillStrokePath","fillStrokePath","fillStroke","fillPath","fill","n","closeFillPath","closeStrokePath","setTextScaling","textScaling","floatToString","strokePath","stroke","restoreGraphicsState","restoreState","saveGraphicsState","saveState","startNextLine","arg1","arg2","goToNextLine","writePoint","setCoords","showText","text","checkTextParam","writeText","setText","setLeading","leading","setTextLeading","beginPath","x","y","beginText","endText","appendRectangle","arg3","arg4","width","height","appendLineSegment","setTextRenderingMode","renderingMode","setRenderingMode","setCharacterSpacing","charSpacing","setCharacterSpace","setWordSpacing","wordSpacing","setWordSpace","showNextLineText","setTextOnNewLine","setColorSpace","temparg1","temparg2","op","selectcolorspaceforstroking","selectcolorspacefornonstroking","modifyCtm","matrix","setFont","font","size","opcode","pdfEncode","start","end","hexStringMark","stringMark","updateY","arg","string","builder","writeComment","comment","length","setColorAndSpace","color","colorSpace","forStroking","isEmpty","setLineDashPattern","pattern","patternOffset","setLineDashPatternHelper","tempPattern","index","setDashPattern","setMiterLimit","miterLimit","setLineWidth","setLineCap","lineCapStyle","setLineCapStyle","setLineJoin","lineJoinStyle","setLineJoinStyle","Object","defineProperty","get","position","enumerable","configurable","returnValue","data","appendBezierSegment","arg5","arg6","appendbeziercurve","setColourWithPattern","colours","patternName","count","i","setColorAndPatternStroking","setColorAndPattern"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-pdf-export/src/implementation/input-output/pdf-stream-writer.js"],"sourcesContent":["import { Operators } from './pdf-operators';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PointF, RectangleF } from './../drawing/pdf-drawing';\nimport { PdfString } from './../primitives/pdf-string';\nimport { PdfName } from './../primitives/pdf-name';\n/**\n * Helper class to `write PDF graphic streams` easily.\n * @private\n */\nvar PdfStreamWriter = /** @class */ (function () {\n    /**\n     * Initialize an instance of `PdfStreamWriter` class.\n     * @private\n     */\n    function PdfStreamWriter(stream) {\n        if (stream == null) {\n            throw new Error('ArgumentNullException:stream');\n        }\n        this.stream = stream;\n    }\n    //Implementation\n    /**\n     * `Clear` the stream.\n     * @public\n     */\n    PdfStreamWriter.prototype.clear = function () {\n        this.stream.clearStream();\n    };\n    PdfStreamWriter.prototype.setGraphicsState = function (dictionaryName) {\n        if (dictionaryName instanceof PdfName) {\n            this.stream.write(dictionaryName.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n        else {\n            this.stream.write(Operators.slash);\n            this.stream.write(dictionaryName);\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setGraphicsState);\n        }\n    };\n    /**\n     * `Executes the XObject`.\n     * @private\n     */\n    PdfStreamWriter.prototype.executeObject = function (name) {\n        this.stream.write(name.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.paintXObject);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes path object`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closePath = function () {\n        this.writeOperator(Operators.closePath);\n    };\n    /**\n     * `Clips the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.clipPath = function (useEvenOddRule) {\n        this.stream.write(Operators.clipPath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n        }\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.endPath);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * `Closes, then fills and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.closeFillStrokePath);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills and strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillStrokePath = function (useEvenOddRule) {\n        this.stream.write(Operators.fillStroke);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Fills path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.fillPath = function (useEvenOddRule) {\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Ends the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endPath = function () {\n        this.writeOperator(Operators.n);\n    };\n    /**\n     * `Closes and fills the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeFillPath = function (useEvenOddRule) {\n        this.writeOperator(Operators.closePath);\n        this.stream.write(Operators.fill);\n        if (useEvenOddRule) {\n            this.stream.write(Operators.evenOdd);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            this.stream.write(Operators.newLine);\n        }\n    };\n    /**\n     * `Closes and strokes the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.closeStrokePath = function () {\n        this.writeOperator(Operators.closeStrokePath);\n    };\n    /**\n     * `Sets the text scaling`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextScaling = function (textScaling) {\n        this.stream.write(PdfNumber.floatToString(textScaling));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextScaling);\n    };\n    /**\n     * `Strokes path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.strokePath = function () {\n        this.writeOperator(Operators.stroke);\n    };\n    /**\n     * `Restores` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.restoreGraphicsState = function () {\n        this.writeOperator(Operators.restoreState);\n    };\n    /**\n     * `Saves` the graphics state.\n     * @private\n     */\n    PdfStreamWriter.prototype.saveGraphicsState = function () {\n        this.writeOperator(Operators.saveState);\n    };\n    PdfStreamWriter.prototype.startNextLine = function (arg1, arg2) {\n        if (typeof arg1 === 'undefined') {\n            this.writeOperator(Operators.goToNextLine);\n        }\n        else if (arg1 instanceof PointF) {\n            this.writePoint(arg1);\n            this.writeOperator(Operators.setCoords);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.setCoords);\n        }\n    };\n    /**\n     * Shows the `text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.showText = function (text) {\n        this.checkTextParam(text);\n        this.writeText(text);\n        this.writeOperator(Operators.setText);\n    };\n    /**\n     * Sets `text leading`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLeading = function (leading) {\n        this.stream.write(PdfNumber.floatToString(leading));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setTextLeading);\n    };\n    /**\n     * `Begins the path`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginPath = function (x, y) {\n        this.writePoint(x, y);\n        this.writeOperator(Operators.beginPath);\n    };\n    /**\n     * `Begins text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.beginText = function () {\n        this.writeOperator(Operators.beginText);\n    };\n    /**\n     * `Ends text`.\n     * @private\n     */\n    PdfStreamWriter.prototype.endText = function () {\n        this.writeOperator(Operators.endText);\n    };\n    PdfStreamWriter.prototype.appendRectangle = function (arg1, arg2, arg3, arg4) {\n        if (arg1 instanceof RectangleF) {\n            this.appendRectangle(arg1.x, arg1.y, arg1.width, arg1.height);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writeOperator(Operators.appendRectangle);\n        }\n    };\n    PdfStreamWriter.prototype.appendLineSegment = function (arg1, arg2) {\n        if (arg1 instanceof PointF) {\n            this.appendLineSegment(arg1.x, arg1.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writeOperator(Operators.appendLineSegment);\n        }\n    };\n    /**\n     * Sets the `text rendering mode`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setTextRenderingMode = function (renderingMode) {\n        this.stream.write(renderingMode.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setRenderingMode);\n    };\n    /**\n     * Sets the `character spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setCharacterSpacing = function (charSpacing) {\n        this.stream.write(PdfNumber.floatToString(charSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.stream.write(Operators.setCharacterSpace);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `word spacing`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setWordSpacing = function (wordSpacing) {\n        this.stream.write(PdfNumber.floatToString(wordSpacing));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setWordSpace);\n    };\n    PdfStreamWriter.prototype.showNextLineText = function (arg1, arg2) {\n        if (arg1 instanceof PdfString) {\n            this.checkTextParam(arg1);\n            this.writeText(arg1);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n        else {\n            this.checkTextParam(arg1);\n            this.writeText(arg1, arg2);\n            this.writeOperator(Operators.setTextOnNewLine);\n        }\n    };\n    PdfStreamWriter.prototype.setColorSpace = function (arg1, arg2) {\n        if (arg1 instanceof PdfName && typeof arg2 === 'boolean') {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            // if (temparg1 == null) {\n            //     throw new Error('ArgumentNullException:name');\n            // }\n            var op = (temparg2) ? Operators.selectcolorspaceforstroking : Operators.selectcolorspacefornonstroking;\n            this.stream.write(temparg1.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(op);\n            this.stream.write(Operators.newLine);\n        }\n        else {\n            var temparg1 = arg1;\n            var temparg2 = arg2;\n            this.setColorSpace(new PdfName(temparg1), temparg2);\n        }\n    };\n    /**\n     * Modifies current `transformation matrix`.\n     * @private\n     */\n    PdfStreamWriter.prototype.modifyCtm = function (matrix) {\n        if (matrix == null) {\n            throw new Error('ArgumentNullException:matrix');\n        }\n        this.stream.write(matrix.toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.modifyCtm);\n    };\n    PdfStreamWriter.prototype.setFont = function (font, name, size) {\n        if (typeof name === 'string') {\n            this.setFont(font, new PdfName(name), size);\n        }\n        else {\n            if (font == null) {\n                throw new Error('ArgumentNullException:font');\n            }\n            this.stream.write(name.toString());\n            this.stream.write(Operators.whiteSpace);\n            this.stream.write(PdfNumber.floatToString(size));\n            this.stream.write(Operators.whiteSpace);\n            this.writeOperator(Operators.setFont);\n        }\n    };\n    /**\n     * `Writes the operator`.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeOperator = function (opcode) {\n        this.stream.write(opcode);\n        this.stream.write(Operators.newLine);\n    };\n    PdfStreamWriter.prototype.checkTextParam = function (text) {\n        if (text == null) {\n            throw new Error('ArgumentNullException:text');\n        }\n        if (typeof text === 'string' && text === '') {\n            throw new Error('ArgumentException:The text can not be an empty string, text');\n        }\n    };\n    PdfStreamWriter.prototype.writeText = function (arg1, arg2) {\n        if ((arg1 instanceof PdfString) && (typeof arg2 === 'undefined')) {\n            this.stream.write(arg1.pdfEncode());\n        }\n        else {\n            var start = void 0;\n            var end = void 0;\n            if (arg2) {\n                start = PdfString.hexStringMark[0];\n                end = PdfString.hexStringMark[1];\n            }\n            else {\n                start = PdfString.stringMark[0];\n                end = PdfString.stringMark[1];\n            }\n            this.stream.write(start);\n            this.stream.write(arg1);\n            this.stream.write(end);\n        }\n    };\n    PdfStreamWriter.prototype.writePoint = function (arg1, arg2) {\n        if ((arg1 instanceof PointF) && (typeof arg2 === 'undefined')) {\n            this.writePoint(arg1.x, arg1.y);\n        }\n        else {\n            var temparg1 = arg1;\n            this.stream.write(PdfNumber.floatToString(temparg1));\n            this.stream.write(Operators.whiteSpace);\n            // NOTE: Change Y co-ordinate because we shifted co-ordinate system only.\n            arg2 = this.updateY(arg2);\n            this.stream.write(PdfNumber.floatToString(arg2));\n            this.stream.write(Operators.whiteSpace);\n        }\n    };\n    /**\n     * `Updates y` co-ordinate.\n     * @private\n     */\n    PdfStreamWriter.prototype.updateY = function (arg) {\n        return -arg;\n    };\n    /**\n     * `Writes string` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.write = function (string) {\n        var builder = '';\n        builder += string;\n        builder += Operators.newLine;\n        this.writeOperator(builder);\n    };\n    /**\n     * `Writes comment` to the file.\n     * @private\n     */\n    PdfStreamWriter.prototype.writeComment = function (comment) {\n        if (comment != null && comment.length > 0) {\n            var builder = '';\n            builder += Operators.comment;\n            builder += Operators.whiteSpace;\n            builder += comment;\n            //builder.Append( Operators.NewLine );\n            this.writeOperator(builder);\n        }\n        else {\n            throw new Error('Invalid comment');\n        }\n    };\n    /**\n     * Sets the `color and space`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setColorAndSpace = function (color, colorSpace, forStroking) {\n        if (!color.isEmpty) {\n            // bool test = color is PdfExtendedColor;\n            this.stream.write(color.toString(colorSpace, forStroking));\n            this.stream.write(Operators.newLine);\n        }\n    };\n    // public setLineDashPattern(pattern : number[], patternOffset : number) : void\n    // {\n    //     let pat : PdfArray = new PdfArray(pattern);\n    //     let off : PdfNumber = new PdfNumber(patternOffset);\n    //     this.setLineDashPatternHelper(pat, off);\n    // }\n    // private setLineDashPatternHelper(pattern : PdfArray, patternOffset : PdfNumber) : void\n    // {\n    //     pattern.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     patternOffset.Save(this);\n    //     this.m_stream.write(Operators.whiteSpace);\n    //     this.writeOperator(Operators.setDashPattern);\n    // }\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPattern = function (pattern, patternOffset) {\n        // let pat : PdfArray = new PdfArray(pattern);\n        // let off : PdfNumber = new PdfNumber(patternOffset);\n        // this.setLineDashPatternHelper(pat, off);\n        this.setLineDashPatternHelper(pattern, patternOffset);\n    };\n    /**\n     * Sets the `line dash pattern`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineDashPatternHelper = function (pattern, patternOffset) {\n        var tempPattern = '[';\n        if (pattern.length > 1) {\n            for (var index = 0; index < pattern.length; index++) {\n                if (index === pattern.length - 1) {\n                    tempPattern += pattern[index].toString();\n                }\n                else {\n                    tempPattern += pattern[index].toString() + ' ';\n                }\n            }\n        }\n        tempPattern += '] ';\n        tempPattern += patternOffset.toString();\n        tempPattern += ' ' + Operators.setDashPattern;\n        this.stream.write(tempPattern);\n        this.stream.write(Operators.newLine);\n    };\n    /**\n     * Sets the `miter limit`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setMiterLimit = function (miterLimit) {\n        this.stream.write(PdfNumber.floatToString(miterLimit));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setMiterLimit);\n    };\n    /**\n     * Sets the `width of the line`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineWidth = function (width) {\n        this.stream.write(PdfNumber.floatToString(width));\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineWidth);\n    };\n    /**\n     * Sets the `line cap`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineCap = function (lineCapStyle) {\n        this.stream.write((lineCapStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineCapStyle);\n    };\n    /**\n     * Sets the `line join`.\n     * @private\n     */\n    PdfStreamWriter.prototype.setLineJoin = function (lineJoinStyle) {\n        this.stream.write((lineJoinStyle).toString());\n        this.stream.write(Operators.whiteSpace);\n        this.writeOperator(Operators.setLineJoinStyle);\n    };\n    Object.defineProperty(PdfStreamWriter.prototype, \"position\", {\n        //IPdfWriter members\n        /**\n         * Gets or sets the current `position` within the stream.\n         * @private\n         */\n        get: function () {\n            return this.stream.position;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"length\", {\n        /**\n         * Gets `stream length`.\n         * @private\n         */\n        get: function () {\n            var returnValue = 0;\n            if (this.stream.data.length !== 0 && this.stream.data.length !== -1) {\n                for (var index = 0; index < this.stream.data.length; index++) {\n                    returnValue += this.stream.data[index].length;\n                }\n            }\n            return returnValue;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfStreamWriter.prototype, \"document\", {\n        /**\n         * Gets and Sets the `current document`.\n         * @private\n         */\n        get: function () {\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* tslint:disable-next-line:max-line-length */\n    PdfStreamWriter.prototype.appendBezierSegment = function (arg1, arg2, arg3, arg4, arg5, arg6) {\n        if (arg1 instanceof PointF && arg2 instanceof PointF && arg3 instanceof PointF) {\n            this.writePoint(arg1.x, arg1.y);\n            this.writePoint(arg2.x, arg2.y);\n            this.writePoint(arg3.x, arg3.y);\n        }\n        else {\n            this.writePoint(arg1, arg2);\n            this.writePoint(arg3, arg4);\n            this.writePoint(arg5, arg6);\n        }\n        this.writeOperator(Operators.appendbeziercurve);\n    };\n    PdfStreamWriter.prototype.setColourWithPattern = function (colours, patternName, forStroking) {\n        if ((colours != null)) {\n            var count = colours.length;\n            var i = 0;\n            for (i = 0; i < count; ++i) {\n                this.stream.write(colours[i].toString());\n                this.stream.write(Operators.whiteSpace);\n            }\n        }\n        if ((patternName != null)) {\n            this.stream.write(patternName.toString());\n            this.stream.write(Operators.whiteSpace);\n        }\n        if (forStroking) {\n            this.writeOperator(Operators.setColorAndPatternStroking);\n        }\n        else {\n            this.writeOperator(Operators.setColorAndPattern);\n        }\n    };\n    return PdfStreamWriter;\n}());\nexport { PdfStreamWriter };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}