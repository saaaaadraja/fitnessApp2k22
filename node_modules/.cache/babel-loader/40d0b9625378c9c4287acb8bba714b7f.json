{"ast":null,"code":"/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\n\nexport var ImageFormat;\n\n(function (ImageFormat) {\n  /**\n   * Specifies the type of `Unknown`.\n   * @hidden\n   * @private\n   */\n  ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n  /**\n   * Specifies the type of `Bmp`.\n   * @hidden\n   * @private\n   */\n\n  ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n  /**\n   * Specifies the type of `Emf`.\n   * @hidden\n   * @private\n   */\n\n  ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n  /**\n   * Specifies the type of `Gif`.\n   * @hidden\n   * @private\n   */\n\n  ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n  /**\n   * Specifies the type of `Jpeg`.\n   * @hidden\n   * @private\n   */\n\n  ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n  /**\n   * Specifies the type of `Png`.\n   * @hidden\n   * @private\n   */\n\n  ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n  /**\n   * Specifies the type of `Wmf`.\n   * @hidden\n   * @private\n   */\n\n  ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n  /**\n   * Specifies the type of `Icon`.\n   * @hidden\n   * @private\n   */\n\n  ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\n\n\nvar ImageDecoder =\n/** @class */\nfunction () {\n  /**\n   * Initialize the new instance for `image-decoder` class.\n   * @private\n   */\n  function ImageDecoder(stream) {\n    /**\n     * Start of file markers.\n     * @hidden\n     * @private\n     */\n    this.sof1Marker = 0x00C1;\n    this.sof2Marker = 0x00C2;\n    this.sof3Marker = 0x00C3;\n    this.sof5Marker = 0x00C5;\n    this.sof6Marker = 0x00C6;\n    this.sof7Marker = 0x00C7;\n    this.sof9Marker = 0x00C9;\n    this.sof10Marker = 0x00CA;\n    this.sof11Marker = 0x00CB;\n    this.sof13Marker = 0x00CD;\n    this.sof14Marker = 0x00CE;\n    this.sof15Marker = 0x00CF;\n    /**\n     * Specifies `format` of image.\n     * @hidden\n     * @private\n     */\n\n    this.mFormat = ImageFormat.Unknown;\n    /**\n     * `Bits per component`.\n     * @default 8\n     * @hidden\n     * @private\n     */\n\n    this.mbitsPerComponent = 8;\n    /**\n     * Internal variable for accessing fields from `DictionryProperties` class.\n     * @hidden\n     * @private\n     */\n\n    this.dictionaryProperties = new DictionaryProperties();\n    this.mStream = stream;\n    this.initialize();\n  }\n\n  Object.defineProperty(ImageDecoder.prototype, \"height\", {\n    /**\n     * Gets the `height` of image.\n     * @hidden\n     * @private\n     */\n    get: function get() {\n      return this.mHeight;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ImageDecoder.prototype, \"width\", {\n    /**\n     * Gets the `width` of image.\n     * @hidden\n     * @private\n     */\n    get: function get() {\n      return this.mWidth;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n    /**\n     * Gets `bits per component`.\n     * @hidden\n     * @private\n     */\n    get: function get() {\n      return this.mbitsPerComponent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ImageDecoder.prototype, \"size\", {\n    /**\n     * Gets the `size` of an image data.\n     * @hidden\n     * @private\n     */\n    get: function get() {\n      return this.mImageData.count;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n    /**\n     * Gets the value of an `image data`.\n     * @hidden\n     * @private\n     */\n    get: function get() {\n      return this.mImageData;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n    /**\n     * Gets the value of an `image data as number array`.\n     * @hidden\n     * @private\n     */\n    get: function get() {\n      return this.mImageData.internalBuffer.buffer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * `Initialize` image data and image stream.\n   * @hidden\n   * @private\n   */\n\n  ImageDecoder.prototype.initialize = function () {\n    if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n      this.mFormat = ImageFormat.Jpeg;\n      this.parseJpegImage();\n    }\n\n    this.reset();\n    this.mImageData = new ByteArray(this.mStream.count);\n    this.mStream.read(this.mImageData, 0, this.mImageData.count);\n  };\n  /**\n   * `Reset` stream position into 0.\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.prototype.reset = function () {\n    this.mStream.position = 0;\n  };\n  /**\n   * `Parse` Jpeg image.\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.prototype.parseJpegImage = function () {\n    this.reset();\n    var imgData = new ByteArray(this.mStream.count);\n    this.mStream.read(imgData, 0, imgData.count);\n    var i = 4;\n    var isLengthExceed = false;\n    /* tslint:disable */\n\n    var length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n\n    while (i < imgData.count) {\n      i += length;\n\n      if (i < imgData.count) {\n        if (imgData.getBuffer(i + 1) === 192) {\n          this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n          this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n          return;\n        } else {\n          i += 2;\n          length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n        }\n      } else {\n        isLengthExceed = true;\n        break;\n      }\n    }\n\n    if (isLengthExceed) {\n      this.mStream.position = 0;\n      this.skip(this.mStream, 2);\n      this.readExceededJPGImage(this.mStream);\n    }\n    /* tslint:enable */\n\n  };\n\n  Object.defineProperty(ImageDecoder.prototype, \"format\", {\n    /**\n     * Gets the image `format`.\n     * @private\n     * @hidden\n     */\n    get: function get() {\n      return this.mFormat;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * `Checks if JPG`.\n   * @private\n   * @hidden\n   */\n\n  ImageDecoder.prototype.checkIfJpeg = function () {\n    this.reset();\n\n    for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n      if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n        return false;\n      }\n\n      this.mStream.position++;\n    }\n\n    return true;\n  };\n  /**\n   * Return image `dictionary`.\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.prototype.getImageDictionary = function () {\n    if (this.mFormat === ImageFormat.Jpeg) {\n      var tempArrayBuffer = this.imageData.internalBuffer.length;\n      this.imageStream = new PdfStream();\n      this.imageStream.isImage = true;\n      var tempString = '';\n      var decodedString = '';\n\n      for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n        tempString += String.fromCharCode(null, this.mStream.readByte(i));\n      }\n\n      for (var i = 0; i < tempString.length; i++) {\n        if (i % 2 !== 0) {\n          decodedString += tempString[i];\n        }\n      }\n\n      this.imageStream.data = [decodedString];\n      this.imageStream.compress = false;\n      this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n      this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n      this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n      this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n      this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n      this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n      this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n      this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n      return this.imageStream;\n    } else {\n      return this.imageStream;\n    }\n  };\n  /**\n   * Return `colorSpace` of an image.\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.prototype.getColorSpace = function () {\n    return this.dictionaryProperties.deviceRgb;\n  };\n  /**\n   * Return `decode parameters` of an image.\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.prototype.getDecodeParams = function () {\n    var decodeParams = new PdfDictionary();\n    decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n    decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n    decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n    decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n    decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n    return decodeParams;\n  };\n  /**\n   * 'readExceededJPGImage' stream\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.prototype.readExceededJPGImage = function (stream) {\n    this.mStream = stream;\n    var isContinueReading = true;\n\n    while (isContinueReading) {\n      var marker = this.getMarker(stream);\n\n      switch (marker) {\n        case this.sof1Marker:\n        case this.sof2Marker:\n        case this.sof3Marker:\n        case this.sof5Marker:\n        case this.sof6Marker:\n        case this.sof7Marker:\n        case this.sof9Marker:\n        case this.sof10Marker:\n        case this.sof11Marker:\n        case this.sof13Marker:\n        case this.sof14Marker:\n        case this.sof15Marker:\n          stream.position += 3;\n          this.mHeight = this.mStream.readNextTwoBytes(stream);\n          this.mWidth = this.mStream.readNextTwoBytes(stream);\n          isContinueReading = false;\n          break;\n\n        default:\n          this.skipStream(stream);\n          break;\n      }\n    }\n  };\n  /**\n   * 'skip' stream\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.prototype.skip = function (stream, noOfBytes) {\n    this.mStream = stream;\n    var temp = new ByteArray(noOfBytes);\n    this.mStream.read(temp, 0, temp.count);\n  };\n  /**\n   * 'getMarker' stream\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.prototype.getMarker = function (stream) {\n    var skippedByte = 0;\n    var marker = 32;\n    marker = stream.readByte(this.mStream.position);\n    stream.position++;\n\n    while (marker !== 255) {\n      skippedByte++;\n      marker = stream.readByte(this.mStream.position);\n      stream.position++;\n    }\n\n    do {\n      marker = stream.readByte(this.mStream.position);\n      stream.position++;\n    } while (marker === 255);\n\n    return marker;\n  };\n  /**\n   * 'skipStream' stream\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.prototype.skipStream = function (stream) {\n    var markerLength = this.mStream.readNextTwoBytes(stream) - 2;\n\n    if (markerLength > 0) {\n      stream.position += markerLength;\n    }\n  };\n  /**\n   * Number array for `png header`.\n   * @hidden\n   * @private\n   */\n\n\n  ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n  /**\n   * Number Array for `jpeg header`.\n   * @hidden\n   * @private\n   */\n\n  ImageDecoder.mJpegHeader = [255, 216];\n  /**\n   * Number array for `gif header`.\n   * @hidden\n   * @private\n   */\n\n  ImageDecoder.GIF_HEADER = 'G,I,F,8';\n  /**\n   * Number array for `bmp header.`\n   * @hidden\n   * @private\n   */\n\n  ImageDecoder.BMP_HEADER = 'B,M';\n  return ImageDecoder;\n}();\n\nexport { ImageDecoder };","map":{"version":3,"names":["ByteArray","PdfStream","DictionaryProperties","PdfName","PdfNumber","PdfBoolean","PdfDictionary","ImageFormat","ImageDecoder","stream","sof1Marker","sof2Marker","sof3Marker","sof5Marker","sof6Marker","sof7Marker","sof9Marker","sof10Marker","sof11Marker","sof13Marker","sof14Marker","sof15Marker","mFormat","Unknown","mbitsPerComponent","dictionaryProperties","mStream","initialize","Object","defineProperty","prototype","get","mHeight","enumerable","configurable","mWidth","mImageData","count","internalBuffer","buffer","checkIfJpeg","Jpeg","parseJpegImage","reset","read","position","imgData","i","isLengthExceed","length","getBuffer","skip","readExceededJPGImage","mJpegHeader","readByte","getImageDictionary","tempArrayBuffer","imageData","imageStream","isImage","tempString","decodedString","imageDataAsNumberArray","byteLength","String","fromCharCode","data","compress","items","setValue","type","xObject","subtype","image","width","height","bitsPerComponent","filter","dctdecode","colorSpace","getColorSpace","decodeParms","getDecodeParams","deviceRgb","decodeParams","columns","blackIs1","k","predictor","isContinueReading","marker","getMarker","readNextTwoBytes","skipStream","noOfBytes","temp","skippedByte","markerLength","mPngHeader","GIF_HEADER","BMP_HEADER"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/images/image-decoder.js"],"sourcesContent":["/**\n * ImageDecoder class\n */\nimport { ByteArray } from './byte-array';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../../primitives/pdf-name';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfBoolean } from './../../primitives/pdf-boolean';\nimport { PdfDictionary } from './../../primitives/pdf-dictionary';\n/**\n * Specifies the image `format`.\n * @private\n */\nexport var ImageFormat;\n(function (ImageFormat) {\n    /**\n     * Specifies the type of `Unknown`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Unknown\"] = 0] = \"Unknown\";\n    /**\n     * Specifies the type of `Bmp`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Bmp\"] = 1] = \"Bmp\";\n    /**\n     * Specifies the type of `Emf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Emf\"] = 2] = \"Emf\";\n    /**\n     * Specifies the type of `Gif`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Gif\"] = 3] = \"Gif\";\n    /**\n     * Specifies the type of `Jpeg`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Jpeg\"] = 4] = \"Jpeg\";\n    /**\n     * Specifies the type of `Png`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Png\"] = 5] = \"Png\";\n    /**\n     * Specifies the type of `Wmf`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Wmf\"] = 6] = \"Wmf\";\n    /**\n     * Specifies the type of `Icon`.\n     * @hidden\n     * @private\n     */\n    ImageFormat[ImageFormat[\"Icon\"] = 7] = \"Icon\";\n})(ImageFormat || (ImageFormat = {}));\n/**\n * `Decode the image stream`.\n * @private\n */\nvar ImageDecoder = /** @class */ (function () {\n    /**\n     * Initialize the new instance for `image-decoder` class.\n     * @private\n     */\n    function ImageDecoder(stream) {\n        /**\n         * Start of file markers.\n         * @hidden\n         * @private\n         */\n        this.sof1Marker = 0x00C1;\n        this.sof2Marker = 0x00C2;\n        this.sof3Marker = 0x00C3;\n        this.sof5Marker = 0x00C5;\n        this.sof6Marker = 0x00C6;\n        this.sof7Marker = 0x00C7;\n        this.sof9Marker = 0x00C9;\n        this.sof10Marker = 0x00CA;\n        this.sof11Marker = 0x00CB;\n        this.sof13Marker = 0x00CD;\n        this.sof14Marker = 0x00CE;\n        this.sof15Marker = 0x00CF;\n        /**\n         * Specifies `format` of image.\n         * @hidden\n         * @private\n         */\n        this.mFormat = ImageFormat.Unknown;\n        /**\n         * `Bits per component`.\n         * @default 8\n         * @hidden\n         * @private\n         */\n        this.mbitsPerComponent = 8;\n        /**\n         * Internal variable for accessing fields from `DictionryProperties` class.\n         * @hidden\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        this.mStream = stream;\n        this.initialize();\n    }\n    Object.defineProperty(ImageDecoder.prototype, \"height\", {\n        /**\n         * Gets the `height` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"width\", {\n        /**\n         * Gets the `width` of image.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"bitsPerComponent\", {\n        /**\n         * Gets `bits per component`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mbitsPerComponent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"size\", {\n        /**\n         * Gets the `size` of an image data.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageData\", {\n        /**\n         * Gets the value of an `image data`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ImageDecoder.prototype, \"imageDataAsNumberArray\", {\n        /**\n         * Gets the value of an `image data as number array`.\n         * @hidden\n         * @private\n         */\n        get: function () {\n            return this.mImageData.internalBuffer.buffer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Initialize` image data and image stream.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.initialize = function () {\n        if (this.mFormat === ImageFormat.Unknown && this.checkIfJpeg()) {\n            this.mFormat = ImageFormat.Jpeg;\n            this.parseJpegImage();\n        }\n        this.reset();\n        this.mImageData = new ByteArray(this.mStream.count);\n        this.mStream.read(this.mImageData, 0, this.mImageData.count);\n    };\n    /**\n     * `Reset` stream position into 0.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.reset = function () {\n        this.mStream.position = 0;\n    };\n    /**\n     * `Parse` Jpeg image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.parseJpegImage = function () {\n        this.reset();\n        var imgData = new ByteArray(this.mStream.count);\n        this.mStream.read(imgData, 0, imgData.count);\n        var i = 4;\n        var isLengthExceed = false;\n        /* tslint:disable */\n        var length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n        while (i < imgData.count) {\n            i += length;\n            if (i < imgData.count) {\n                if (imgData.getBuffer(i + 1) === 192) {\n                    this.mHeight = imgData.getBuffer(i + 5) * 256 + imgData.getBuffer(i + 6);\n                    this.mWidth = imgData.getBuffer(i + 7) * 256 + imgData.getBuffer(i + 8);\n                    return;\n                }\n                else {\n                    i += 2;\n                    length = imgData.getBuffer(i) * 256 + imgData.getBuffer(i + 1);\n                }\n            }\n            else {\n                isLengthExceed = true;\n                break;\n            }\n        }\n        if (isLengthExceed) {\n            this.mStream.position = 0;\n            this.skip(this.mStream, 2);\n            this.readExceededJPGImage(this.mStream);\n        }\n        /* tslint:enable */\n    };\n    Object.defineProperty(ImageDecoder.prototype, \"format\", {\n        /**\n         * Gets the image `format`.\n         * @private\n         * @hidden\n         */\n        get: function () {\n            return this.mFormat;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * `Checks if JPG`.\n     * @private\n     * @hidden\n     */\n    ImageDecoder.prototype.checkIfJpeg = function () {\n        this.reset();\n        for (var i = 0; i < ImageDecoder.mJpegHeader.length; i++) {\n            if (ImageDecoder.mJpegHeader[i] !== this.mStream.readByte(i)) {\n                return false;\n            }\n            this.mStream.position++;\n        }\n        return true;\n    };\n    /**\n     * Return image `dictionary`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getImageDictionary = function () {\n        if (this.mFormat === ImageFormat.Jpeg) {\n            var tempArrayBuffer = this.imageData.internalBuffer.length;\n            this.imageStream = new PdfStream();\n            this.imageStream.isImage = true;\n            var tempString = '';\n            var decodedString = '';\n            for (var i = 0; i < this.imageDataAsNumberArray.byteLength; i++) {\n                tempString += String.fromCharCode(null, this.mStream.readByte(i));\n            }\n            for (var i = 0; i < tempString.length; i++) {\n                if (i % 2 !== 0) {\n                    decodedString += tempString[i];\n                }\n            }\n            this.imageStream.data = [decodedString];\n            this.imageStream.compress = false;\n            this.imageStream.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.xObject));\n            this.imageStream.items.setValue(this.dictionaryProperties.subtype, new PdfName(this.dictionaryProperties.image));\n            this.imageStream.items.setValue(this.dictionaryProperties.width, new PdfNumber(this.width));\n            this.imageStream.items.setValue(this.dictionaryProperties.height, new PdfNumber(this.height));\n            this.imageStream.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n            this.imageStream.items.setValue(this.dictionaryProperties.filter, new PdfName(this.dictionaryProperties.dctdecode));\n            this.imageStream.items.setValue(this.dictionaryProperties.colorSpace, new PdfName(this.getColorSpace()));\n            this.imageStream.items.setValue(this.dictionaryProperties.decodeParms, this.getDecodeParams());\n            return this.imageStream;\n        }\n        else {\n            return this.imageStream;\n        }\n    };\n    /**\n     * Return `colorSpace` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getColorSpace = function () {\n        return this.dictionaryProperties.deviceRgb;\n    };\n    /**\n     * Return `decode parameters` of an image.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getDecodeParams = function () {\n        var decodeParams = new PdfDictionary();\n        decodeParams.items.setValue(this.dictionaryProperties.columns, new PdfNumber(this.width));\n        decodeParams.items.setValue(this.dictionaryProperties.blackIs1, new PdfBoolean(true));\n        decodeParams.items.setValue(this.dictionaryProperties.k, new PdfNumber(-1));\n        decodeParams.items.setValue(this.dictionaryProperties.predictor, new PdfNumber(15));\n        decodeParams.items.setValue(this.dictionaryProperties.bitsPerComponent, new PdfNumber(this.bitsPerComponent));\n        return decodeParams;\n    };\n    /**\n     * 'readExceededJPGImage' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.readExceededJPGImage = function (stream) {\n        this.mStream = stream;\n        var isContinueReading = true;\n        while (isContinueReading) {\n            var marker = this.getMarker(stream);\n            switch (marker) {\n                case this.sof1Marker:\n                case this.sof2Marker:\n                case this.sof3Marker:\n                case this.sof5Marker:\n                case this.sof6Marker:\n                case this.sof7Marker:\n                case this.sof9Marker:\n                case this.sof10Marker:\n                case this.sof11Marker:\n                case this.sof13Marker:\n                case this.sof14Marker:\n                case this.sof15Marker:\n                    stream.position += 3;\n                    this.mHeight = this.mStream.readNextTwoBytes(stream);\n                    this.mWidth = this.mStream.readNextTwoBytes(stream);\n                    isContinueReading = false;\n                    break;\n                default:\n                    this.skipStream(stream);\n                    break;\n            }\n        }\n    };\n    /**\n     * 'skip' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skip = function (stream, noOfBytes) {\n        this.mStream = stream;\n        var temp = new ByteArray(noOfBytes);\n        this.mStream.read(temp, 0, temp.count);\n    };\n    /**\n     * 'getMarker' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.getMarker = function (stream) {\n        var skippedByte = 0;\n        var marker = 32;\n        marker = stream.readByte(this.mStream.position);\n        stream.position++;\n        while (marker !== 255) {\n            skippedByte++;\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        }\n        do {\n            marker = stream.readByte(this.mStream.position);\n            stream.position++;\n        } while (marker === 255);\n        return marker;\n    };\n    /**\n     * 'skipStream' stream\n     * @hidden\n     * @private\n     */\n    ImageDecoder.prototype.skipStream = function (stream) {\n        var markerLength = this.mStream.readNextTwoBytes(stream) - 2;\n        if (markerLength > 0) {\n            stream.position += markerLength;\n        }\n    };\n    /**\n     * Number array for `png header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mPngHeader = [137, 80, 78, 71, 13, 10, 26, 10];\n    /**\n     * Number Array for `jpeg header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.mJpegHeader = [255, 216];\n    /**\n     * Number array for `gif header`.\n     * @hidden\n     * @private\n     */\n    ImageDecoder.GIF_HEADER = 'G,I,F,8';\n    /**\n     * Number array for `bmp header.`\n     * @hidden\n     * @private\n     */\n    ImageDecoder.BMP_HEADER = 'B,M';\n    return ImageDecoder;\n}());\nexport { ImageDecoder };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}