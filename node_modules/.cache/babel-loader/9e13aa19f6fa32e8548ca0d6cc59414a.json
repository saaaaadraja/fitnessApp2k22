{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `AccumulationDistributionIndicator` module is used to render accumulation distribution indicator.\n */\n\nvar AccumulationDistributionIndicator =\n/** @class */\nfunction (_super) {\n  __extends(AccumulationDistributionIndicator, _super);\n\n  function AccumulationDistributionIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Defines the predictions using accumulation distribution approach\n   * @private\n   */\n\n\n  AccumulationDistributionIndicator.prototype.initDataSource = function (indicator, chart) {\n    var sourceSeries = indicator.sourceSeries;\n    var adPoints = [];\n    var validData = indicator.points;\n\n    if (validData.length > 0 && validData.length > indicator.period) {\n      adPoints = this.calculateADPoints(indicator, validData);\n    }\n\n    this.setSeriesRange(adPoints, indicator);\n  };\n  /**\n   *  Calculates the Accumulation Distribution values\n   * @private\n   */\n\n\n  AccumulationDistributionIndicator.prototype.calculateADPoints = function (indicator, validData) {\n    var temp = [];\n    var sum = 0;\n    var i = 0;\n    var value = 0;\n    var high = 0;\n    var low = 0;\n    var close = 0;\n    var signalSeries = indicator.targetSeries[0];\n\n    for (i = 0; i < validData.length; i++) {\n      high = Number(validData[i].high);\n      low = Number(validData[i].low);\n      close = Number(validData[i].close);\n      /**\n       * Money Flow Multiplier = [(Close -  Low) - (High - Close)] /(High - Low)\n       * Money Flow Volume = Money Flow Multiplier x Volume for the Period\n       * ADL = Previous ADL + Current Period's Money Flow Volume\n       */\n\n      value = (close - low - (high - close)) / (high - low);\n      /**\n       * Sum is to calculate the Y values of the Accumulation distribution indicator\n       */\n\n      sum = sum + value * Number(validData[i].volume);\n      /**\n       * To calculate the x and y values for the Accumulation distribution indicator\n       */\n\n      temp[i] = this.getDataPoint(validData[i].x, sum, validData[i], signalSeries, temp.length);\n    }\n\n    return temp;\n  };\n  /**\n   * To destroy the Accumulation Distribution Technical Indicator.\n   * @return {void}\n   * @private\n   */\n\n\n  AccumulationDistributionIndicator.prototype.destroy = function (chart) {\n    /**\n     * Destroys the Accumulation Distribution Technical indicator\n     */\n  };\n  /**\n   * Get module name.\n   */\n\n\n  AccumulationDistributionIndicator.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the Indicator\n     */\n    return 'AccumulationDistributionIndicator';\n  };\n\n  return AccumulationDistributionIndicator;\n}(TechnicalAnalysis);\n\nexport { AccumulationDistributionIndicator };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","TechnicalAnalysis","AccumulationDistributionIndicator","_super","apply","arguments","initDataSource","indicator","chart","sourceSeries","adPoints","validData","points","length","period","calculateADPoints","setSeriesRange","temp","sum","i","value","high","low","close","signalSeries","targetSeries","Number","volume","getDataPoint","x","destroy","getModuleName"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-charts/src/chart/technical-indicators/ad-indicator.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `AccumulationDistributionIndicator` module is used to render accumulation distribution indicator.\n */\nvar AccumulationDistributionIndicator = /** @class */ (function (_super) {\n    __extends(AccumulationDistributionIndicator, _super);\n    function AccumulationDistributionIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Defines the predictions using accumulation distribution approach\n     * @private\n     */\n    AccumulationDistributionIndicator.prototype.initDataSource = function (indicator, chart) {\n        var sourceSeries = indicator.sourceSeries;\n        var adPoints = [];\n        var validData = indicator.points;\n        if (validData.length > 0 && validData.length > indicator.period) {\n            adPoints = this.calculateADPoints(indicator, validData);\n        }\n        this.setSeriesRange(adPoints, indicator);\n    };\n    /**\n     *  Calculates the Accumulation Distribution values\n     * @private\n     */\n    AccumulationDistributionIndicator.prototype.calculateADPoints = function (indicator, validData) {\n        var temp = [];\n        var sum = 0;\n        var i = 0;\n        var value = 0;\n        var high = 0;\n        var low = 0;\n        var close = 0;\n        var signalSeries = indicator.targetSeries[0];\n        for (i = 0; i < validData.length; i++) {\n            high = Number(validData[i].high);\n            low = Number(validData[i].low);\n            close = Number(validData[i].close);\n            /**\n             * Money Flow Multiplier = [(Close -  Low) - (High - Close)] /(High - Low)\n             * Money Flow Volume = Money Flow Multiplier x Volume for the Period\n             * ADL = Previous ADL + Current Period's Money Flow Volume\n             */\n            value = ((close - low) - (high - close)) / (high - low);\n            /**\n             * Sum is to calculate the Y values of the Accumulation distribution indicator\n             */\n            sum = sum + value * Number(validData[i].volume);\n            /**\n             * To calculate the x and y values for the Accumulation distribution indicator\n             */\n            temp[i] = this.getDataPoint(validData[i].x, sum, validData[i], signalSeries, temp.length);\n        }\n        return temp;\n    };\n    /**\n     * To destroy the Accumulation Distribution Technical Indicator.\n     * @return {void}\n     * @private\n     */\n    AccumulationDistributionIndicator.prototype.destroy = function (chart) {\n        /**\n         * Destroys the Accumulation Distribution Technical indicator\n         */\n    };\n    /**\n     * Get module name.\n     */\n    AccumulationDistributionIndicator.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the Indicator\n         */\n        return 'AccumulationDistributionIndicator';\n    };\n    return AccumulationDistributionIndicator;\n}(TechnicalAnalysis));\nexport { AccumulationDistributionIndicator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}