{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * Chart legend\n */\n\n\nimport { remove, Browser, extend } from '@syncfusion/ej2-base';\nimport { LegendOptions, BaseLegend } from '../../common/legend/legend';\nimport { textTrim, removeElement, RectOption, withInBounds, blazorTemplatesReset } from '../../common/utils/helper';\nimport { getUnicodeText } from '../../common/utils/helper';\nimport { measureText, Rect, getElement } from '@syncfusion/ej2-svg-base';\nimport { legendRender, legendClick, regSub, regSup } from '../../common/model/constants';\n/**\n * `Legend` module is used to render legend for the chart.\n */\n\nvar Legend =\n/** @class */\nfunction (_super) {\n  __extends(Legend, _super);\n\n  function Legend(chart) {\n    var _this = _super.call(this, chart) || this;\n\n    _this.library = _this;\n\n    _this.addEventListener();\n\n    return _this;\n  }\n  /**\n   * Binding events for legend module.\n   */\n\n\n  Legend.prototype.addEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n\n    this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n    this.chart.on('click', this.click, this);\n    this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n  };\n  /**\n   * UnBinding events for legend module.\n   */\n\n\n  Legend.prototype.removeEventListener = function () {\n    if (this.chart.isDestroyed) {\n      return;\n    }\n\n    this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n    this.chart.off('click', this.click);\n    this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n  };\n  /**\n   * To handle mosue move for legend module\n   */\n\n\n  Legend.prototype.mouseMove = function (e) {\n    if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n      this.move(e);\n\n      if (this.chart.highlightModule && this.chart.highlightMode !== 'None') {\n        this.click(e);\n      }\n    }\n  };\n  /**\n   * To handle mosue end for legend module\n   */\n\n\n  Legend.prototype.mouseEnd = function (e) {\n    if (this.chart.legendSettings.visible && this.chart.isTouch) {\n      this.move(e);\n    }\n  };\n  /**\n   * Get the legend options.\n   * @return {void}\n   * @private\n   */\n\n\n  Legend.prototype.getLegendOptions = function (visibleSeriesCollection, chart) {\n    this.legendCollections = [];\n    var seriesType;\n    var fill;\n\n    for (var _i = 0, visibleSeriesCollection_1 = visibleSeriesCollection; _i < visibleSeriesCollection_1.length; _i++) {\n      var series = visibleSeriesCollection_1[_i];\n\n      if (series.category !== 'Indicator' && series.name !== '') {\n        seriesType = chart.chartAreaType === 'PolarRadar' ? series.drawType : series.type; // To set legend color when use pointColorMapping\n\n        fill = series.pointColorMapping && series.points.length > 0 ? series.points[0].interior ? series.points[0].interior : series.interior : series.interior;\n        this.legendCollections.push(new LegendOptions(series.name, fill, series.legendShape, series.category === 'TrendLine' ? this.chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible, seriesType, series.legendImageUrl, series.marker.shape, series.marker.visible));\n      }\n    }\n  };\n  /** @private */\n\n\n  Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n    this.calculateLegendTitle(legend, legendBounds);\n    this.isTitle = legend.title ? true : false;\n    var padding = legend.padding;\n    var titlePosition = legend.titlePosition;\n    var extraHeight = 0;\n    var extraWidth = 0;\n    var arrowWidth = this.arrowWidth;\n    var arrowHeight = this.arrowHeight;\n    var verticalArrowSpace = this.isVertical && !legend.enablePages ? arrowHeight : 0;\n    var titleSpace = this.isTitle && titlePosition === 'Top' ? this.legendTitleSize.height + this.fivePixel : 0;\n    titleSpace = this.isTitle && this.isVertical && titlePosition !== 'Top' ? this.legendTitleSize.height + this.fivePixel : titleSpace;\n\n    if (!this.isVertical) {\n      extraHeight = !legend.height ? availableSize.height / 100 * 5 : 0;\n    } else {\n      extraWidth = !legend.width ? availableSize.width / 100 * 5 : 0;\n    }\n\n    legendBounds.height += extraHeight;\n    legendBounds.width += extraWidth;\n    var shapeWidth = legend.shapeWidth;\n    var shapePadding = legend.shapePadding;\n    var maximumWidth = 0;\n    var rowWidth = 0;\n    var legendWidth = 0;\n    var columnHeight = 0;\n    var rowCount = 0;\n    var titlePlusArrowSpace = 0;\n    var legendEventArgs;\n    this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n    var render = false;\n\n    for (var _i = 0, _a = this.legendCollections; _i < _a.length; _i++) {\n      var legendOption = _a[_i];\n\n      if (regSub.test(legendOption.text)) {\n        legendOption.text = getUnicodeText(legendOption.text, regSub);\n      }\n\n      if (regSup.test(legendOption.text)) {\n        legendOption.text = getUnicodeText(legendOption.text, regSup);\n      }\n\n      legendEventArgs = {\n        fill: legendOption.fill,\n        text: legendOption.text,\n        shape: legendOption.shape,\n        markerShape: legendOption.markerShape,\n        name: legendRender,\n        cancel: false\n      };\n      this.chart.trigger(legendRender, legendEventArgs);\n      legendOption.render = !legendEventArgs.cancel;\n      legendOption.text = legendEventArgs.text;\n      legendOption.fill = legendEventArgs.fill;\n      legendOption.shape = legendEventArgs.shape;\n      legendOption.markerShape = legendEventArgs.markerShape;\n      legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n\n      if (legendOption.render && legendOption.text !== '') {\n        render = true;\n        legendWidth = shapeWidth + shapePadding + legendOption.textSize.width + padding;\n        rowWidth = rowWidth + legendWidth;\n\n        if (!legend.enablePages && !this.isVertical) {\n          titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\n          titlePlusArrowSpace += arrowWidth;\n        }\n\n        if (legendBounds.width < padding + rowWidth + titlePlusArrowSpace || this.isVertical) {\n          maximumWidth = Math.max(maximumWidth, rowWidth + padding + titlePlusArrowSpace - (this.isVertical ? 0 : legendWidth));\n\n          if (rowCount === 0 && legendWidth !== rowWidth) {\n            rowCount = 1;\n          }\n\n          rowWidth = this.isVertical ? 0 : legendWidth;\n          rowCount++;\n          columnHeight = rowCount * (this.maxItemHeight + padding) + padding + titleSpace + verticalArrowSpace;\n        }\n      }\n    }\n\n    columnHeight = Math.max(columnHeight, this.maxItemHeight + padding + padding + titleSpace);\n    this.isPaging = legendBounds.height < columnHeight;\n\n    if (this.isPaging && !legend.enablePages) {\n      if (this.isVertical) {\n        columnHeight = columnHeight;\n      } else {\n        columnHeight = this.maxItemHeight + padding + padding + (titlePosition === 'Top' ? titleSpace : 0);\n      }\n    }\n\n    this.totalPages = rowCount;\n\n    if (!this.isPaging && !this.isVertical) {\n      rowWidth += this.isTitle && titlePosition !== 'Top' ? this.fivePixel + this.legendTitleSize.width + this.fivePixel : 0;\n    }\n\n    if (render) {\n      this.setBounds(Math.max(rowWidth + padding, maximumWidth), columnHeight, legend, legendBounds);\n    } else {\n      this.setBounds(0, 0, legend, legendBounds);\n    }\n  };\n  /** @private */\n\n\n  Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n    var padding = this.legend.padding;\n    var previousBound = prevLegend.location.x + textPadding + prevLegend.textSize.width;\n\n    if (previousBound + (legendOption.textSize.width + textPadding) > rect.x + rect.width + this.legend.shapeWidth / 2 || this.isVertical) {\n      legendOption.location.x = start.x;\n      legendOption.location.y = count === firstLegend ? prevLegend.location.y : prevLegend.location.y + this.maxItemHeight + padding;\n    } else {\n      legendOption.location.x = count === firstLegend ? prevLegend.location.x : previousBound;\n      legendOption.location.y = prevLegend.location.y;\n    }\n\n    var availwidth = this.legendBounds.x + this.legendBounds.width - (legendOption.location.x + textPadding - this.legend.shapeWidth / 2);\n    legendOption.text = textTrim(+availwidth.toFixed(4), legendOption.text, this.legend.textStyle);\n  };\n  /** @private */\n\n\n  Legend.prototype.LegendClick = function (seriesIndex, event) {\n    var chart = this.chart;\n    var series = chart.visibleSeries[seriesIndex];\n    var legend = this.legendCollections[seriesIndex];\n    var changeDetection = 'isProtectedOnChange';\n    var legendClickArgs = {\n      legendText: legend.text,\n      legendShape: legend.shape,\n      chart: chart.isBlazor ? {} : chart,\n      series: series,\n      name: legendClick,\n      cancel: false\n    };\n\n    if (chart.legendSettings.toggleVisibility) {\n      if (series.category === 'TrendLine') {\n        if (!chart.series[series.sourceIndex].trendlines[series.index].visible) {\n          chart.series[series.sourceIndex].trendlines[series.index].visible = true;\n        } else {\n          chart.series[series.sourceIndex].trendlines[series.index].visible = false;\n        }\n      } else {\n        series.chart[changeDetection] = true;\n        this.changeSeriesVisiblity(series, series.visible);\n      }\n    }\n\n    this.chart.trigger(legendClick, legendClickArgs);\n    series.legendShape = legendClickArgs.legendShape;\n\n    if (series.fill !== null) {\n      chart.visibleSeries[seriesIndex].interior = series.fill;\n    }\n\n    var selectedDataIndexes = [];\n\n    if (chart.selectionModule) {\n      selectedDataIndexes = extend([], chart.selectionModule.selectedDataIndexes, null, true);\n    }\n\n    if (chart.legendSettings.toggleVisibility) {\n      legend.visible = series.category === 'TrendLine' ? chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible;\n\n      if (chart.svgObject.childNodes.length > 0 && !chart.enableAnimation && !chart.enableCanvas) {\n        while (chart.svgObject.lastChild) {\n          chart.svgObject.removeChild(chart.svgObject.lastChild);\n        }\n\n        remove(chart.svgObject);\n      }\n\n      chart.animateSeries = false;\n      chart.redraw = chart.enableAnimation;\n      chart.rotatedDataLabelCollections = [];\n      blazorTemplatesReset(chart);\n      removeElement(getElement(chart.element.id + '_Secondary_Element').querySelectorAll('.ejSVGTooltip')[0]);\n      this.redrawSeriesElements(series, chart);\n      chart.removeSvg();\n      chart.refreshAxis();\n      series.refreshAxisLabel();\n      this.refreshSeries(chart.visibleSeries);\n      chart.markerRender.removeHighlightedMarker();\n      chart.refreshBound();\n      chart.trigger('loaded', {\n        chart: chart\n      });\n\n      if (selectedDataIndexes.length > 0) {\n        chart.selectionModule.selectedDataIndexes = selectedDataIndexes;\n        chart.selectionModule.redrawSelection(chart, chart.selectionMode);\n      }\n\n      if (chart.highlightModule && chart.highlightMode !== 'None') {\n        chart.highlightModule.redrawSelection(chart, chart.highlightMode);\n      }\n\n      chart.redraw = false;\n    } else if (chart.selectionModule) {\n      chart.selectionModule.legendSelection(chart, seriesIndex, event);\n    } else if (chart.highlightModule) {\n      chart.highlightModule.legendSelection(chart, seriesIndex, event);\n    }\n\n    series.chart[changeDetection] = false;\n  };\n\n  Legend.prototype.changeSeriesVisiblity = function (series, visibility) {\n    series.visible = !visibility;\n\n    if (this.isSecondaryAxis(series.xAxis)) {\n      series.xAxis.internalVisibility = series.xAxis.series.some(function (value) {\n        return value.visible;\n      });\n    }\n\n    if (this.isSecondaryAxis(series.yAxis)) {\n      series.yAxis.internalVisibility = series.yAxis.series.some(function (value) {\n        return value.visible;\n      });\n    }\n  };\n\n  Legend.prototype.isSecondaryAxis = function (axis) {\n    return this.chart.axes.indexOf(axis) > -1;\n  };\n\n  Legend.prototype.redrawSeriesElements = function (series, chart) {\n    if (!chart.redraw) {\n      return null;\n    }\n\n    removeElement(chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) + '_DataLabelCollections');\n  };\n\n  Legend.prototype.refreshSeries = function (seriesCollection) {\n    for (var _i = 0, seriesCollection_1 = seriesCollection; _i < seriesCollection_1.length; _i++) {\n      var series = seriesCollection_1[_i];\n      series.position = undefined;\n    }\n  };\n  /**\n   * To show the tooltip for the trimmed text in legend.\n   * @return {void}\n   */\n\n\n  Legend.prototype.click = function (event) {\n    var _this = this;\n\n    if (!this.chart.legendSettings.visible) {\n      return;\n    }\n\n    var pageX = this.chart.mouseX;\n    var pageY = this.chart.mouseY;\n    var legendRegion = [];\n    var targetId = event.target.id;\n    var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_', this.legendID + '_shape_'];\n    var seriesIndex;\n\n    for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n      var id = legendItemsId_1[_i];\n\n      if (targetId.indexOf(id) > -1) {\n        seriesIndex = parseInt(targetId.split(id)[1], 10);\n        this.LegendClick(seriesIndex, event);\n        break;\n      }\n    }\n\n    if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n      this.changePage(event, true);\n    } else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n      this.changePage(event, false);\n    }\n\n    if (this.chart.enableCanvas && this.pagingRegions.length) {\n      this.checkWithinBounds(pageX, pageY);\n    }\n\n    legendRegion = this.legendRegions.filter(function (region) {\n      return withInBounds(pageX, pageY + (_this.isPaging ? (_this.currentPageNumber - 1) * _this.translatePage(null, 1, 2) : 0), region.rect);\n    });\n\n    if (legendRegion.length && this.chart.enableCanvas) {\n      this.LegendClick(legendRegion[0].index, event);\n    }\n  };\n  /**\n   * To check click position is within legend bounds\n   */\n\n\n  Legend.prototype.checkWithinBounds = function (pageX, pageY) {\n    var cRender = this.chart.renderer;\n    var bounds = this.legendBounds;\n    var borderWidth = this.chart.legendSettings.border.width;\n    var canvasRect = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n    canvasRect.x = canvasRect.x - borderWidth / 2;\n    canvasRect.y = canvasRect.y - borderWidth / 2;\n    canvasRect.width = canvasRect.width + borderWidth;\n    canvasRect.height = canvasRect.height + borderWidth;\n\n    if (withInBounds(pageX, pageY, this.pagingRegions[0])) {\n      // pagedown calculations are performing here\n      if (--this.currentPageNumber > 0) {\n        this.legendRegions = [];\n        cRender.clearRect(canvasRect);\n        cRender.canvasClip(new RectOption('legendClipPath', 'transparent', {\n          width: 0,\n          color: ''\n        }, null, canvasRect));\n        this.renderLegend(this.chart, this.legend, bounds);\n        cRender.canvasRestore();\n      } else {\n        ++this.currentPageNumber;\n      }\n\n      return null;\n    }\n\n    if (withInBounds(pageX, pageY, this.pagingRegions[1])) {\n      // pageUp calculations are performing here\n      if (++this.currentPageNumber > 0 && this.currentPageNumber <= this.totalNoOfPages) {\n        this.legendRegions = [];\n        cRender.clearRect(canvasRect);\n        cRender.canvasClip(new RectOption('legendClipPath', 'transpaent', {\n          width: 0,\n          color: ''\n        }, null, canvasRect));\n        this.renderLegend(this.chart, this.legend, bounds);\n        cRender.canvasRestore();\n      } else {\n        --this.currentPageNumber;\n      }\n\n      return null;\n    }\n  };\n  /**\n   * Get module name\n   */\n\n\n  Legend.prototype.getModuleName = function () {\n    return 'Legend';\n  };\n  /**\n   * To destroy the Legend.\n   * @return {void}\n   * @private\n   */\n\n\n  Legend.prototype.destroy = function (chart) {\n    this.removeEventListener();\n  };\n\n  return Legend;\n}(BaseLegend);\n\nexport { Legend };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","remove","Browser","extend","LegendOptions","BaseLegend","textTrim","removeElement","RectOption","withInBounds","blazorTemplatesReset","getUnicodeText","measureText","Rect","getElement","legendRender","legendClick","regSub","regSup","Legend","_super","chart","_this","call","library","addEventListener","isDestroyed","on","touchMoveEvent","mouseMove","click","touchEndEvent","mouseEnd","removeEventListener","off","e","legendSettings","visible","isTouch","move","highlightModule","highlightMode","getLegendOptions","visibleSeriesCollection","legendCollections","seriesType","fill","_i","visibleSeriesCollection_1","length","series","category","name","chartAreaType","drawType","type","pointColorMapping","points","interior","push","legendShape","sourceIndex","trendlines","index","legendImageUrl","marker","shape","getLegendBounds","availableSize","legendBounds","legend","calculateLegendTitle","isTitle","title","padding","titlePosition","extraHeight","extraWidth","arrowWidth","arrowHeight","verticalArrowSpace","isVertical","enablePages","titleSpace","legendTitleSize","height","fivePixel","width","shapeWidth","shapePadding","maximumWidth","rowWidth","legendWidth","columnHeight","rowCount","titlePlusArrowSpace","legendEventArgs","maxItemHeight","Math","max","textStyle","shapeHeight","render","_a","legendOption","test","text","markerShape","cancel","trigger","textSize","isPaging","totalPages","setBounds","getRenderPoint","start","textPadding","prevLegend","rect","count","firstLegend","previousBound","location","x","y","availwidth","toFixed","LegendClick","seriesIndex","event","visibleSeries","changeDetection","legendClickArgs","legendText","isBlazor","toggleVisibility","changeSeriesVisiblity","selectedDataIndexes","selectionModule","svgObject","childNodes","enableAnimation","enableCanvas","lastChild","removeChild","animateSeries","redraw","rotatedDataLabelCollections","element","id","querySelectorAll","redrawSeriesElements","removeSvg","refreshAxis","refreshAxisLabel","refreshSeries","markerRender","removeHighlightedMarker","refreshBound","redrawSelection","selectionMode","legendSelection","visibility","isSecondaryAxis","xAxis","internalVisibility","some","value","yAxis","axis","axes","indexOf","undefined","seriesCollection","seriesCollection_1","position","pageX","mouseX","pageY","mouseY","legendRegion","targetId","target","legendItemsId","legendID","legendItemsId_1","parseInt","split","changePage","pagingRegions","checkWithinBounds","legendRegions","filter","region","currentPageNumber","translatePage","cRender","renderer","bounds","borderWidth","border","canvasRect","clearRect","canvasClip","color","renderLegend","canvasRestore","totalNoOfPages","getModuleName","destroy"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-charts/src/chart/legend/legend.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Chart legend\n */\nimport { remove, Browser, extend } from '@syncfusion/ej2-base';\nimport { LegendOptions, BaseLegend } from '../../common/legend/legend';\nimport { textTrim, removeElement, RectOption, withInBounds, blazorTemplatesReset } from '../../common/utils/helper';\nimport { getUnicodeText } from '../../common/utils/helper';\nimport { measureText, Rect, getElement } from '@syncfusion/ej2-svg-base';\nimport { legendRender, legendClick, regSub, regSup } from '../../common/model/constants';\n/**\n * `Legend` module is used to render legend for the chart.\n */\nvar Legend = /** @class */ (function (_super) {\n    __extends(Legend, _super);\n    function Legend(chart) {\n        var _this = _super.call(this, chart) || this;\n        _this.library = _this;\n        _this.addEventListener();\n        return _this;\n    }\n    /**\n     * Binding events for legend module.\n     */\n    Legend.prototype.addEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.on(Browser.touchMoveEvent, this.mouseMove, this);\n        this.chart.on('click', this.click, this);\n        this.chart.on(Browser.touchEndEvent, this.mouseEnd, this);\n    };\n    /**\n     * UnBinding events for legend module.\n     */\n    Legend.prototype.removeEventListener = function () {\n        if (this.chart.isDestroyed) {\n            return;\n        }\n        this.chart.off(Browser.touchMoveEvent, this.mouseMove);\n        this.chart.off('click', this.click);\n        this.chart.off(Browser.touchEndEvent, this.mouseEnd);\n    };\n    /**\n     * To handle mosue move for legend module\n     */\n    Legend.prototype.mouseMove = function (e) {\n        if (this.chart.legendSettings.visible && !this.chart.isTouch) {\n            this.move(e);\n            if (this.chart.highlightModule && this.chart.highlightMode !== 'None') {\n                this.click(e);\n            }\n        }\n    };\n    /**\n     * To handle mosue end for legend module\n     */\n    Legend.prototype.mouseEnd = function (e) {\n        if (this.chart.legendSettings.visible && this.chart.isTouch) {\n            this.move(e);\n        }\n    };\n    /**\n     * Get the legend options.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.getLegendOptions = function (visibleSeriesCollection, chart) {\n        this.legendCollections = [];\n        var seriesType;\n        var fill;\n        for (var _i = 0, visibleSeriesCollection_1 = visibleSeriesCollection; _i < visibleSeriesCollection_1.length; _i++) {\n            var series = visibleSeriesCollection_1[_i];\n            if (series.category !== 'Indicator' && series.name !== '') {\n                seriesType = (chart.chartAreaType === 'PolarRadar') ? series.drawType :\n                    series.type;\n                // To set legend color when use pointColorMapping\n                fill = (series.pointColorMapping && series.points.length > 0) ?\n                    (series.points[0].interior ? series.points[0].interior : series.interior) : series.interior;\n                this.legendCollections.push(new LegendOptions(series.name, fill, series.legendShape, (series.category === 'TrendLine' ?\n                    this.chart.series[series.sourceIndex].trendlines[series.index].visible : series.visible), seriesType, series.legendImageUrl, series.marker.shape, series.marker.visible));\n            }\n        }\n    };\n    /** @private */\n    Legend.prototype.getLegendBounds = function (availableSize, legendBounds, legend) {\n        this.calculateLegendTitle(legend, legendBounds);\n        this.isTitle = legend.title ? true : false;\n        var padding = legend.padding;\n        var titlePosition = legend.titlePosition;\n        var extraHeight = 0;\n        var extraWidth = 0;\n        var arrowWidth = this.arrowWidth;\n        var arrowHeight = this.arrowHeight;\n        var verticalArrowSpace = this.isVertical && !legend.enablePages ? arrowHeight : 0;\n        var titleSpace = this.isTitle && titlePosition === 'Top' ? this.legendTitleSize.height + this.fivePixel : 0;\n        titleSpace = this.isTitle && this.isVertical && titlePosition !== 'Top' ? this.legendTitleSize.height + this.fivePixel : titleSpace;\n        if (!this.isVertical) {\n            extraHeight = !legend.height ? ((availableSize.height / 100) * 5) : 0;\n        }\n        else {\n            extraWidth = !legend.width ? ((availableSize.width / 100) * 5) : 0;\n        }\n        legendBounds.height += (extraHeight);\n        legendBounds.width += extraWidth;\n        var shapeWidth = legend.shapeWidth;\n        var shapePadding = legend.shapePadding;\n        var maximumWidth = 0;\n        var rowWidth = 0;\n        var legendWidth = 0;\n        var columnHeight = 0;\n        var rowCount = 0;\n        var titlePlusArrowSpace = 0;\n        var legendEventArgs;\n        this.maxItemHeight = Math.max(measureText('MeasureText', legend.textStyle).height, legend.shapeHeight);\n        var render = false;\n        for (var _i = 0, _a = this.legendCollections; _i < _a.length; _i++) {\n            var legendOption = _a[_i];\n            if (regSub.test(legendOption.text)) {\n                legendOption.text = getUnicodeText(legendOption.text, regSub);\n            }\n            if (regSup.test(legendOption.text)) {\n                legendOption.text = getUnicodeText(legendOption.text, regSup);\n            }\n            legendEventArgs = {\n                fill: legendOption.fill, text: legendOption.text, shape: legendOption.shape,\n                markerShape: legendOption.markerShape, name: legendRender, cancel: false\n            };\n            this.chart.trigger(legendRender, legendEventArgs);\n            legendOption.render = !legendEventArgs.cancel;\n            legendOption.text = legendEventArgs.text;\n            legendOption.fill = legendEventArgs.fill;\n            legendOption.shape = legendEventArgs.shape;\n            legendOption.markerShape = legendEventArgs.markerShape;\n            legendOption.textSize = measureText(legendOption.text, legend.textStyle);\n            if (legendOption.render && legendOption.text !== '') {\n                render = true;\n                legendWidth = shapeWidth + shapePadding + legendOption.textSize.width + padding;\n                rowWidth = rowWidth + legendWidth;\n                if (!legend.enablePages && !this.isVertical) {\n                    titlePlusArrowSpace = this.isTitle && titlePosition !== 'Top' ? this.legendTitleSize.width + this.fivePixel : 0;\n                    titlePlusArrowSpace += arrowWidth;\n                }\n                if (legendBounds.width < (padding + rowWidth + titlePlusArrowSpace) || this.isVertical) {\n                    maximumWidth = Math.max(maximumWidth, (rowWidth + padding + titlePlusArrowSpace - (this.isVertical ? 0 : legendWidth)));\n                    if (rowCount === 0 && (legendWidth !== rowWidth)) {\n                        rowCount = 1;\n                    }\n                    rowWidth = this.isVertical ? 0 : legendWidth;\n                    rowCount++;\n                    columnHeight = (rowCount * (this.maxItemHeight + padding)) + padding + titleSpace + verticalArrowSpace;\n                }\n            }\n        }\n        columnHeight = Math.max(columnHeight, (this.maxItemHeight + padding) + padding + titleSpace);\n        this.isPaging = legendBounds.height < columnHeight;\n        if (this.isPaging && !legend.enablePages) {\n            if (this.isVertical) {\n                columnHeight = columnHeight;\n            }\n            else {\n                columnHeight = (this.maxItemHeight + padding) + padding + (titlePosition === 'Top' ? titleSpace : 0);\n            }\n        }\n        this.totalPages = rowCount;\n        if (!this.isPaging && !this.isVertical) {\n            rowWidth += this.isTitle && titlePosition !== 'Top' ? (this.fivePixel + this.legendTitleSize.width + this.fivePixel) : 0;\n        }\n        if (render) {\n            this.setBounds(Math.max((rowWidth + padding), maximumWidth), columnHeight, legend, legendBounds);\n        }\n        else {\n            this.setBounds(0, 0, legend, legendBounds);\n        }\n    };\n    /** @private */\n    Legend.prototype.getRenderPoint = function (legendOption, start, textPadding, prevLegend, rect, count, firstLegend) {\n        var padding = this.legend.padding;\n        var previousBound = (prevLegend.location.x + textPadding + prevLegend.textSize.width);\n        if ((previousBound + (legendOption.textSize.width + textPadding)) > (rect.x + rect.width + this.legend.shapeWidth / 2) ||\n            this.isVertical) {\n            legendOption.location.x = start.x;\n            legendOption.location.y = (count === firstLegend) ? prevLegend.location.y :\n                prevLegend.location.y + this.maxItemHeight + padding;\n        }\n        else {\n            legendOption.location.x = (count === firstLegend) ? prevLegend.location.x : previousBound;\n            legendOption.location.y = prevLegend.location.y;\n        }\n        var availwidth = (this.legendBounds.x + this.legendBounds.width) - (legendOption.location.x +\n            textPadding - this.legend.shapeWidth / 2);\n        legendOption.text = textTrim(+availwidth.toFixed(4), legendOption.text, this.legend.textStyle);\n    };\n    /** @private */\n    Legend.prototype.LegendClick = function (seriesIndex, event) {\n        var chart = this.chart;\n        var series = chart.visibleSeries[seriesIndex];\n        var legend = this.legendCollections[seriesIndex];\n        var changeDetection = 'isProtectedOnChange';\n        var legendClickArgs = {\n            legendText: legend.text, legendShape: legend.shape,\n            chart: chart.isBlazor ? {} : chart, series: series, name: legendClick, cancel: false\n        };\n        if (chart.legendSettings.toggleVisibility) {\n            if (series.category === 'TrendLine') {\n                if (!chart.series[series.sourceIndex].trendlines[series.index].visible) {\n                    chart.series[series.sourceIndex].trendlines[series.index].visible = true;\n                }\n                else {\n                    chart.series[series.sourceIndex].trendlines[series.index].visible = false;\n                }\n            }\n            else {\n                series.chart[changeDetection] = true;\n                this.changeSeriesVisiblity(series, series.visible);\n            }\n        }\n        this.chart.trigger(legendClick, legendClickArgs);\n        series.legendShape = legendClickArgs.legendShape;\n        if (series.fill !== null) {\n            chart.visibleSeries[seriesIndex].interior = series.fill;\n        }\n        var selectedDataIndexes = [];\n        if (chart.selectionModule) {\n            selectedDataIndexes = extend([], chart.selectionModule.selectedDataIndexes, null, true);\n        }\n        if (chart.legendSettings.toggleVisibility) {\n            legend.visible = series.category === 'TrendLine' ? chart.series[series.sourceIndex].trendlines[series.index].visible :\n                (series.visible);\n            if ((chart.svgObject.childNodes.length > 0) && !chart.enableAnimation && !chart.enableCanvas) {\n                while (chart.svgObject.lastChild) {\n                    chart.svgObject.removeChild(chart.svgObject.lastChild);\n                }\n                remove(chart.svgObject);\n            }\n            chart.animateSeries = false;\n            chart.redraw = chart.enableAnimation;\n            chart.rotatedDataLabelCollections = [];\n            blazorTemplatesReset(chart);\n            removeElement(getElement(chart.element.id + '_Secondary_Element').querySelectorAll('.ejSVGTooltip')[0]);\n            this.redrawSeriesElements(series, chart);\n            chart.removeSvg();\n            chart.refreshAxis();\n            series.refreshAxisLabel();\n            this.refreshSeries(chart.visibleSeries);\n            chart.markerRender.removeHighlightedMarker();\n            chart.refreshBound();\n            chart.trigger('loaded', { chart: chart });\n            if (selectedDataIndexes.length > 0) {\n                chart.selectionModule.selectedDataIndexes = selectedDataIndexes;\n                chart.selectionModule.redrawSelection(chart, chart.selectionMode);\n            }\n            if (chart.highlightModule && chart.highlightMode !== 'None') {\n                chart.highlightModule.redrawSelection(chart, chart.highlightMode);\n            }\n            chart.redraw = false;\n        }\n        else if (chart.selectionModule) {\n            chart.selectionModule.legendSelection(chart, seriesIndex, event);\n        }\n        else if (chart.highlightModule) {\n            chart.highlightModule.legendSelection(chart, seriesIndex, event);\n        }\n        series.chart[changeDetection] = false;\n    };\n    Legend.prototype.changeSeriesVisiblity = function (series, visibility) {\n        series.visible = !visibility;\n        if (this.isSecondaryAxis(series.xAxis)) {\n            series.xAxis.internalVisibility = series.xAxis.series.some(function (value) { return (value.visible); });\n        }\n        if (this.isSecondaryAxis(series.yAxis)) {\n            series.yAxis.internalVisibility = series.yAxis.series.some(function (value) { return (value.visible); });\n        }\n    };\n    Legend.prototype.isSecondaryAxis = function (axis) {\n        return (this.chart.axes.indexOf(axis) > -1);\n    };\n    Legend.prototype.redrawSeriesElements = function (series, chart) {\n        if (!chart.redraw) {\n            return null;\n        }\n        removeElement(chart.element.id + '_Series_' + (series.index === undefined ? series.category : series.index) +\n            '_DataLabelCollections');\n    };\n    Legend.prototype.refreshSeries = function (seriesCollection) {\n        for (var _i = 0, seriesCollection_1 = seriesCollection; _i < seriesCollection_1.length; _i++) {\n            var series = seriesCollection_1[_i];\n            series.position = undefined;\n        }\n    };\n    /**\n     * To show the tooltip for the trimmed text in legend.\n     * @return {void}\n     */\n    Legend.prototype.click = function (event) {\n        var _this = this;\n        if (!this.chart.legendSettings.visible) {\n            return;\n        }\n        var pageX = this.chart.mouseX;\n        var pageY = this.chart.mouseY;\n        var legendRegion = [];\n        var targetId = event.target.id;\n        var legendItemsId = [this.legendID + '_text_', this.legendID + '_shape_marker_',\n            this.legendID + '_shape_'];\n        var seriesIndex;\n        for (var _i = 0, legendItemsId_1 = legendItemsId; _i < legendItemsId_1.length; _i++) {\n            var id = legendItemsId_1[_i];\n            if (targetId.indexOf(id) > -1) {\n                seriesIndex = parseInt(targetId.split(id)[1], 10);\n                this.LegendClick(seriesIndex, event);\n                break;\n            }\n        }\n        if (targetId.indexOf(this.legendID + '_pageup') > -1) {\n            this.changePage(event, true);\n        }\n        else if (targetId.indexOf(this.legendID + '_pagedown') > -1) {\n            this.changePage(event, false);\n        }\n        if (this.chart.enableCanvas && this.pagingRegions.length) {\n            this.checkWithinBounds(pageX, pageY);\n        }\n        legendRegion = this.legendRegions.filter(function (region) {\n            return (withInBounds(pageX, (pageY + (_this.isPaging ? (_this.currentPageNumber - 1) * _this.translatePage(null, 1, 2) : 0)), region.rect));\n        });\n        if (legendRegion.length && this.chart.enableCanvas) {\n            this.LegendClick(legendRegion[0].index, event);\n        }\n    };\n    /**\n     * To check click position is within legend bounds\n     */\n    Legend.prototype.checkWithinBounds = function (pageX, pageY) {\n        var cRender = this.chart.renderer;\n        var bounds = this.legendBounds;\n        var borderWidth = this.chart.legendSettings.border.width;\n        var canvasRect = new Rect(bounds.x, bounds.y, bounds.width, bounds.height);\n        canvasRect.x = canvasRect.x - borderWidth / 2;\n        canvasRect.y = canvasRect.y - borderWidth / 2;\n        canvasRect.width = canvasRect.width + borderWidth;\n        canvasRect.height = canvasRect.height + borderWidth;\n        if (withInBounds(pageX, pageY, this.pagingRegions[0])) {\n            // pagedown calculations are performing here\n            if (--this.currentPageNumber > 0) {\n                this.legendRegions = [];\n                cRender.clearRect(canvasRect);\n                cRender.canvasClip(new RectOption('legendClipPath', 'transparent', { width: 0, color: '' }, null, canvasRect));\n                this.renderLegend(this.chart, this.legend, bounds);\n                cRender.canvasRestore();\n            }\n            else {\n                ++this.currentPageNumber;\n            }\n            return null;\n        }\n        if (withInBounds(pageX, pageY, this.pagingRegions[1])) {\n            // pageUp calculations are performing here\n            if (++this.currentPageNumber > 0 && this.currentPageNumber <= this.totalNoOfPages) {\n                this.legendRegions = [];\n                cRender.clearRect(canvasRect);\n                cRender.canvasClip(new RectOption('legendClipPath', 'transpaent', { width: 0, color: '' }, null, canvasRect));\n                this.renderLegend(this.chart, this.legend, bounds);\n                cRender.canvasRestore();\n            }\n            else {\n                --this.currentPageNumber;\n            }\n            return null;\n        }\n    };\n    /**\n     * Get module name\n     */\n    Legend.prototype.getModuleName = function () {\n        return 'Legend';\n    };\n    /**\n     * To destroy the Legend.\n     * @return {void}\n     * @private\n     */\n    Legend.prototype.destroy = function (chart) {\n        this.removeEventListener();\n    };\n    return Legend;\n}(BaseLegend));\nexport { Legend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}