{"ast":null,"code":"import { measureText } from '../../smithchart/utils/helper';\n/* tslint:disable:no-string-literal */\n\nvar AreaBounds =\n/** @class */\nfunction () {\n  function AreaBounds() {}\n\n  AreaBounds.prototype.calculateAreaBounds = function (smithchart, title, bounds) {\n    var x;\n    var y;\n    var width;\n    var height;\n    var rightSpace;\n    var margin = smithchart.margin;\n    var border = smithchart.border;\n    var spaceValue = this.getLegendSpace(smithchart, bounds);\n    x = spaceValue['leftLegendWidth'] + margin.left + border.width;\n    rightSpace = spaceValue['rightLegendWidth'] + margin.left + margin.right + 2 * border.width;\n    width = smithchart.availableSize['width'] - (x + rightSpace);\n    y = margin['top'] + 2 * smithchart.elementSpacing + spaceValue['modelTitleHeight'] + spaceValue['modelsubTitleHeight'] + spaceValue['topLegendHeight'] + border.width;\n    height = smithchart.availableSize['height'] - (spaceValue['modelTitleHeight'] + 2 * smithchart.elementSpacing + spaceValue['modelsubTitleHeight'] + margin['top'] + spaceValue['topLegendHeight'] + spaceValue['bottomLegendHeight']);\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  };\n\n  AreaBounds.prototype.getLegendSpace = function (smithchart, bounds) {\n    var title = smithchart.title;\n    var legend = smithchart.legendSettings;\n    var position = legend.position.toLowerCase();\n    var subtitleHeight = 0;\n    var modelsubTitleHeight = 0;\n    var titleHeight = 0;\n    var font = smithchart.font;\n    var modelTitleHeight = 0;\n    var itemPadding = 10;\n    var legendBorder = legend.border.width;\n    var leftLegendWidth = 0;\n    var rightLegendWidth = 0;\n    var topLegendHeight = 0;\n    var bottomLegendHeight = 0;\n    var ltheight = 0;\n    var space;\n\n    if (legend['visible']) {\n      space = bounds.width + itemPadding / 2 + smithchart.elementSpacing + 2 * legendBorder;\n      leftLegendWidth = position === 'left' ? space : 0;\n      rightLegendWidth = position === 'right' ? space : 0;\n      ltheight = legend['title'].visible ? measureText(legend['title'].text, font)['height'] : 0;\n      topLegendHeight = position === 'top' ? smithchart.elementSpacing + bounds.height + ltheight : 0;\n      bottomLegendHeight = position === 'bottom' ? smithchart.elementSpacing + bounds.height + ltheight : 0;\n    }\n\n    subtitleHeight = measureText(title.subtitle.text, font)['height'];\n    modelTitleHeight = title.text === '' || !title['visible'] ? 0 : titleHeight;\n    modelsubTitleHeight = title['subtitle'].text === '' || !title['subtitle'].visible ? 0 : subtitleHeight;\n    return {\n      leftLegendWidth: leftLegendWidth,\n      rightLegendWidth: rightLegendWidth,\n      topLegendHeight: topLegendHeight,\n      bottomLegendHeight: bottomLegendHeight,\n      modelTitleHeight: modelTitleHeight,\n      modelsubTitleHeight: modelsubTitleHeight\n    };\n  };\n\n  return AreaBounds;\n}();\n\nexport { AreaBounds };","map":{"version":3,"names":["measureText","AreaBounds","prototype","calculateAreaBounds","smithchart","title","bounds","x","y","width","height","rightSpace","margin","border","spaceValue","getLegendSpace","left","right","availableSize","elementSpacing","legend","legendSettings","position","toLowerCase","subtitleHeight","modelsubTitleHeight","titleHeight","font","modelTitleHeight","itemPadding","legendBorder","leftLegendWidth","rightLegendWidth","topLegendHeight","bottomLegendHeight","ltheight","space","visible","text","subtitle"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-charts/src/smithchart/utils/area.js"],"sourcesContent":["import { measureText } from '../../smithchart/utils/helper';\n/* tslint:disable:no-string-literal */\nvar AreaBounds = /** @class */ (function () {\n    function AreaBounds() {\n    }\n    AreaBounds.prototype.calculateAreaBounds = function (smithchart, title, bounds) {\n        var x;\n        var y;\n        var width;\n        var height;\n        var rightSpace;\n        var margin = smithchart.margin;\n        var border = smithchart.border;\n        var spaceValue = this.getLegendSpace(smithchart, bounds);\n        x = spaceValue['leftLegendWidth'] + margin.left + border.width;\n        rightSpace = spaceValue['rightLegendWidth'] + margin.left + margin.right + (2 * border.width);\n        width = smithchart.availableSize['width'] - (x + rightSpace);\n        y = margin['top'] + (2 * smithchart.elementSpacing) + spaceValue['modelTitleHeight'] +\n            spaceValue['modelsubTitleHeight'] + spaceValue['topLegendHeight'] + border.width;\n        height = smithchart.availableSize['height'] - (spaceValue['modelTitleHeight'] +\n            (2 * smithchart.elementSpacing) + spaceValue['modelsubTitleHeight'] + margin['top'] +\n            spaceValue['topLegendHeight'] + spaceValue['bottomLegendHeight']);\n        return { x: x, y: y, width: width, height: height };\n    };\n    AreaBounds.prototype.getLegendSpace = function (smithchart, bounds) {\n        var title = smithchart.title;\n        var legend = smithchart.legendSettings;\n        var position = legend.position.toLowerCase();\n        var subtitleHeight = 0;\n        var modelsubTitleHeight = 0;\n        var titleHeight = 0;\n        var font = smithchart.font;\n        var modelTitleHeight = 0;\n        var itemPadding = 10;\n        var legendBorder = legend.border.width;\n        var leftLegendWidth = 0;\n        var rightLegendWidth = 0;\n        var topLegendHeight = 0;\n        var bottomLegendHeight = 0;\n        var ltheight = 0;\n        var space;\n        if (legend['visible']) {\n            space = (bounds.width + (itemPadding / 2) + smithchart.elementSpacing + (2 * legendBorder));\n            leftLegendWidth = position === 'left' ? space : 0;\n            rightLegendWidth = position === 'right' ? space : 0;\n            ltheight = legend['title'].visible ? measureText(legend['title'].text, font)['height'] : 0;\n            topLegendHeight = position === 'top' ? smithchart.elementSpacing + bounds.height + ltheight : 0;\n            bottomLegendHeight = position === 'bottom' ? smithchart.elementSpacing + bounds.height + ltheight : 0;\n        }\n        subtitleHeight = measureText(title.subtitle.text, font)['height'];\n        modelTitleHeight = (title.text === '' || !title['visible']) ? 0 : (titleHeight);\n        modelsubTitleHeight = (title['subtitle'].text === '' || !title['subtitle'].visible) ? 0 : (subtitleHeight);\n        return {\n            leftLegendWidth: leftLegendWidth, rightLegendWidth: rightLegendWidth,\n            topLegendHeight: topLegendHeight, bottomLegendHeight: bottomLegendHeight,\n            modelTitleHeight: modelTitleHeight, modelsubTitleHeight: modelsubTitleHeight\n        };\n    };\n    return AreaBounds;\n}());\nexport { AreaBounds };\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,+BAA5B;AACA;;AACA,IAAIC,UAAU;AAAG;AAAe,YAAY;EACxC,SAASA,UAAT,GAAsB,CACrB;;EACDA,UAAU,CAACC,SAAX,CAAqBC,mBAArB,GAA2C,UAAUC,UAAV,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;IAC5E,IAAIC,CAAJ;IACA,IAAIC,CAAJ;IACA,IAAIC,KAAJ;IACA,IAAIC,MAAJ;IACA,IAAIC,UAAJ;IACA,IAAIC,MAAM,GAAGR,UAAU,CAACQ,MAAxB;IACA,IAAIC,MAAM,GAAGT,UAAU,CAACS,MAAxB;IACA,IAAIC,UAAU,GAAG,KAAKC,cAAL,CAAoBX,UAApB,EAAgCE,MAAhC,CAAjB;IACAC,CAAC,GAAGO,UAAU,CAAC,iBAAD,CAAV,GAAgCF,MAAM,CAACI,IAAvC,GAA8CH,MAAM,CAACJ,KAAzD;IACAE,UAAU,GAAGG,UAAU,CAAC,kBAAD,CAAV,GAAiCF,MAAM,CAACI,IAAxC,GAA+CJ,MAAM,CAACK,KAAtD,GAA+D,IAAIJ,MAAM,CAACJ,KAAvF;IACAA,KAAK,GAAGL,UAAU,CAACc,aAAX,CAAyB,OAAzB,KAAqCX,CAAC,GAAGI,UAAzC,CAAR;IACAH,CAAC,GAAGI,MAAM,CAAC,KAAD,CAAN,GAAiB,IAAIR,UAAU,CAACe,cAAhC,GAAkDL,UAAU,CAAC,kBAAD,CAA5D,GACAA,UAAU,CAAC,qBAAD,CADV,GACoCA,UAAU,CAAC,iBAAD,CAD9C,GACoED,MAAM,CAACJ,KAD/E;IAEAC,MAAM,GAAGN,UAAU,CAACc,aAAX,CAAyB,QAAzB,KAAsCJ,UAAU,CAAC,kBAAD,CAAV,GAC1C,IAAIV,UAAU,CAACe,cAD2B,GACTL,UAAU,CAAC,qBAAD,CADD,GAC2BF,MAAM,CAAC,KAAD,CADjC,GAE3CE,UAAU,CAAC,iBAAD,CAFiC,GAEXA,UAAU,CAAC,oBAAD,CAFrC,CAAT;IAGA,OAAO;MAAEP,CAAC,EAAEA,CAAL;MAAQC,CAAC,EAAEA,CAAX;MAAcC,KAAK,EAAEA,KAArB;MAA4BC,MAAM,EAAEA;IAApC,CAAP;EACH,CAlBD;;EAmBAT,UAAU,CAACC,SAAX,CAAqBa,cAArB,GAAsC,UAAUX,UAAV,EAAsBE,MAAtB,EAA8B;IAChE,IAAID,KAAK,GAAGD,UAAU,CAACC,KAAvB;IACA,IAAIe,MAAM,GAAGhB,UAAU,CAACiB,cAAxB;IACA,IAAIC,QAAQ,GAAGF,MAAM,CAACE,QAAP,CAAgBC,WAAhB,EAAf;IACA,IAAIC,cAAc,GAAG,CAArB;IACA,IAAIC,mBAAmB,GAAG,CAA1B;IACA,IAAIC,WAAW,GAAG,CAAlB;IACA,IAAIC,IAAI,GAAGvB,UAAU,CAACuB,IAAtB;IACA,IAAIC,gBAAgB,GAAG,CAAvB;IACA,IAAIC,WAAW,GAAG,EAAlB;IACA,IAAIC,YAAY,GAAGV,MAAM,CAACP,MAAP,CAAcJ,KAAjC;IACA,IAAIsB,eAAe,GAAG,CAAtB;IACA,IAAIC,gBAAgB,GAAG,CAAvB;IACA,IAAIC,eAAe,GAAG,CAAtB;IACA,IAAIC,kBAAkB,GAAG,CAAzB;IACA,IAAIC,QAAQ,GAAG,CAAf;IACA,IAAIC,KAAJ;;IACA,IAAIhB,MAAM,CAAC,SAAD,CAAV,EAAuB;MACnBgB,KAAK,GAAI9B,MAAM,CAACG,KAAP,GAAgBoB,WAAW,GAAG,CAA9B,GAAmCzB,UAAU,CAACe,cAA9C,GAAgE,IAAIW,YAA7E;MACAC,eAAe,GAAGT,QAAQ,KAAK,MAAb,GAAsBc,KAAtB,GAA8B,CAAhD;MACAJ,gBAAgB,GAAGV,QAAQ,KAAK,OAAb,GAAuBc,KAAvB,GAA+B,CAAlD;MACAD,QAAQ,GAAGf,MAAM,CAAC,OAAD,CAAN,CAAgBiB,OAAhB,GAA0BrC,WAAW,CAACoB,MAAM,CAAC,OAAD,CAAN,CAAgBkB,IAAjB,EAAuBX,IAAvB,CAAX,CAAwC,QAAxC,CAA1B,GAA8E,CAAzF;MACAM,eAAe,GAAGX,QAAQ,KAAK,KAAb,GAAqBlB,UAAU,CAACe,cAAX,GAA4Bb,MAAM,CAACI,MAAnC,GAA4CyB,QAAjE,GAA4E,CAA9F;MACAD,kBAAkB,GAAGZ,QAAQ,KAAK,QAAb,GAAwBlB,UAAU,CAACe,cAAX,GAA4Bb,MAAM,CAACI,MAAnC,GAA4CyB,QAApE,GAA+E,CAApG;IACH;;IACDX,cAAc,GAAGxB,WAAW,CAACK,KAAK,CAACkC,QAAN,CAAeD,IAAhB,EAAsBX,IAAtB,CAAX,CAAuC,QAAvC,CAAjB;IACAC,gBAAgB,GAAIvB,KAAK,CAACiC,IAAN,KAAe,EAAf,IAAqB,CAACjC,KAAK,CAAC,SAAD,CAA5B,GAA2C,CAA3C,GAAgDqB,WAAnE;IACAD,mBAAmB,GAAIpB,KAAK,CAAC,UAAD,CAAL,CAAkBiC,IAAlB,KAA2B,EAA3B,IAAiC,CAACjC,KAAK,CAAC,UAAD,CAAL,CAAkBgC,OAArD,GAAgE,CAAhE,GAAqEb,cAA3F;IACA,OAAO;MACHO,eAAe,EAAEA,eADd;MAC+BC,gBAAgB,EAAEA,gBADjD;MAEHC,eAAe,EAAEA,eAFd;MAE+BC,kBAAkB,EAAEA,kBAFnD;MAGHN,gBAAgB,EAAEA,gBAHf;MAGiCH,mBAAmB,EAAEA;IAHtD,CAAP;EAKH,CAjCD;;EAkCA,OAAOxB,UAAP;AACH,CAzD+B,EAAhC;;AA0DA,SAASA,UAAT"},"metadata":{},"sourceType":"module"}