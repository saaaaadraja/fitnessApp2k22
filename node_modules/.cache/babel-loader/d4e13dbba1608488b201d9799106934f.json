{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\n\nvar PdfTextWebLink =\n/** @class */\nfunction (_super) {\n  __extends(PdfTextWebLink, _super); // Constructors\n\n  /**\n   * Initializes a new instance of the `PdfTextWebLink` class.\n   * @private\n   */\n\n\n  function PdfTextWebLink() {\n    var _this = _super.call(this) || this; // Fields\n\n    /**\n     * Internal variable to store `Url`.\n     * @default ''\n     * @private\n     */\n\n\n    _this.uniformResourceLocator = '';\n    /**\n     * Internal variable to store `Uri Annotation` object.\n     * @default null\n     * @private\n     */\n\n    _this.uriAnnotation = null;\n    /**\n     * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n     * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n     * @private\n     * @hidden\n     */\n\n    _this.recalculateBounds = false;\n    _this.defaultBorder = new PdfArray();\n\n    for (var i = 0; i < 3; i++) {\n      _this.defaultBorder.add(new PdfNumber(0));\n    }\n\n    return _this;\n  }\n\n  Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n    // Properties\n\n    /**\n     * Gets or sets the `Uri address`.\n     * ```typescript\n     * // create a new PDF document.\n     * let document : PdfDocument = new PdfDocument();\n     * // add a page to the document.\n     * let page1 : PdfPage = document.pages.add();\n     * // create the font\n     * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n     * // create the Text Web Link\n     * let textLink : PdfTextWebLink = new PdfTextWebLink();\n     * //\n     * // set the hyperlink\n     * textLink.url = 'http://www.google.com';\n     * //\n     * // set the link text\n     * textLink.text = 'Google';\n     * // set the font\n     * textLink.font = font;\n     * // draw the hyperlink in PDF page\n     * textLink.draw(page1, new PointF(10, 40));\n     * // save the document.\n     * document.save('output.pdf');\n     * // destroy the document\n     * document.destroy();\n     * ```\n     */\n    get: function () {\n      return this.uniformResourceLocator;\n    },\n    set: function (value) {\n      if (value.length === 0) {\n        throw new Error('ArgumentException : Url - string can not be empty');\n      }\n\n      this.uniformResourceLocator = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n    if (arg1 instanceof PdfPage) {\n      var layout = new PdfStringLayouter();\n      var previousFontStyle = this.font.style;\n\n      if (arg2 instanceof PointF) {\n        this.recalculateBounds = true;\n        this.font.style = PdfFontStyle.Underline;\n        var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg1.graphics.clientSize.width - arg2.x, 0), true, arg1.graphics.clientSize);\n\n        if (layoutResult.lines.length === 1) {\n          var textSize = this.font.measureString(this.value);\n          var rect = new RectangleF(arg2, textSize);\n          rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n          this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n          this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n          arg1.annotations.add(this.uriAnnotation);\n          var result = this.drawText(arg1, arg2);\n          this.font.style = previousFontStyle;\n          return result;\n        } else {\n          var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n          this.font.style = previousFontStyle;\n          return result;\n        }\n      } else {\n        var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n        this.font.style = PdfFontStyle.Underline;\n\n        if (layoutResult.lines.length === 1) {\n          var textSize = this.font.measureString(this.value);\n          var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n          rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n          this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n          this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n          arg1.annotations.add(this.uriAnnotation);\n          var returnValue = this.drawText(arg1, arg2);\n          this.font.style = previousFontStyle;\n          return returnValue;\n        } else {\n          var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n          this.font.style = previousFontStyle;\n          return returnValue;\n        }\n      }\n    } else {\n      var page = new PdfPage();\n      page = arg1.page;\n      return this.draw(page, arg2);\n    }\n  };\n  /* tslint:enable */\n  //Private methods\n\n  /**\n   * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n   * @private\n   */\n\n\n  PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n    var layoutResult;\n\n    for (var i = 0; i < result.layoutLines.length; i++) {\n      var size = this.font.measureString(result.lines[i].text);\n      var bounds = new RectangleF(location, size);\n\n      if (i !== 0) {\n        bounds.x = 0;\n      }\n\n      this.text = result.lines[i].text;\n\n      if (bounds.y + size.height > page.graphics.clientSize.height) {\n        if (i !== 0) {\n          page = page.graphics.getNextPage();\n          bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n          location.y = 0;\n        } else {\n          break;\n        }\n      }\n\n      bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n      this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n      this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n      page.annotations.add(this.uriAnnotation);\n\n      if (i !== 0) {\n        layoutResult = this.drawText(page, new PointF(0, bounds.y));\n      } else {\n        layoutResult = this.drawText(page, bounds.x, bounds.y);\n      }\n\n      location.y += size.height;\n    }\n\n    return layoutResult;\n  };\n  /**\n   * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n   * @private\n   */\n\n\n  PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n    var layoutResult;\n\n    for (var i = 0; i < result.layoutLines.length; i++) {\n      var size = this.font.measureString(result.lines[i].text);\n      var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n      internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n      this.text = result.lines[i].text;\n\n      if (bounds.y + size.height > page.graphics.clientSize.height) {\n        if (i !== 0) {\n          page = page.graphics.getNextPage();\n          bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n          internalBounds.y = 0;\n        } else {\n          break;\n        }\n      }\n\n      this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n      this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n      page.annotations.add(this.uriAnnotation);\n      layoutResult = this.drawText(page, bounds);\n      bounds.y += size.height;\n    }\n\n    return layoutResult;\n  };\n  /* tslint:disable */\n\n\n  PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n    var shift = 0;\n\n    if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n      currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n      currentBounds.width = lineWidth;\n    } else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n      currentBounds.x = startPosition + (maximumWidth - lineWidth);\n      currentBounds.width = lineWidth;\n    } else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n      currentBounds.x = startPosition;\n      currentBounds.width = maximumWidth;\n    } else {\n      currentBounds.width = startPosition;\n      currentBounds.width = lineWidth;\n    }\n\n    return currentBounds;\n  };\n\n  return PdfTextWebLink;\n}(PdfTextElement);\n\nexport { PdfTextWebLink };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfPage","PointF","RectangleF","SizeF","PdfTextElement","PdfUriAnnotation","PdfStringLayouter","PdfFontStyle","PdfTextAlignment","PdfArray","PdfNumber","PdfTextWebLink","_super","_this","call","uniformResourceLocator","uriAnnotation","recalculateBounds","defaultBorder","i","add","defineProperty","get","set","value","length","Error","enumerable","configurable","draw","arg1","arg2","layout","previousFontStyle","font","style","Underline","layoutResult","stringFormat","graphics","clientSize","width","x","lines","textSize","measureString","rect","calculateBounds","url","dictionary","items","setValue","annotations","result","drawText","drawMultipleLineWithPoint","y","returnValue","drawMultipleLineWithBounds","page","location","layoutLines","size","text","bounds","height","getNextPage","internalBounds","currentBounds","lineWidth","maximumWidth","startPosition","shift","alignment","Center","Right","Justify"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/pdf-text-web-link.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfPage } from './../pages/pdf-page';\nimport { PointF, RectangleF, SizeF } from './../drawing/pdf-drawing';\nimport { PdfTextElement } from './../graphics/figures/text-element';\nimport { PdfUriAnnotation } from './uri-annotation';\nimport { PdfStringLayouter } from './../graphics/fonts/string-layouter';\nimport { PdfFontStyle } from './../graphics/fonts/enum';\nimport { PdfTextAlignment } from './../graphics/enum';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\n/**\n * `PdfTextWebLink` class represents the class for text web link annotation.\n * ```typescript\n * // create a new PDF document.\n * let document : PdfDocument = new PdfDocument();\n * // add a page to the document.\n * let page1 : PdfPage = document.pages.add();\n * // create the font\n * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n * //\n * // create the Text Web Link\n * let textLink : PdfTextWebLink = new PdfTextWebLink();\n * // set the hyperlink\n * textLink.url = 'http://www.google.com';\n * // set the link text\n * textLink.text = 'Google';\n * // set the font\n * textLink.font = font;\n * // draw the hyperlink in PDF page\n * textLink.draw(page1, new PointF(10, 40));\n * //\n * // save the document.\n * document.save('output.pdf');\n * // destroy the document\n * document.destroy();\n * ```\n */\nvar PdfTextWebLink = /** @class */ (function (_super) {\n    __extends(PdfTextWebLink, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `PdfTextWebLink` class.\n     * @private\n     */\n    function PdfTextWebLink() {\n        var _this = _super.call(this) || this;\n        // Fields\n        /**\n         * Internal variable to store `Url`.\n         * @default ''\n         * @private\n         */\n        _this.uniformResourceLocator = '';\n        /**\n         * Internal variable to store `Uri Annotation` object.\n         * @default null\n         * @private\n         */\n        _this.uriAnnotation = null;\n        /**\n         * Checks whether the drawTextWebLink method with `PointF` overload is called or not.\n         * If it set as true, then the start position of each lines excluding firest line is changed as (0, Y).\n         * @private\n         * @hidden\n         */\n        _this.recalculateBounds = false;\n        _this.defaultBorder = new PdfArray();\n        for (var i = 0; i < 3; i++) {\n            _this.defaultBorder.add(new PdfNumber(0));\n        }\n        return _this;\n    }\n    Object.defineProperty(PdfTextWebLink.prototype, \"url\", {\n        // Properties\n        /**\n         * Gets or sets the `Uri address`.\n         * ```typescript\n         * // create a new PDF document.\n         * let document : PdfDocument = new PdfDocument();\n         * // add a page to the document.\n         * let page1 : PdfPage = document.pages.add();\n         * // create the font\n         * let font : PdfFont = new PdfStandardFont(PdfFontFamily.Helvetica, 12);\n         * // create the Text Web Link\n         * let textLink : PdfTextWebLink = new PdfTextWebLink();\n         * //\n         * // set the hyperlink\n         * textLink.url = 'http://www.google.com';\n         * //\n         * // set the link text\n         * textLink.text = 'Google';\n         * // set the font\n         * textLink.font = font;\n         * // draw the hyperlink in PDF page\n         * textLink.draw(page1, new PointF(10, 40));\n         * // save the document.\n         * document.save('output.pdf');\n         * // destroy the document\n         * document.destroy();\n         * ```\n         */\n        get: function () {\n            return this.uniformResourceLocator;\n        },\n        set: function (value) {\n            if (value.length === 0) {\n                throw new Error('ArgumentException : Url - string can not be empty');\n            }\n            this.uniformResourceLocator = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfTextWebLink.prototype.draw = function (arg1, arg2) {\n        if (arg1 instanceof PdfPage) {\n            var layout = new PdfStringLayouter();\n            var previousFontStyle = this.font.style;\n            if (arg2 instanceof PointF) {\n                this.recalculateBounds = true;\n                this.font.style = PdfFontStyle.Underline;\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF((arg1.graphics.clientSize.width - arg2.x), 0), true, arg1.graphics.clientSize);\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(arg2, textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg1.graphics.clientSize.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var result = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n                else {\n                    var result = this.drawMultipleLineWithPoint(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return result;\n                }\n            }\n            else {\n                var layoutResult = layout.layout(this.value, this.font, this.stringFormat, new SizeF(arg2.width, 0), false, new SizeF(0, 0));\n                this.font.style = PdfFontStyle.Underline;\n                if (layoutResult.lines.length === 1) {\n                    var textSize = this.font.measureString(this.value);\n                    var rect = new RectangleF(new PointF(arg2.x, arg2.y), textSize);\n                    rect = this.calculateBounds(rect, textSize.width, arg2.width, arg2.x);\n                    this.uriAnnotation = new PdfUriAnnotation(rect, this.url);\n                    this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n                    arg1.annotations.add(this.uriAnnotation);\n                    var returnValue = this.drawText(arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n                else {\n                    var returnValue = this.drawMultipleLineWithBounds(layoutResult, arg1, arg2);\n                    this.font.style = previousFontStyle;\n                    return returnValue;\n                }\n            }\n        }\n        else {\n            var page = new PdfPage();\n            page = arg1.page;\n            return this.draw(page, arg2);\n        }\n    };\n    /* tslint:enable */\n    //Private methods\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified location.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithPoint = function (result, page, location) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var bounds = new RectangleF(location, size);\n            if (i !== 0) {\n                bounds.x = 0;\n            }\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(0, 0, page.graphics.clientSize.width, size.height);\n                    location.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            bounds = this.calculateBounds(bounds, size.width, page.graphics.clientSize.width, bounds.x);\n            this.uriAnnotation = new PdfUriAnnotation(bounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            if (i !== 0) {\n                layoutResult = this.drawText(page, new PointF(0, bounds.y));\n            }\n            else {\n                layoutResult = this.drawText(page, bounds.x, bounds.y);\n            }\n            location.y += size.height;\n        }\n        return layoutResult;\n    };\n    /**\n     * Helper method `Draw` a Multiple Line Text Web Link on the Graphics with the specified bounds.\n     * @private\n     */\n    PdfTextWebLink.prototype.drawMultipleLineWithBounds = function (result, page, bounds) {\n        var layoutResult;\n        for (var i = 0; i < result.layoutLines.length; i++) {\n            var size = this.font.measureString(result.lines[i].text);\n            var internalBounds = new RectangleF(new PointF(bounds.x, bounds.y), size);\n            internalBounds = this.calculateBounds(internalBounds, size.width, bounds.width, bounds.x);\n            this.text = result.lines[i].text;\n            if (bounds.y + size.height > page.graphics.clientSize.height) {\n                if (i !== 0) {\n                    page = page.graphics.getNextPage();\n                    bounds = new RectangleF(bounds.x, 0, bounds.width, size.height);\n                    internalBounds.y = 0;\n                }\n                else {\n                    break;\n                }\n            }\n            this.uriAnnotation = new PdfUriAnnotation(internalBounds, this.url);\n            this.uriAnnotation.dictionary.items.setValue('Border', this.defaultBorder);\n            page.annotations.add(this.uriAnnotation);\n            layoutResult = this.drawText(page, bounds);\n            bounds.y += size.height;\n        }\n        return layoutResult;\n    };\n    /* tslint:disable */\n    PdfTextWebLink.prototype.calculateBounds = function (currentBounds, lineWidth, maximumWidth, startPosition) {\n        var shift = 0;\n        if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Center) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth) / 2;\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Right) {\n            currentBounds.x = startPosition + (maximumWidth - lineWidth);\n            currentBounds.width = lineWidth;\n        }\n        else if (this.stringFormat != null && typeof this.stringFormat !== 'undefined' && this.stringFormat.alignment === PdfTextAlignment.Justify) {\n            currentBounds.x = startPosition;\n            currentBounds.width = maximumWidth;\n        }\n        else {\n            currentBounds.width = startPosition;\n            currentBounds.width = lineWidth;\n        }\n        return currentBounds;\n    };\n    return PdfTextWebLink;\n}(PdfTextElement));\nexport { PdfTextWebLink };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}