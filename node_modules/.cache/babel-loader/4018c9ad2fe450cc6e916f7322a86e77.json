{"ast":null,"code":"import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\n\nvar PdfAnnotation =\n/** @class */\nfunction () {\n  function PdfAnnotation(arg1) {\n    // Fields\n\n    /**\n     * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n     * @private\n     */\n    this.dictionaryProperties = new DictionaryProperties();\n    /**\n     * `Color` of the annotation\n     * @private\n     */\n\n    this.pdfColor = new PdfColor(255, 255, 255);\n    /**\n     * `Bounds` of the annotation.\n     * @private\n     */\n\n    this.rectangle = new RectangleF(0, 0, 0, 0);\n    /**\n     * Parent `page` of the annotation.\n     * @private\n     */\n\n    this.pdfPage = null;\n    /**\n     * `Brush of the text` of the annotation.\n     * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n     * @private\n     */\n\n    this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n    /**\n     * `Font of the text` of the annotation.\n     * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n     * @private\n     */\n\n    this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n    /**\n     * `StringFormat of the text` of the annotation.\n     * @default new PdfStringFormat(PdfTextAlignment.Left)\n     * @private\n     */\n\n    this.format = new PdfStringFormat(PdfTextAlignment.Left);\n    /**\n     * `Text` of the annotation.\n     * @private\n     */\n\n    this.content = '';\n    /**\n     * Internal variable to store `dictionary`.\n     * @private\n     */\n\n    this.pdfDictionary = new PdfDictionary();\n    /**\n     * To specifying the `Inner color` with which to fill the annotation\n     * @private\n     */\n\n    this.internalColor = new PdfColor();\n    /**\n     * `opacity or darkness` of the annotation.\n     * @private\n     * @default 1.0\n     */\n\n    this.darkness = 1.0;\n\n    if (typeof arg1 === 'undefined') {\n      this.initialize();\n    } else {\n      this.initialize();\n      this.bounds = arg1;\n    }\n  }\n\n  Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n    // Properties\n\n    /**\n     * `Color` of the annotation\n     * @private\n     */\n    get: function () {\n      return this.pdfColor;\n    },\n    set: function (value) {\n      this.pdfColor = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n    /**\n     * To specifying the `Inner color` with which to fill the annotation\n     * @private\n     */\n    get: function () {\n      return this.internalColor;\n    },\n    set: function (value) {\n      this.internalColor = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n    /**\n     * `bounds` of the annotation.\n     * @private\n     */\n    get: function () {\n      return this.rectangle;\n    },\n    set: function (value) {\n      this.rectangle = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n    /**\n     * Parent `page` of the annotation.\n     * @private\n     */\n    get: function () {\n      return this.pdfPage;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n    /**\n     * To specifying the `Font of the text` in the annotation.\n     * @private\n     */\n    get: function () {\n      return this.textFont;\n    },\n    set: function (value) {\n      this.textFont = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n    /**\n     * To specifying the `StringFormat of the text` in the annotation.\n     * @private\n     */\n    get: function () {\n      return this.format;\n    },\n    set: function (value) {\n      this.format = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n    /**\n     * To specifying the `Brush of the text` in the annotation.\n     * @private\n     */\n    get: function () {\n      return this.textBrush;\n    },\n    set: function (value) {\n      this.textBrush = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n    /**\n     * `Text` of the annotation.\n     * @private\n     */\n    get: function () {\n      return this.content;\n    },\n    set: function (value) {\n      this.content = value;\n      this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n    /**\n     * Internal variable to store `dictionary`.\n     * @hidden\n     */\n    get: function () {\n      return this.pdfDictionary;\n    },\n    set: function (value) {\n      this.pdfDictionary = value;\n    },\n    enumerable: true,\n    configurable: true\n  }); // Implementation\n\n  /**\n   * `Initialize` the annotation event handler and specifies the type of the annotation.\n   * @private\n   */\n\n  PdfAnnotation.prototype.initialize = function () {\n    this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n    this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n  };\n  /**\n   * Sets related `page` of the annotation.\n   * @private\n   */\n\n\n  PdfAnnotation.prototype.setPage = function (page) {\n    this.pdfPage = page;\n    this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n  };\n  /**\n   * Handles the `BeginSave` event of the Dictionary.\n   * @private\n   */\n\n\n  PdfAnnotation.prototype.beginSave = function () {\n    this.save();\n  };\n  /**\n   * `Saves` an annotation.\n   * @private\n   */\n\n  /* tslint:disable */\n\n\n  PdfAnnotation.prototype.save = function () {\n    var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n    var section = this.pdfPage.section;\n    var initialHeight = nativeRectangle.height;\n    var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n    nativeRectangle.x = tempLoacation.x;\n    nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n    nativeRectangle.y = tempLoacation.y - this.page.document.pageSettings.margins.top;\n    nativeRectangle.height = nativeRectangle.y - initialHeight;\n    this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n    this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n  };\n\n  Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n    /* tslint:enable */\n    // IPdfWrapper Members\n\n    /**\n     * Gets the `element`.\n     * @private\n     */\n    get: function () {\n      return this.pdfDictionary;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfAnnotation;\n}();\n\nexport { PdfAnnotation };","map":{"version":3,"names":["PdfColor","RectangleF","PointF","PdfDictionary","SaveAnnotationEventHandler","PdfArray","PdfNumber","PdfReferenceHolder","PdfString","DictionaryProperties","PdfName","PdfSolidBrush","PdfStandardFont","PdfFontFamily","PdfStringFormat","PdfTextAlignment","PdfAnnotation","arg1","dictionaryProperties","pdfColor","rectangle","pdfPage","textBrush","textFont","TimesRoman","format","Left","content","pdfDictionary","internalColor","darkness","initialize","bounds","Object","defineProperty","prototype","get","set","value","enumerable","configurable","dictionary","items","setValue","contents","annotationBeginSave","type","annot","setPage","page","p","beginSave","save","nativeRectangle","x","y","width","height","section","initialHeight","tempLoacation","pointToNativePdf","document","pageSettings","margins","top","rect","fromRectangle","ca"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-pdf-export/src/implementation/annotations/annotation.js"],"sourcesContent":["import { PdfColor } from './../graphics/pdf-color';\nimport { RectangleF, PointF } from './../drawing/pdf-drawing';\nimport { PdfDictionary, SaveAnnotationEventHandler } from './../primitives/pdf-dictionary';\nimport { PdfArray } from './../primitives/pdf-array';\nimport { PdfNumber } from './../primitives/pdf-number';\nimport { PdfReferenceHolder } from './../primitives/pdf-reference';\nimport { PdfString } from './../primitives/pdf-string';\nimport { DictionaryProperties } from './../input-output/pdf-dictionary-properties';\nimport { PdfName } from './../primitives/pdf-name';\nimport { PdfSolidBrush } from './../graphics/brushes/pdf-solid-brush';\nimport { PdfStandardFont } from './../graphics/fonts/pdf-standard-font';\nimport { PdfFontFamily } from './../graphics/fonts/enum';\nimport { PdfStringFormat } from './../graphics/fonts/pdf-string-format';\nimport { PdfTextAlignment } from './../graphics/enum';\n/**\n * `PdfAnnotation` class represents the base class for annotation objects.\n * @private\n */\nvar PdfAnnotation = /** @class */ (function () {\n    function PdfAnnotation(arg1) {\n        // Fields\n        /**\n         * Specifies the Internal variable to store fields of `PdfDictionaryProperties`.\n         * @private\n         */\n        this.dictionaryProperties = new DictionaryProperties();\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        this.pdfColor = new PdfColor(255, 255, 255);\n        /**\n         * `Bounds` of the annotation.\n         * @private\n         */\n        this.rectangle = new RectangleF(0, 0, 0, 0);\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        this.pdfPage = null;\n        /**\n         * `Brush of the text` of the annotation.\n         * @default new PdfSolidBrush(new PdfColor(0, 0, 0))\n         * @private\n         */\n        this.textBrush = new PdfSolidBrush(new PdfColor(0, 0, 0));\n        /**\n         * `Font of the text` of the annotation.\n         * @default new PdfStandardFont(PdfFontFamily.TimesRoman, 10)\n         * @private\n         */\n        this.textFont = new PdfStandardFont(PdfFontFamily.TimesRoman, 10);\n        /**\n         * `StringFormat of the text` of the annotation.\n         * @default new PdfStringFormat(PdfTextAlignment.Left)\n         * @private\n         */\n        this.format = new PdfStringFormat(PdfTextAlignment.Left);\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        this.content = '';\n        /**\n         * Internal variable to store `dictionary`.\n         * @private\n         */\n        this.pdfDictionary = new PdfDictionary();\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        this.internalColor = new PdfColor();\n        /**\n         * `opacity or darkness` of the annotation.\n         * @private\n         * @default 1.0\n         */\n        this.darkness = 1.0;\n        if (typeof arg1 === 'undefined') {\n            this.initialize();\n        }\n        else {\n            this.initialize();\n            this.bounds = arg1;\n        }\n    }\n    Object.defineProperty(PdfAnnotation.prototype, \"color\", {\n        // Properties\n        /**\n         * `Color` of the annotation\n         * @private\n         */\n        get: function () {\n            return this.pdfColor;\n        },\n        set: function (value) {\n            this.pdfColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"innerColor\", {\n        /**\n         * To specifying the `Inner color` with which to fill the annotation\n         * @private\n         */\n        get: function () {\n            return this.internalColor;\n        },\n        set: function (value) {\n            this.internalColor = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"bounds\", {\n        /**\n         * `bounds` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.rectangle;\n        },\n        set: function (value) {\n            this.rectangle = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"page\", {\n        /**\n         * Parent `page` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.pdfPage;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"font\", {\n        /**\n         * To specifying the `Font of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textFont;\n        },\n        set: function (value) {\n            this.textFont = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"stringFormat\", {\n        /**\n         * To specifying the `StringFormat of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.format;\n        },\n        set: function (value) {\n            this.format = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"brush\", {\n        /**\n         * To specifying the `Brush of the text` in the annotation.\n         * @private\n         */\n        get: function () {\n            return this.textBrush;\n        },\n        set: function (value) {\n            this.textBrush = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"text\", {\n        /**\n         * `Text` of the annotation.\n         * @private\n         */\n        get: function () {\n            return this.content;\n        },\n        set: function (value) {\n            this.content = value;\n            this.dictionary.items.setValue(this.dictionaryProperties.contents, new PdfString(this.content));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfAnnotation.prototype, \"dictionary\", {\n        /**\n         * Internal variable to store `dictionary`.\n         * @hidden\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        set: function (value) {\n            this.pdfDictionary = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    // Implementation\n    /**\n     * `Initialize` the annotation event handler and specifies the type of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.initialize = function () {\n        this.pdfDictionary.annotationBeginSave = new SaveAnnotationEventHandler(this);\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.type, new PdfName(this.dictionaryProperties.annot));\n    };\n    /**\n     * Sets related `page` of the annotation.\n     * @private\n     */\n    PdfAnnotation.prototype.setPage = function (page) {\n        this.pdfPage = page;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.p, new PdfReferenceHolder(this.pdfPage));\n    };\n    /**\n     * Handles the `BeginSave` event of the Dictionary.\n     * @private\n     */\n    PdfAnnotation.prototype.beginSave = function () {\n        this.save();\n    };\n    /**\n     * `Saves` an annotation.\n     * @private\n     */\n    /* tslint:disable */\n    PdfAnnotation.prototype.save = function () {\n        var nativeRectangle = new RectangleF(this.rectangle.x, this.rectangle.y, this.rectangle.width, this.rectangle.height);\n        var section = this.pdfPage.section;\n        var initialHeight = nativeRectangle.height;\n        var tempLoacation = section.pointToNativePdf(this.page, new PointF(nativeRectangle.x, nativeRectangle.y));\n        nativeRectangle.x = tempLoacation.x;\n        nativeRectangle.width = tempLoacation.x + nativeRectangle.width;\n        nativeRectangle.y = (tempLoacation.y - this.page.document.pageSettings.margins.top);\n        nativeRectangle.height = nativeRectangle.y - initialHeight;\n        this.pdfDictionary.items.setValue(this.dictionaryProperties.rect, PdfArray.fromRectangle(nativeRectangle));\n        this.dictionary.items.setValue(this.dictionaryProperties.ca, new PdfNumber(this.darkness));\n    };\n    Object.defineProperty(PdfAnnotation.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @private\n         */\n        get: function () {\n            return this.pdfDictionary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfAnnotation;\n}());\nexport { PdfAnnotation };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}