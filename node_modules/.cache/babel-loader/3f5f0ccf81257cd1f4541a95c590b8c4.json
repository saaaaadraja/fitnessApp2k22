{"ast":null,"code":"var global = require('./_global');\n\nvar hide = require('./_hide');\n\nvar has = require('./_has');\n\nvar SRC = require('./_uid')('src');\n\nvar $toString = require('./_function-to-string');\n\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  } // add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});","map":{"version":3,"names":["global","require","hide","has","SRC","$toString","TO_STRING","TPL","split","inspectSource","it","call","module","exports","O","key","val","safe","isFunction","join","String","Function","prototype","toString"],"sources":["D:/Theme/package/node_modules/recharts/node_modules/core-js/modules/_redefine.js"],"sourcesContent":["var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar $toString = require('./_function-to-string');\nvar TO_STRING = 'toString';\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,SAAD,CAAlB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIG,GAAG,GAAGH,OAAO,CAAC,QAAD,CAAP,CAAkB,KAAlB,CAAV;;AACA,IAAII,SAAS,GAAGJ,OAAO,CAAC,uBAAD,CAAvB;;AACA,IAAIK,SAAS,GAAG,UAAhB;AACA,IAAIC,GAAG,GAAG,CAAC,KAAKF,SAAN,EAAiBG,KAAjB,CAAuBF,SAAvB,CAAV;;AAEAL,OAAO,CAAC,SAAD,CAAP,CAAmBQ,aAAnB,GAAmC,UAAUC,EAAV,EAAc;EAC/C,OAAOL,SAAS,CAACM,IAAV,CAAeD,EAAf,CAAP;AACD,CAFD;;AAIA,CAACE,MAAM,CAACC,OAAP,GAAiB,UAAUC,CAAV,EAAaC,GAAb,EAAkBC,GAAlB,EAAuBC,IAAvB,EAA6B;EAC7C,IAAIC,UAAU,GAAG,OAAOF,GAAP,IAAc,UAA/B;EACA,IAAIE,UAAJ,EAAgBf,GAAG,CAACa,GAAD,EAAM,MAAN,CAAH,IAAoBd,IAAI,CAACc,GAAD,EAAM,MAAN,EAAcD,GAAd,CAAxB;EAChB,IAAID,CAAC,CAACC,GAAD,CAAD,KAAWC,GAAf,EAAoB;EACpB,IAAIE,UAAJ,EAAgBf,GAAG,CAACa,GAAD,EAAMZ,GAAN,CAAH,IAAiBF,IAAI,CAACc,GAAD,EAAMZ,GAAN,EAAWU,CAAC,CAACC,GAAD,CAAD,GAAS,KAAKD,CAAC,CAACC,GAAD,CAAf,GAAuBR,GAAG,CAACY,IAAJ,CAASC,MAAM,CAACL,GAAD,CAAf,CAAlC,CAArB;;EAChB,IAAID,CAAC,KAAKd,MAAV,EAAkB;IAChBc,CAAC,CAACC,GAAD,CAAD,GAASC,GAAT;EACD,CAFD,MAEO,IAAI,CAACC,IAAL,EAAW;IAChB,OAAOH,CAAC,CAACC,GAAD,CAAR;IACAb,IAAI,CAACY,CAAD,EAAIC,GAAJ,EAASC,GAAT,CAAJ;EACD,CAHM,MAGA,IAAIF,CAAC,CAACC,GAAD,CAAL,EAAY;IACjBD,CAAC,CAACC,GAAD,CAAD,GAASC,GAAT;EACD,CAFM,MAEA;IACLd,IAAI,CAACY,CAAD,EAAIC,GAAJ,EAASC,GAAT,CAAJ;EACD,CAd4C,CAe/C;;AACC,CAhBD,EAgBGK,QAAQ,CAACC,SAhBZ,EAgBuBhB,SAhBvB,EAgBkC,SAASiB,QAAT,GAAoB;EACpD,OAAO,OAAO,IAAP,IAAe,UAAf,IAA6B,KAAKnB,GAAL,CAA7B,IAA0CC,SAAS,CAACM,IAAV,CAAe,IAAf,CAAjD;AACD,CAlBD"},"metadata":{},"sourceType":"script"}