{"ast":null,"code":"import { isUndefined } from './util';\nvar REGX_MOBILE = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i;\nvar REGX_IE = /msie|trident/i;\nvar REGX_IE11 = /Trident\\/7\\./;\nvar REGX_IOS = /(ipad|iphone|ipod touch)/i;\nvar REGX_IOS7 = /(ipad|iphone|ipod touch);.*os 7_\\d|(ipad|iphone|ipod touch);.*os 8_\\d/i;\nvar REGX_ANDROID = /android/i;\nvar REGX_WINDOWS = /trident|windows phone|edge/i;\nvar REGX_VERSION = /(version)[ \\/]([\\w.]+)/i;\nvar REGX_BROWSER = {\n  OPERA: /(opera|opr)(?:.*version|)[ \\/]([\\w.]+)/i,\n  EDGE: /(edge)(?:.*version|)[ \\/]([\\w.]+)/i,\n  CHROME: /(chrome|crios)[ \\/]([\\w.]+)/i,\n  PANTHOMEJS: /(phantomjs)[ \\/]([\\w.]+)/i,\n  SAFARI: /(safari)[ \\/]([\\w.]+)/i,\n  WEBKIT: /(webkit)[ \\/]([\\w.]+)/i,\n  MSIE: /(msie|trident) ([\\w.]+)/i,\n  MOZILLA: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\n/* istanbul ignore else  */\n\nif (typeof window !== 'undefined') {\n  window.browserDetails = window.browserDetails || {};\n}\n/**\n * Get configuration details for Browser\n * @private\n */\n\n\nvar Browser =\n/** @class */\nfunction () {\n  function Browser() {}\n\n  Browser.extractBrowserDetail = function () {\n    var browserInfo = {\n      culture: {}\n    };\n    var keys = Object.keys(REGX_BROWSER);\n    var clientInfo = [];\n\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var key = keys_1[_i];\n      clientInfo = Browser.userAgent.match(REGX_BROWSER[key]);\n\n      if (clientInfo) {\n        browserInfo.name = clientInfo[1].toLowerCase() === 'opr' ? 'opera' : clientInfo[1].toLowerCase();\n        browserInfo.name = clientInfo[1].toLowerCase() === 'crios' ? 'chrome' : browserInfo.name;\n        browserInfo.version = clientInfo[2];\n        browserInfo.culture.name = browserInfo.culture.language = navigator.language;\n\n        if (!!Browser.userAgent.match(REGX_IE11)) {\n          browserInfo.name = 'msie';\n          break;\n        }\n\n        var version = Browser.userAgent.match(REGX_VERSION);\n\n        if (browserInfo.name === 'safari' && version) {\n          browserInfo.version = version[2];\n        }\n\n        break;\n      }\n    }\n\n    return browserInfo;\n  };\n  /**\n   * To get events from the browser\n   * @param {string} event - type of event triggered.\n   * @returns {Boolean}\n   */\n\n\n  Browser.getEvent = function (event) {\n    // tslint:disable-next-line:no-any\n    var events = {\n      start: {\n        isPointer: 'pointerdown',\n        isTouch: 'touchstart',\n        isDevice: 'mousedown'\n      },\n      move: {\n        isPointer: 'pointermove',\n        isTouch: 'touchmove',\n        isDevice: 'mousemove'\n      },\n      end: {\n        isPointer: 'pointerup',\n        isTouch: 'touchend',\n        isDevice: 'mouseup'\n      },\n      cancel: {\n        isPointer: 'pointercancel',\n        isTouch: 'touchcancel',\n        isDevice: 'mouseleave'\n      }\n    };\n    return Browser.isPointer && !Browser.isWindows ? events[event].isPointer : Browser.isTouch ? events[event].isTouch + (!Browser.isDevice ? ' ' + events[event].isDevice : '') : events[event].isDevice;\n  };\n  /**\n   * To get the Touch start event from browser\n   * @returns {string}\n   */\n\n\n  Browser.getTouchStartEvent = function () {\n    return Browser.getEvent('start');\n  };\n  /**\n   * To get the Touch end event from browser\n   * @returns {string}\n   */\n\n\n  Browser.getTouchEndEvent = function () {\n    return Browser.getEvent('end');\n  };\n  /**\n   * To get the Touch move event from browser\n   * @returns {string}\n   */\n\n\n  Browser.getTouchMoveEvent = function () {\n    return Browser.getEvent('move');\n  };\n  /**\n   * To cancel the touch event from browser\n   * @returns {string}\n   */\n\n\n  Browser.getTouchCancelEvent = function () {\n    return Browser.getEvent('cancel');\n  };\n  /**\n   * To get the value based on provided key and regX\n   * @param {string} key\n   * @param {RegExp} regX\n   * @returns {Object}\n   */\n\n\n  Browser.getValue = function (key, regX) {\n    var browserDetails = window.browserDetails;\n\n    if ('undefined' === typeof browserDetails[key]) {\n      return browserDetails[key] = regX.test(Browser.userAgent);\n    }\n\n    return browserDetails[key];\n  };\n\n  Object.defineProperty(Browser, \"userAgent\", {\n    get: function () {\n      return Browser.uA;\n    },\n    //Properties \n\n    /**\n     * Property specifies the userAgent of the browser. Default userAgent value is based on the browser.\n     * Also we can set our own userAgent.\n     */\n    set: function (uA) {\n      Browser.uA = uA;\n      window.browserDetails = {};\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"info\", {\n    //Read Only Properties\n\n    /**\n     * Property is to get the browser information like Name, Version and Language\n     * @returns BrowserInfo\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.info)) {\n        return window.browserDetails.info = Browser.extractBrowserDetail();\n      }\n\n      return window.browserDetails.info;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isIE\", {\n    /**\n     * Property is to get whether the userAgent is based IE.\n     */\n    get: function () {\n      return Browser.getValue('isIE', REGX_IE);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isTouch\", {\n    /**\n     * Property is to get whether the browser has touch support.\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.isTouch)) {\n        return window.browserDetails.isTouch = 'ontouchstart' in window.navigator || window && window.navigator && window.navigator.maxTouchPoints > 0 || 'ontouchstart' in window;\n      }\n\n      return window.browserDetails.isTouch;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isPointer\", {\n    /**\n     * Property is to get whether the browser has Pointer support.\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.isPointer)) {\n        return window.browserDetails.isPointer = 'pointerEnabled' in window.navigator;\n      }\n\n      return window.browserDetails.isPointer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isMSPointer\", {\n    /**\n     * Property is to get whether the browser has MSPointer support.\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.isMSPointer)) {\n        return window.browserDetails.isMSPointer = 'msPointerEnabled' in window.navigator;\n      }\n\n      return window.browserDetails.isMSPointer;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isDevice\", {\n    /**\n     * Property is to get whether the userAgent is device based.\n     */\n    get: function () {\n      return Browser.getValue('isDevice', REGX_MOBILE);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isIos\", {\n    /**\n     * Property is to get whether the userAgent is IOS.\n     */\n    get: function () {\n      return Browser.getValue('isIos', REGX_IOS);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isIos7\", {\n    /**\n     * Property is to get whether the userAgent is Ios7.\n     */\n    get: function () {\n      return Browser.getValue('isIos7', REGX_IOS7);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isAndroid\", {\n    /**\n     * Property is to get whether the userAgent is Android.\n     */\n    get: function () {\n      return Browser.getValue('isAndroid', REGX_ANDROID);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isWebView\", {\n    /**\n     * Property is to identify whether application ran in web view.\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.isWebView)) {\n        window.browserDetails.isWebView = !(isUndefined(window.cordova) && isUndefined(window.PhoneGap) && isUndefined(window.phonegap) && window.forge !== 'object');\n        return window.browserDetails.isWebView;\n      }\n\n      return window.browserDetails.isWebView;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"isWindows\", {\n    /**\n     * Property is to get whether the userAgent is Windows.\n     */\n    get: function () {\n      return Browser.getValue('isWindows', REGX_WINDOWS);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"touchStartEvent\", {\n    /**\n     * Property is to get the touch start event. It returns event name based on browser.\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.touchStartEvent)) {\n        return window.browserDetails.touchStartEvent = Browser.getTouchStartEvent();\n      }\n\n      return window.browserDetails.touchStartEvent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"touchMoveEvent\", {\n    /**\n     * Property is to get the touch move event. It returns event name based on browser.\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.touchMoveEvent)) {\n        return window.browserDetails.touchMoveEvent = Browser.getTouchMoveEvent();\n      }\n\n      return window.browserDetails.touchMoveEvent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"touchEndEvent\", {\n    /**\n     * Property is to get the touch end event. It returns event name based on browser.\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.touchEndEvent)) {\n        return window.browserDetails.touchEndEvent = Browser.getTouchEndEvent();\n      }\n\n      return window.browserDetails.touchEndEvent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Browser, \"touchCancelEvent\", {\n    /**\n     * Property is to cancel the touch end event.\n     */\n    get: function () {\n      if (isUndefined(window.browserDetails.touchCancelEvent)) {\n        return window.browserDetails.touchCancelEvent = Browser.getTouchCancelEvent();\n      }\n\n      return window.browserDetails.touchCancelEvent;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /* istanbul ignore next */\n\n  Browser.uA = typeof navigator !== 'undefined' ? navigator.userAgent : '';\n  return Browser;\n}();\n\nexport { Browser };","map":{"version":3,"names":["isUndefined","REGX_MOBILE","REGX_IE","REGX_IE11","REGX_IOS","REGX_IOS7","REGX_ANDROID","REGX_WINDOWS","REGX_VERSION","REGX_BROWSER","OPERA","EDGE","CHROME","PANTHOMEJS","SAFARI","WEBKIT","MSIE","MOZILLA","window","browserDetails","Browser","extractBrowserDetail","browserInfo","culture","keys","Object","clientInfo","_i","keys_1","length","key","userAgent","match","name","toLowerCase","version","language","navigator","getEvent","event","events","start","isPointer","isTouch","isDevice","move","end","cancel","isWindows","getTouchStartEvent","getTouchEndEvent","getTouchMoveEvent","getTouchCancelEvent","getValue","regX","test","defineProperty","get","uA","set","enumerable","configurable","info","maxTouchPoints","isMSPointer","isWebView","cordova","PhoneGap","phonegap","forge","touchStartEvent","touchMoveEvent","touchEndEvent","touchCancelEvent"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-base/src/browser.js"],"sourcesContent":["import { isUndefined } from './util';\nvar REGX_MOBILE = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i;\nvar REGX_IE = /msie|trident/i;\nvar REGX_IE11 = /Trident\\/7\\./;\nvar REGX_IOS = /(ipad|iphone|ipod touch)/i;\nvar REGX_IOS7 = /(ipad|iphone|ipod touch);.*os 7_\\d|(ipad|iphone|ipod touch);.*os 8_\\d/i;\nvar REGX_ANDROID = /android/i;\nvar REGX_WINDOWS = /trident|windows phone|edge/i;\nvar REGX_VERSION = /(version)[ \\/]([\\w.]+)/i;\nvar REGX_BROWSER = {\n    OPERA: /(opera|opr)(?:.*version|)[ \\/]([\\w.]+)/i,\n    EDGE: /(edge)(?:.*version|)[ \\/]([\\w.]+)/i,\n    CHROME: /(chrome|crios)[ \\/]([\\w.]+)/i,\n    PANTHOMEJS: /(phantomjs)[ \\/]([\\w.]+)/i,\n    SAFARI: /(safari)[ \\/]([\\w.]+)/i,\n    WEBKIT: /(webkit)[ \\/]([\\w.]+)/i,\n    MSIE: /(msie|trident) ([\\w.]+)/i,\n    MOZILLA: /(mozilla)(?:.*? rv:([\\w.]+)|)/i\n};\n/* istanbul ignore else  */\nif (typeof window !== 'undefined') {\n    window.browserDetails = window.browserDetails || {};\n}\n/**\n * Get configuration details for Browser\n * @private\n */\nvar Browser = /** @class */ (function () {\n    function Browser() {\n    }\n    Browser.extractBrowserDetail = function () {\n        var browserInfo = { culture: {} };\n        var keys = Object.keys(REGX_BROWSER);\n        var clientInfo = [];\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            clientInfo = Browser.userAgent.match(REGX_BROWSER[key]);\n            if (clientInfo) {\n                browserInfo.name = (clientInfo[1].toLowerCase() === 'opr' ? 'opera' : clientInfo[1].toLowerCase());\n                browserInfo.name = (clientInfo[1].toLowerCase() === 'crios' ? 'chrome' : browserInfo.name);\n                browserInfo.version = clientInfo[2];\n                browserInfo.culture.name = browserInfo.culture.language = navigator.language;\n                if (!!Browser.userAgent.match(REGX_IE11)) {\n                    browserInfo.name = 'msie';\n                    break;\n                }\n                var version = Browser.userAgent.match(REGX_VERSION);\n                if (browserInfo.name === 'safari' && version) {\n                    browserInfo.version = version[2];\n                }\n                break;\n            }\n        }\n        return browserInfo;\n    };\n    /**\n     * To get events from the browser\n     * @param {string} event - type of event triggered.\n     * @returns {Boolean}\n     */\n    Browser.getEvent = function (event) {\n        // tslint:disable-next-line:no-any\n        var events = {\n            start: {\n                isPointer: 'pointerdown', isTouch: 'touchstart', isDevice: 'mousedown'\n            },\n            move: {\n                isPointer: 'pointermove', isTouch: 'touchmove', isDevice: 'mousemove'\n            },\n            end: {\n                isPointer: 'pointerup', isTouch: 'touchend', isDevice: 'mouseup'\n            },\n            cancel: {\n                isPointer: 'pointercancel', isTouch: 'touchcancel', isDevice: 'mouseleave'\n            }\n        };\n        return (Browser.isPointer && !Browser.isWindows ? events[event].isPointer :\n            (Browser.isTouch ? events[event].isTouch + (!Browser.isDevice ? ' ' + events[event].isDevice : '')\n                : events[event].isDevice));\n    };\n    /**\n     * To get the Touch start event from browser\n     * @returns {string}\n     */\n    Browser.getTouchStartEvent = function () {\n        return Browser.getEvent('start');\n    };\n    /**\n     * To get the Touch end event from browser\n     * @returns {string}\n     */\n    Browser.getTouchEndEvent = function () {\n        return Browser.getEvent('end');\n    };\n    /**\n     * To get the Touch move event from browser\n     * @returns {string}\n     */\n    Browser.getTouchMoveEvent = function () {\n        return Browser.getEvent('move');\n    };\n    /**\n     * To cancel the touch event from browser\n     * @returns {string}\n     */\n    Browser.getTouchCancelEvent = function () {\n        return Browser.getEvent('cancel');\n    };\n    /**\n     * To get the value based on provided key and regX\n     * @param {string} key\n     * @param {RegExp} regX\n     * @returns {Object}\n     */\n    Browser.getValue = function (key, regX) {\n        var browserDetails = window.browserDetails;\n        if ('undefined' === typeof browserDetails[key]) {\n            return browserDetails[key] = regX.test(Browser.userAgent);\n        }\n        return browserDetails[key];\n    };\n    Object.defineProperty(Browser, \"userAgent\", {\n        get: function () {\n            return Browser.uA;\n        },\n        //Properties \n        /**\n         * Property specifies the userAgent of the browser. Default userAgent value is based on the browser.\n         * Also we can set our own userAgent.\n         */\n        set: function (uA) {\n            Browser.uA = uA;\n            window.browserDetails = {};\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"info\", {\n        //Read Only Properties\n        /**\n         * Property is to get the browser information like Name, Version and Language\n         * @returns BrowserInfo\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.info)) {\n                return window.browserDetails.info = Browser.extractBrowserDetail();\n            }\n            return window.browserDetails.info;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isIE\", {\n        /**\n         * Property is to get whether the userAgent is based IE.\n         */\n        get: function () {\n            return Browser.getValue('isIE', REGX_IE);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isTouch\", {\n        /**\n         * Property is to get whether the browser has touch support.\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.isTouch)) {\n                return (window.browserDetails.isTouch =\n                    ('ontouchstart' in window.navigator) ||\n                        (window &&\n                            window.navigator &&\n                            (window.navigator.maxTouchPoints > 0)) || ('ontouchstart' in window));\n            }\n            return window.browserDetails.isTouch;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isPointer\", {\n        /**\n         * Property is to get whether the browser has Pointer support.\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.isPointer)) {\n                return window.browserDetails.isPointer = ('pointerEnabled' in window.navigator);\n            }\n            return window.browserDetails.isPointer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isMSPointer\", {\n        /**\n         * Property is to get whether the browser has MSPointer support.\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.isMSPointer)) {\n                return window.browserDetails.isMSPointer = ('msPointerEnabled' in window.navigator);\n            }\n            return window.browserDetails.isMSPointer;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isDevice\", {\n        /**\n         * Property is to get whether the userAgent is device based.\n         */\n        get: function () {\n            return Browser.getValue('isDevice', REGX_MOBILE);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isIos\", {\n        /**\n         * Property is to get whether the userAgent is IOS.\n         */\n        get: function () {\n            return Browser.getValue('isIos', REGX_IOS);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isIos7\", {\n        /**\n         * Property is to get whether the userAgent is Ios7.\n         */\n        get: function () {\n            return Browser.getValue('isIos7', REGX_IOS7);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isAndroid\", {\n        /**\n         * Property is to get whether the userAgent is Android.\n         */\n        get: function () {\n            return Browser.getValue('isAndroid', REGX_ANDROID);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isWebView\", {\n        /**\n         * Property is to identify whether application ran in web view.\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.isWebView)) {\n                window.browserDetails.isWebView = !(isUndefined(window.cordova) && isUndefined(window.PhoneGap)\n                    && isUndefined(window.phonegap) && window.forge !== 'object');\n                return window.browserDetails.isWebView;\n            }\n            return window.browserDetails.isWebView;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"isWindows\", {\n        /**\n         * Property is to get whether the userAgent is Windows.\n         */\n        get: function () {\n            return Browser.getValue('isWindows', REGX_WINDOWS);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"touchStartEvent\", {\n        /**\n         * Property is to get the touch start event. It returns event name based on browser.\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.touchStartEvent)) {\n                return window.browserDetails.touchStartEvent = Browser.getTouchStartEvent();\n            }\n            return window.browserDetails.touchStartEvent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"touchMoveEvent\", {\n        /**\n         * Property is to get the touch move event. It returns event name based on browser.\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.touchMoveEvent)) {\n                return window.browserDetails.touchMoveEvent = Browser.getTouchMoveEvent();\n            }\n            return window.browserDetails.touchMoveEvent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"touchEndEvent\", {\n        /**\n         * Property is to get the touch end event. It returns event name based on browser.\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.touchEndEvent)) {\n                return window.browserDetails.touchEndEvent = Browser.getTouchEndEvent();\n            }\n            return window.browserDetails.touchEndEvent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Browser, \"touchCancelEvent\", {\n        /**\n         * Property is to cancel the touch end event.\n         */\n        get: function () {\n            if (isUndefined(window.browserDetails.touchCancelEvent)) {\n                return window.browserDetails.touchCancelEvent = Browser.getTouchCancelEvent();\n            }\n            return window.browserDetails.touchCancelEvent;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /* istanbul ignore next */\n    Browser.uA = typeof navigator !== 'undefined' ? navigator.userAgent : '';\n    return Browser;\n}());\nexport { Browser };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}