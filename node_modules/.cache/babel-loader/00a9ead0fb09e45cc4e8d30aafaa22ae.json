{"ast":null,"code":"import { withInRange, getPoint, drawSymbol, getElement } from '../../common/utils/helper';\nimport { markerAnimate, TransformToVisible, appendChildElement } from '../../common/utils/helper';\nimport { PathOption, Rect, Size } from '@syncfusion/ej2-svg-base';\nimport { pointRender } from '../../common/model/constants';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * `ScatterSeries` module is used to render the scatter series.\n */\n\nvar ScatterSeries =\n/** @class */\nfunction () {\n  function ScatterSeries() {}\n  /**\n   * Render the scatter series.\n   * @return {void}\n   * @private\n   */\n\n\n  ScatterSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n    // Scatter series DataLabel is not rendered after selecting StackingColumn\n    series.isRectSeries = false;\n    var marker = series.marker;\n    var visiblePoints = this.enableComplexProperty(series);\n    var argsData;\n    var getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n    var startLocation;\n    var redraw = series.chart.redraw;\n\n    for (var _i = 0, visiblePoints_1 = visiblePoints; _i < visiblePoints_1.length; _i++) {\n      var point = visiblePoints_1[_i];\n      startLocation = redraw && point.symbolLocations ? point.symbolLocations[0] : null;\n      point.symbolLocations = [];\n      point.regions = [];\n\n      if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n        argsData = {\n          cancel: false,\n          name: pointRender,\n          series: series,\n          point: point,\n          fill: series.setPointColor(point, series.interior),\n          border: series.setBorderColor(point, {\n            width: series.border.width,\n            color: series.border.color\n          }),\n          height: marker.height,\n          width: marker.width,\n          shape: marker.shape\n        };\n        series.chart.trigger(pointRender, argsData);\n\n        if (!argsData.cancel) {\n          point.symbolLocations.push(getCoordinate(point.xValue, point.yValue, xAxis, yAxis, isInverted, series));\n          point.color = argsData.fill;\n          this.refresh(series, point, argsData, startLocation);\n        } else {\n          point.marker = {\n            visible: true\n          };\n        }\n      }\n    }\n  };\n  /**\n   * To improve the chart performance.\n   * @return {void}\n   * @private\n   */\n\n\n  ScatterSeries.prototype.enableComplexProperty = function (series) {\n    var tempPoints2 = [];\n    var tempPoints = [];\n    var yVisibleRange = series.yAxis.visibleRange;\n    var xVisibleRange = series.xAxis.visibleRange;\n    var areaBounds = series.clipRect;\n    var seriesPoints = series.points;\n    var yTolerance = Math.abs(yVisibleRange.delta / areaBounds.height);\n    var xTolerance = Math.abs(xVisibleRange.delta / areaBounds.width);\n    var prevYValue = seriesPoints[0] && seriesPoints[0].y > yTolerance ? 0 : yTolerance;\n    var prevXValue = seriesPoints[0] && seriesPoints[0].x > xTolerance ? 0 : xTolerance;\n    var yVal = 0;\n    var xVal = 0;\n\n    for (var _i = 0, seriesPoints_1 = seriesPoints; _i < seriesPoints_1.length; _i++) {\n      var currentPoint = seriesPoints_1[_i];\n      currentPoint.symbolLocations = [];\n      yVal = currentPoint.yValue ? currentPoint.yValue : yVisibleRange.min;\n      xVal = currentPoint.xValue ? currentPoint.xValue : xVisibleRange.min;\n\n      if (Math.abs(prevYValue - yVal) >= yTolerance || Math.abs(prevXValue - xVal) >= xTolerance) {\n        tempPoints.push(currentPoint);\n        prevYValue = yVal;\n        prevXValue = xVal;\n      }\n    }\n\n    var currentTempPoint;\n\n    for (var i = 0; i < tempPoints.length; i++) {\n      currentTempPoint = tempPoints[i];\n\n      if (isNullOrUndefined(currentTempPoint.x) || currentTempPoint.x === '') {\n        continue;\n      } else {\n        tempPoints2.push(currentTempPoint);\n      }\n    }\n\n    return tempPoints2;\n  };\n  /**\n   * To append scatter element\n   * @param series\n   * @param point\n   * @param argsData\n   * @param startLocation\n   */\n\n\n  ScatterSeries.prototype.refresh = function (series, point, argsData, startLocation) {\n    var chart = series.chart;\n    var circlePath;\n    var previousPath;\n    var marker = series.marker;\n    var shapeOption = new PathOption(chart.element.id + '_Series_' + series.index + '_Point_' + point.index, argsData.fill, argsData.border.width, argsData.border.color, series.opacity, null);\n\n    if (chart.redraw && getElement(shapeOption.id)) {\n      circlePath = argsData.shape === 'Circle' ? 'c' : '';\n      previousPath = getElement(shapeOption.id).getAttribute('d');\n    }\n\n    appendChildElement(false, series.seriesElement, drawSymbol(point.symbolLocations[0], argsData.shape, new Size(argsData.width, argsData.height), marker.imageUrl, shapeOption, point.x.toString() + ':' + point.yValue.toString(), series.chart.svgRenderer, series.clipRect), chart.redraw, true, circlePath + 'x', circlePath + 'y', startLocation, previousPath);\n    point.regions.push(new Rect(point.symbolLocations[0].x - marker.width, point.symbolLocations[0].y - marker.height, 2 * marker.width, 2 * marker.height));\n    point.marker = {\n      border: argsData.border,\n      fill: argsData.fill,\n      height: argsData.height,\n      visible: true,\n      width: argsData.width,\n      shape: argsData.shape\n    };\n  };\n  /**\n   * Animates the series.\n   * @param  {Series} series - Defines the series to animate.\n   * @return {void}\n   */\n\n\n  ScatterSeries.prototype.doAnimation = function (series) {\n    var duration = series.animation.duration;\n    var delay = series.animation.delay;\n    var rectElements = series.seriesElement.childNodes;\n    var count = 1;\n\n    for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n      var point = _a[_i];\n\n      if (!point.symbolLocations.length || !rectElements[count]) {\n        continue;\n      }\n\n      markerAnimate(rectElements[count], delay, duration, series, point.index, point.symbolLocations[0], false);\n      count++;\n    }\n  };\n  /**\n   * Get module name.\n   */\n\n\n  ScatterSeries.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the series\n     */\n    return 'ScatterSeries';\n  };\n  /**\n   * To destroy the scatter.\n   * @return {void}\n   */\n\n\n  ScatterSeries.prototype.destroy = function (chart) {\n    /**\n     * Destroy method calling here\n     */\n  };\n\n  return ScatterSeries;\n}();\n\nexport { ScatterSeries };","map":{"version":3,"names":["withInRange","getPoint","drawSymbol","getElement","markerAnimate","TransformToVisible","appendChildElement","PathOption","Rect","Size","pointRender","isNullOrUndefined","ScatterSeries","prototype","render","series","xAxis","yAxis","isInverted","isRectSeries","marker","visiblePoints","enableComplexProperty","argsData","getCoordinate","chart","chartAreaType","startLocation","redraw","_i","visiblePoints_1","length","point","symbolLocations","regions","visible","index","cancel","name","fill","setPointColor","interior","border","setBorderColor","width","color","height","shape","trigger","push","xValue","yValue","refresh","tempPoints2","tempPoints","yVisibleRange","visibleRange","xVisibleRange","areaBounds","clipRect","seriesPoints","points","yTolerance","Math","abs","delta","xTolerance","prevYValue","y","prevXValue","x","yVal","xVal","seriesPoints_1","currentPoint","min","currentTempPoint","i","circlePath","previousPath","shapeOption","element","id","opacity","getAttribute","seriesElement","imageUrl","toString","svgRenderer","doAnimation","duration","animation","delay","rectElements","childNodes","count","_a","getModuleName","destroy"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-charts/src/chart/series/scatter-series.js"],"sourcesContent":["import { withInRange, getPoint, drawSymbol, getElement } from '../../common/utils/helper';\nimport { markerAnimate, TransformToVisible, appendChildElement } from '../../common/utils/helper';\nimport { PathOption, Rect, Size } from '@syncfusion/ej2-svg-base';\nimport { pointRender } from '../../common/model/constants';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * `ScatterSeries` module is used to render the scatter series.\n */\nvar ScatterSeries = /** @class */ (function () {\n    function ScatterSeries() {\n    }\n    /**\n     * Render the scatter series.\n     * @return {void}\n     * @private\n     */\n    ScatterSeries.prototype.render = function (series, xAxis, yAxis, isInverted) {\n        // Scatter series DataLabel is not rendered after selecting StackingColumn\n        series.isRectSeries = false;\n        var marker = series.marker;\n        var visiblePoints = this.enableComplexProperty(series);\n        var argsData;\n        var getCoordinate = series.chart.chartAreaType === 'PolarRadar' ? TransformToVisible : getPoint;\n        var startLocation;\n        var redraw = series.chart.redraw;\n        for (var _i = 0, visiblePoints_1 = visiblePoints; _i < visiblePoints_1.length; _i++) {\n            var point = visiblePoints_1[_i];\n            startLocation = (redraw && point.symbolLocations) ? point.symbolLocations[0] : null;\n            point.symbolLocations = [];\n            point.regions = [];\n            if (point.visible && withInRange(visiblePoints[point.index - 1], point, visiblePoints[point.index + 1], series)) {\n                argsData = {\n                    cancel: false, name: pointRender, series: series, point: point,\n                    fill: series.setPointColor(point, series.interior),\n                    border: series.setBorderColor(point, { width: series.border.width, color: series.border.color }),\n                    height: marker.height, width: marker.width, shape: marker.shape\n                };\n                series.chart.trigger(pointRender, argsData);\n                if (!argsData.cancel) {\n                    point.symbolLocations.push(getCoordinate(point.xValue, point.yValue, xAxis, yAxis, isInverted, series));\n                    point.color = argsData.fill;\n                    this.refresh(series, point, argsData, startLocation);\n                }\n                else {\n                    point.marker = { visible: true };\n                }\n            }\n        }\n    };\n    /**\n     * To improve the chart performance.\n     * @return {void}\n     * @private\n     */\n    ScatterSeries.prototype.enableComplexProperty = function (series) {\n        var tempPoints2 = [];\n        var tempPoints = [];\n        var yVisibleRange = series.yAxis.visibleRange;\n        var xVisibleRange = series.xAxis.visibleRange;\n        var areaBounds = series.clipRect;\n        var seriesPoints = series.points;\n        var yTolerance = Math.abs(yVisibleRange.delta / areaBounds.height);\n        var xTolerance = Math.abs(xVisibleRange.delta / areaBounds.width);\n        var prevYValue = (seriesPoints[0] && seriesPoints[0].y > yTolerance) ? 0 : yTolerance;\n        var prevXValue = (seriesPoints[0] && seriesPoints[0].x > xTolerance) ? 0 : xTolerance;\n        var yVal = 0;\n        var xVal = 0;\n        for (var _i = 0, seriesPoints_1 = seriesPoints; _i < seriesPoints_1.length; _i++) {\n            var currentPoint = seriesPoints_1[_i];\n            currentPoint.symbolLocations = [];\n            yVal = currentPoint.yValue ? currentPoint.yValue : yVisibleRange.min;\n            xVal = currentPoint.xValue ? currentPoint.xValue : xVisibleRange.min;\n            if (Math.abs(prevYValue - yVal) >= yTolerance || Math.abs(prevXValue - xVal) >= xTolerance) {\n                tempPoints.push(currentPoint);\n                prevYValue = yVal;\n                prevXValue = xVal;\n            }\n        }\n        var currentTempPoint;\n        for (var i = 0; i < tempPoints.length; i++) {\n            currentTempPoint = tempPoints[i];\n            if (isNullOrUndefined(currentTempPoint.x) || currentTempPoint.x === '') {\n                continue;\n            }\n            else {\n                tempPoints2.push(currentTempPoint);\n            }\n        }\n        return tempPoints2;\n    };\n    /**\n     * To append scatter element\n     * @param series\n     * @param point\n     * @param argsData\n     * @param startLocation\n     */\n    ScatterSeries.prototype.refresh = function (series, point, argsData, startLocation) {\n        var chart = series.chart;\n        var circlePath;\n        var previousPath;\n        var marker = series.marker;\n        var shapeOption = new PathOption(chart.element.id + '_Series_' + series.index + '_Point_' + point.index, argsData.fill, argsData.border.width, argsData.border.color, series.opacity, null);\n        if (chart.redraw && getElement(shapeOption.id)) {\n            circlePath = argsData.shape === 'Circle' ? 'c' : '';\n            previousPath = getElement(shapeOption.id).getAttribute('d');\n        }\n        appendChildElement(false, series.seriesElement, drawSymbol(point.symbolLocations[0], argsData.shape, new Size(argsData.width, argsData.height), marker.imageUrl, shapeOption, point.x.toString() + ':' + point.yValue.toString(), series.chart.svgRenderer, series.clipRect), chart.redraw, true, circlePath + 'x', circlePath + 'y', startLocation, previousPath);\n        point.regions.push(new Rect(point.symbolLocations[0].x - marker.width, point.symbolLocations[0].y - marker.height, 2 * marker.width, 2 * marker.height));\n        point.marker = {\n            border: argsData.border, fill: argsData.fill,\n            height: argsData.height, visible: true,\n            width: argsData.width, shape: argsData.shape\n        };\n    };\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    ScatterSeries.prototype.doAnimation = function (series) {\n        var duration = series.animation.duration;\n        var delay = series.animation.delay;\n        var rectElements = series.seriesElement.childNodes;\n        var count = 1;\n        for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n            var point = _a[_i];\n            if (!point.symbolLocations.length || !rectElements[count]) {\n                continue;\n            }\n            markerAnimate(rectElements[count], delay, duration, series, point.index, point.symbolLocations[0], false);\n            count++;\n        }\n    };\n    /**\n     * Get module name.\n     */\n    ScatterSeries.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the series\n         */\n        return 'ScatterSeries';\n    };\n    /**\n     * To destroy the scatter.\n     * @return {void}\n     */\n    ScatterSeries.prototype.destroy = function (chart) {\n        /**\n         * Destroy method calling here\n         */\n    };\n    return ScatterSeries;\n}());\nexport { ScatterSeries };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}