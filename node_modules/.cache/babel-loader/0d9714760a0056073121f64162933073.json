{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { withInRange, pathAnimation, getElement } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { ColumnBase } from './column-base';\n/**\n * `CandleSeries` module is used to render the candle series.\n */\n\nvar CandleSeries =\n/** @class */\nfunction (_super) {\n  __extends(CandleSeries, _super);\n\n  function CandleSeries() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Render Candle series.\n   * @return {void}\n   * @private\n   */\n\n\n  CandleSeries.prototype.render = function (series) {\n    var sideBySideInfo = this.getSideBySideInfo(series);\n    var argsData;\n    var borderWidth = Math.max(series.border.width, 1);\n\n    for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n      var point = _a[_i];\n      var direction = '';\n      var centerRegion = void 0;\n      var tickRegion = void 0;\n      var midPoint = void 0;\n      midPoint = (sideBySideInfo.start + sideBySideInfo.end) / 2; //initializing after zooming and also normal initialization\n\n      point.regions = [];\n      point.symbolLocations = [];\n\n      if (point.visible && withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n        //region to cover the top and bottom ticks\n        tickRegion = this.getRectangle(point.xValue + sideBySideInfo.median, Math.max(point.high, point.low), point.xValue + sideBySideInfo.median, Math.min(point.high, point.low), series);\n\n        if (!series.chart.requireInvertedAxis) {\n          tickRegion.x -= borderWidth / 2;\n          tickRegion.width = borderWidth;\n        } else {\n          tickRegion.y -= borderWidth / 2;\n          tickRegion.height = borderWidth;\n        } //get middleRect\n\n\n        centerRegion = this.getRectangle(point.xValue + sideBySideInfo.start, Math.max(point.open, point.close), point.xValue + sideBySideInfo.end, Math.min(point.open, point.close), series);\n        direction = this.getPathString(tickRegion, centerRegion, series);\n        argsData = this.triggerPointRenderEvent(series, point);\n\n        if (!argsData.cancel) {\n          this.drawCandle(series, point, centerRegion, argsData, direction);\n          this.updateSymbolLocation(point, tickRegion, series);\n          this.updateSymbolLocation(point, centerRegion, series);\n        }\n      }\n    }\n  };\n  /**\n   * Trigger point rendering event\n   */\n\n\n  CandleSeries.prototype.triggerPointRenderEvent = function (series, point) {\n    var fill;\n    fill = this.getCandleColor(point, series);\n    var border = {\n      color: series.border.color,\n      width: Math.max(series.border.width, 1)\n    };\n    return this.triggerEvent(series, point, fill, border);\n  };\n  /**\n   * Find the color of the candle\n   * @param series\n   * @private\n   */\n\n\n  CandleSeries.prototype.getCandleColor = function (point, series) {\n    var currentPoint = point;\n    var previousPoint = series.points[point.index - 1];\n\n    if (series.enableSolidCandles === false) {\n      if (!previousPoint) {\n        return series.bearFillColor;\n      } else {\n        return previousPoint.close > point.close ? series.bullFillColor : series.bearFillColor;\n      }\n    } else {\n      return point.open > point.close ? series.bullFillColor : series.bearFillColor;\n    }\n  };\n  /**\n   * Finds the path of the candle shape\n   * @param Series\n   * @private\n   */\n\n\n  CandleSeries.prototype.getPathString = function (topRect, midRect, series) {\n    var direction = '';\n    var width = series.chart.requireInvertedAxis ? topRect.height : topRect.width;\n    var center = series.chart.requireInvertedAxis ? topRect.y + topRect.height / 2 : topRect.x + topRect.width / 2; //tick 1 segment\n\n    direction += !series.chart.requireInvertedAxis ? 'M' + ' ' + center + ' ' + topRect.y + ' ' + 'L' + ' ' + center + ' ' + midRect.y : 'M' + ' ' + topRect.x + ' ' + center + ' ' + 'L' + ' ' + midRect.x + ' ' + center;\n    direction = direction.concat(' M' + ' ' + midRect.x + ' ' + midRect.y + ' ' + 'L' + ' ' + (midRect.x + midRect.width) + ' ' + midRect.y + ' ' + 'L' + ' ' + (midRect.x + midRect.width) + ' ' + (midRect.y + midRect.height) + ' ' + 'L' + ' ' + midRect.x + ' ' + (midRect.y + midRect.height) + ' ' + 'Z');\n    direction += !series.chart.requireInvertedAxis ? ' M' + ' ' + center + ' ' + (midRect.y + midRect.height) + ' ' + 'L' + ' ' + center + ' ' + (topRect.y + topRect.height) : ' M' + ' ' + (midRect.x + midRect.width) + ' ' + center + ' ' + 'L' + ' ' + (topRect.x + topRect.width) + ' ' + center;\n    return direction;\n  };\n  /**\n   * Draws the candle shape\n   * @param series\n   * @private\n   */\n\n\n  CandleSeries.prototype.drawCandle = function (series, point, rect, argsData, direction) {\n    var check = series.chart.requireInvertedAxis ? rect.height : rect.width;\n\n    if (check <= 0) {\n      return null;\n    }\n\n    var fill = !series.enableSolidCandles ? point.open > point.close ? argsData.fill : 'transparent' : argsData.fill;\n    argsData.border.color = argsData.fill;\n    var options = new PathOption(series.chart.element.id + '_Series_' + series.index + '_Point_' + point.index, fill, argsData.border.width, argsData.border.color, series.opacity, series.dashArray, direction);\n    var element = getElement(options.id);\n    var previousDirection = element ? element.getAttribute('d') : null;\n    var candleElement = series.chart.renderer.drawPath(options, new Int32Array([series.clipRect.x, series.clipRect.y]));\n    candleElement.setAttribute('aria-label', point.x.toString() + ':' + point.high.toString() + ':' + point.low.toString() + ':' + point.close.toString() + ':' + point.open.toString());\n\n    if (!series.chart.enableCanvas) {\n      series.seriesElement.appendChild(candleElement);\n    }\n\n    pathAnimation(element, direction, series.chart.redraw, previousDirection);\n  };\n  /**\n   * Animates the series.\n   * @param  {Series} series - Defines the series to animate.\n   * @return {void}\n   */\n\n\n  CandleSeries.prototype.doAnimation = function (series) {\n    this.animate(series);\n  };\n  /**\n   * Get module name.\n   */\n\n\n  CandleSeries.prototype.getModuleName = function () {\n    return 'CandleSeries';\n    /**\n     * return the module name\n     */\n  };\n  /**\n   * To destroy the candle series.\n   * @return {void}\n   * @private\n   */\n\n\n  CandleSeries.prototype.destroy = function (chart) {\n    /**\n     * Destroys the candle series.\n     */\n  };\n\n  return CandleSeries;\n}(ColumnBase);\n\nexport { CandleSeries };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","withInRange","pathAnimation","getElement","PathOption","ColumnBase","CandleSeries","_super","apply","arguments","render","series","sideBySideInfo","getSideBySideInfo","argsData","borderWidth","Math","max","border","width","_i","_a","points","length","point","direction","centerRegion","tickRegion","midPoint","start","end","regions","symbolLocations","visible","index","getRectangle","xValue","median","high","low","min","chart","requireInvertedAxis","x","y","height","open","close","getPathString","triggerPointRenderEvent","cancel","drawCandle","updateSymbolLocation","fill","getCandleColor","color","triggerEvent","currentPoint","previousPoint","enableSolidCandles","bearFillColor","bullFillColor","topRect","midRect","center","concat","rect","check","options","element","id","opacity","dashArray","previousDirection","getAttribute","candleElement","renderer","drawPath","Int32Array","clipRect","setAttribute","toString","enableCanvas","seriesElement","appendChild","redraw","doAnimation","animate","getModuleName","destroy"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-charts/src/chart/series/candle-series.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { withInRange, pathAnimation, getElement } from '../../common/utils/helper';\nimport { PathOption } from '@syncfusion/ej2-svg-base';\nimport { ColumnBase } from './column-base';\n/**\n * `CandleSeries` module is used to render the candle series.\n */\nvar CandleSeries = /** @class */ (function (_super) {\n    __extends(CandleSeries, _super);\n    function CandleSeries() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Render Candle series.\n     * @return {void}\n     * @private\n     */\n    CandleSeries.prototype.render = function (series) {\n        var sideBySideInfo = this.getSideBySideInfo(series);\n        var argsData;\n        var borderWidth = Math.max(series.border.width, 1);\n        for (var _i = 0, _a = series.points; _i < _a.length; _i++) {\n            var point = _a[_i];\n            var direction = '';\n            var centerRegion = void 0;\n            var tickRegion = void 0;\n            var midPoint = void 0;\n            midPoint = (sideBySideInfo.start + sideBySideInfo.end) / 2;\n            //initializing after zooming and also normal initialization\n            point.regions = [];\n            point.symbolLocations = [];\n            if (point.visible && withInRange(series.points[point.index - 1], point, series.points[point.index + 1], series)) {\n                //region to cover the top and bottom ticks\n                tickRegion = this.getRectangle((point.xValue + sideBySideInfo.median), Math.max(point.high, point.low), (point.xValue + sideBySideInfo.median), Math.min(point.high, point.low), series);\n                if (!series.chart.requireInvertedAxis) {\n                    tickRegion.x -= borderWidth / 2;\n                    tickRegion.width = borderWidth;\n                }\n                else {\n                    tickRegion.y -= borderWidth / 2;\n                    tickRegion.height = borderWidth;\n                }\n                //get middleRect\n                centerRegion = this.getRectangle((point.xValue + sideBySideInfo.start), Math.max(point.open, point.close), (point.xValue + sideBySideInfo.end), Math.min(point.open, point.close), series);\n                direction = this.getPathString(tickRegion, centerRegion, series);\n                argsData = this.triggerPointRenderEvent(series, point);\n                if (!argsData.cancel) {\n                    this.drawCandle(series, point, centerRegion, argsData, direction);\n                    this.updateSymbolLocation(point, tickRegion, series);\n                    this.updateSymbolLocation(point, centerRegion, series);\n                }\n            }\n        }\n    };\n    /**\n     * Trigger point rendering event\n     */\n    CandleSeries.prototype.triggerPointRenderEvent = function (series, point) {\n        var fill;\n        fill = this.getCandleColor(point, series);\n        var border = { color: series.border.color, width: Math.max(series.border.width, 1) };\n        return this.triggerEvent(series, point, fill, border);\n    };\n    /**\n     * Find the color of the candle\n     * @param series\n     * @private\n     */\n    CandleSeries.prototype.getCandleColor = function (point, series) {\n        var currentPoint = point;\n        var previousPoint = series.points[point.index - 1];\n        if (series.enableSolidCandles === false) {\n            if (!previousPoint) {\n                return series.bearFillColor;\n            }\n            else {\n                return previousPoint.close > point.close ? series.bullFillColor :\n                    series.bearFillColor;\n            }\n        }\n        else {\n            return point.open > point.close ? series.bullFillColor :\n                series.bearFillColor;\n        }\n    };\n    /**\n     * Finds the path of the candle shape\n     * @param Series\n     * @private\n     */\n    CandleSeries.prototype.getPathString = function (topRect, midRect, series) {\n        var direction = '';\n        var width = series.chart.requireInvertedAxis ? topRect.height : topRect.width;\n        var center = series.chart.requireInvertedAxis ? topRect.y + topRect.height / 2 :\n            topRect.x + topRect.width / 2;\n        //tick 1 segment\n        direction += !series.chart.requireInvertedAxis ?\n            'M' + ' ' + (center) + ' ' + (topRect.y) + ' ' + 'L' + ' ' + (center) + ' ' + midRect.y :\n            'M' + ' ' + (topRect.x) + ' ' + (center) + ' ' + 'L' + ' ' + (midRect.x) + ' ' + center;\n        direction = direction.concat(' M' + ' ' + (midRect.x) + ' ' + (midRect.y) + ' ' +\n            'L' + ' ' + (midRect.x + midRect.width) + ' ' + (midRect.y) + ' ' +\n            'L' + ' ' + (midRect.x + midRect.width) + ' ' +\n            (midRect.y + midRect.height) + ' ' +\n            'L' + ' ' + (midRect.x) + ' ' + (midRect.y + midRect.height) +\n            ' ' + 'Z');\n        direction += !series.chart.requireInvertedAxis ?\n            ' M' + ' ' + (center) + ' ' + (midRect.y + midRect.height) + ' ' + 'L' + ' ' + (center) + ' ' + (topRect.y +\n                topRect.height) :\n            ' M' + ' ' + (midRect.x + midRect.width) + ' ' + (center) + ' ' + 'L' + ' ' +\n                (topRect.x + topRect.width) + ' ' + center;\n        return direction;\n    };\n    /**\n     * Draws the candle shape\n     * @param series\n     * @private\n     */\n    CandleSeries.prototype.drawCandle = function (series, point, rect, argsData, direction) {\n        var check = series.chart.requireInvertedAxis ? rect.height : rect.width;\n        if (check <= 0) {\n            return null;\n        }\n        var fill = !series.enableSolidCandles ?\n            (point.open > point.close ? argsData.fill : 'transparent') : argsData.fill;\n        argsData.border.color = argsData.fill;\n        var options = new PathOption(series.chart.element.id + '_Series_' + series.index + '_Point_' + point.index, fill, argsData.border.width, argsData.border.color, series.opacity, series.dashArray, direction);\n        var element = getElement(options.id);\n        var previousDirection = element ? element.getAttribute('d') : null;\n        var candleElement = series.chart.renderer.drawPath(options, new Int32Array([series.clipRect.x, series.clipRect.y]));\n        candleElement.setAttribute('aria-label', point.x.toString() + ':' + point.high.toString()\n            + ':' + point.low.toString() + ':' + point.close.toString() + ':' + point.open.toString());\n        if (!series.chart.enableCanvas) {\n            series.seriesElement.appendChild(candleElement);\n        }\n        pathAnimation(element, direction, series.chart.redraw, previousDirection);\n    };\n    /**\n     * Animates the series.\n     * @param  {Series} series - Defines the series to animate.\n     * @return {void}\n     */\n    CandleSeries.prototype.doAnimation = function (series) {\n        this.animate(series);\n    };\n    /**\n     * Get module name.\n     */\n    CandleSeries.prototype.getModuleName = function () {\n        return 'CandleSeries';\n        /**\n         * return the module name\n         */\n    };\n    /**\n     * To destroy the candle series.\n     * @return {void}\n     * @private\n     */\n    CandleSeries.prototype.destroy = function (chart) {\n        /**\n         * Destroys the candle series.\n         */\n    };\n    return CandleSeries;\n}(ColumnBase));\nexport { CandleSeries };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}