{"ast":null,"code":"const initialData = {\n  list: []\n};\n\nconst todoReducers = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialData;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"ADD_TODO\":\n      const {\n        id,\n        data\n      } = action.payload; // console.log(action);\n\n      return { ...state,\n        list: [...state.list, {\n          id: id,\n          data: data\n        }]\n      };\n\n    case \"DELETE_TODO\":\n      const newList = state.list.filter(elem => elem.id !== action.id);\n      return { ...state,\n        list: newList\n      };\n\n    case \"REMOVE_TODO\":\n      return { ...state,\n        list: []\n      };\n\n    default:\n      return state;\n\n    /* case \"EDIT_TODO\" : \r\n    const newEditItem = state.list.find((elem) => elem.id === id)\r\n    return{\r\n        ...state,\r\n    list: newEditItem \r\n    } \r\n    ////diffrent type\r\n    case \"EDIT TODO\" :\r\n    const editItem = (id) => {\r\n        let newEditItem = state.list.find((elem) => {\r\n            return elem.id === action.id\r\n        }); \r\n        console.log(newEditItem);\r\n    } */\n  }\n};\n\nexport default todoReducers;","map":{"version":3,"names":["initialData","list","todoReducers","state","action","type","id","data","payload","newList","filter","elem"],"sources":["D:/Theme/package/src/store/reducers/Reducers.js"],"sourcesContent":["const initialData = {\r\n\tlist : []\r\n}\r\nconst todoReducers = (state = initialData, action) =>{\r\n\tswitch(action.type){\r\n\t\tcase \"ADD_TODO\" : \r\n\t\tconst {id, data} = action.payload;\r\n\t\t // console.log(action);\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tlist: [\r\n\t\t\t\t...state.list,\r\n\t\t\t\t{\r\n\t\t\t\t\tid: id,\r\n\t\t\t\t\tdata: data,\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t\tcase \"DELETE_TODO\" : \r\n\t\tconst newList = state.list.filter((elem) => elem.id !== action.id)\r\n\t\t\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tlist: newList \r\n\t\t}\r\n\t\t\r\n\t\tcase \"REMOVE_TODO\" : return{\r\n\t\t\t...state,\r\n\t\t\tlist: []\r\n\t\t}\r\n\t\tdefault: return state;\r\n        \r\n        /* case \"EDIT_TODO\" : \r\n        const newEditItem = state.list.find((elem) => elem.id === id)\r\n        return{\r\n            ...state,\r\n\t\t\tlist: newEditItem \r\n        } \r\n        ////diffrent type\r\n        case \"EDIT TODO\" :\r\n        const editItem = (id) => {\r\n            let newEditItem = state.list.find((elem) => {\r\n                return elem.id === action.id\r\n            }); \r\n            console.log(newEditItem);\r\n        } */   \r\n\t}\r\n}\r\nexport default todoReducers;"],"mappings":"AAAA,MAAMA,WAAW,GAAG;EACnBC,IAAI,EAAG;AADY,CAApB;;AAGA,MAAMC,YAAY,GAAG,YAAgC;EAAA,IAA/BC,KAA+B,uEAAvBH,WAAuB;EAAA,IAAVI,MAAU;;EACpD,QAAOA,MAAM,CAACC,IAAd;IACC,KAAK,UAAL;MACA,MAAM;QAACC,EAAD;QAAKC;MAAL,IAAaH,MAAM,CAACI,OAA1B,CADA,CAEC;;MACD,OAAM,EACL,GAAGL,KADE;QAELF,IAAI,EAAE,CACL,GAAGE,KAAK,CAACF,IADJ,EAEL;UACCK,EAAE,EAAEA,EADL;UAECC,IAAI,EAAEA;QAFP,CAFK;MAFD,CAAN;;IAUA,KAAK,aAAL;MACA,MAAME,OAAO,GAAGN,KAAK,CAACF,IAAN,CAAWS,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACL,EAAL,KAAYF,MAAM,CAACE,EAA/C,CAAhB;MAEA,OAAM,EACL,GAAGH,KADE;QAELF,IAAI,EAAEQ;MAFD,CAAN;;IAKA,KAAK,aAAL;MAAqB,OAAM,EAC1B,GAAGN,KADuB;QAE1BF,IAAI,EAAE;MAFoB,CAAN;;IAIrB;MAAS,OAAOE,KAAP;;IAEH;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAzCC;AA2CA,CA5CD;;AA6CA,eAAeD,YAAf"},"metadata":{},"sourceType":"module"}