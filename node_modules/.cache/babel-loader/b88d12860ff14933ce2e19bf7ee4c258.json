{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { getActualDesiredIntervalsCount, triggerLabelRender } from '../../common/utils/helper';\nimport { DoubleRange } from '../utils/double-range';\nimport { withIn } from '../../common/utils/helper';\nimport { extend, getValue } from '@syncfusion/ej2-base';\nimport { NiceInterval } from '../axis/axis-helper';\n/**\n * `Category` module is used to render category axis.\n */\n\nvar Category =\n/** @class */\nfunction (_super) {\n  __extends(Category, _super);\n  /**\n   * Constructor for the category module.\n   * @private\n   */\n\n\n  function Category(chart) {\n    return _super.call(this, chart) || this;\n  }\n  /**\n   * The function to calculate the range and labels for the axis.\n   * @return {void}\n   */\n\n\n  Category.prototype.calculateRangeAndInterval = function (size, axis) {\n    this.calculateRange(axis, size);\n    this.getActualRange(axis, size);\n    this.applyRangePadding(axis, size);\n    this.calculateVisibleLabels(axis);\n  };\n  /**\n   * Actual Range for the axis.\n   * @private\n   */\n\n\n  Category.prototype.getActualRange = function (axis, size) {\n    this.initializeDoubleRange(axis); // axis.doubleRange = new DoubleRange(<number>this.min, <number>this.max);\n\n    axis.actualRange = {};\n\n    if (!axis.interval) {\n      axis.actualRange.interval = Math.max(1, Math.floor(axis.doubleRange.delta / getActualDesiredIntervalsCount(size, axis)));\n    } else {\n      axis.actualRange.interval = Math.ceil(axis.interval);\n    }\n\n    axis.actualRange.min = axis.doubleRange.start;\n    axis.actualRange.max = axis.doubleRange.end;\n    axis.actualRange.delta = axis.doubleRange.delta;\n  };\n  /**\n   * Padding for the axis.\n   * @private\n   */\n\n\n  Category.prototype.applyRangePadding = function (axis, size) {\n    var ticks = axis.labelPlacement === 'BetweenTicks' && this.chart.chartAreaType !== 'PolarRadar' ? 0.5 : 0;\n\n    if (ticks > 0) {\n      axis.actualRange.min -= ticks;\n      axis.actualRange.max += ticks;\n    } else {\n      axis.actualRange.max += axis.actualRange.max ? 0 : 0.5;\n    }\n\n    axis.doubleRange = new DoubleRange(axis.actualRange.min, axis.actualRange.max);\n    axis.actualRange.delta = axis.doubleRange.delta;\n    this.calculateVisibleRange(size, axis);\n  };\n  /**\n   * Calculate label for the axis.\n   * @private\n   */\n\n\n  Category.prototype.calculateVisibleLabels = function (axis) {\n    /*! Generate axis labels */\n    axis.visibleLabels = [];\n    var tempInterval = Math.ceil(axis.visibleRange.min);\n    var labelStyle;\n\n    if (axis.zoomFactor < 1 || axis.zoomPosition > 0) {\n      tempInterval = axis.visibleRange.min - axis.visibleRange.min % axis.visibleRange.interval;\n    }\n\n    var position;\n    axis.startLabel = axis.labels[Math.round(axis.visibleRange.min)];\n    axis.endLabel = axis.labels[Math.floor(axis.visibleRange.max)];\n\n    for (; tempInterval <= axis.visibleRange.max; tempInterval += axis.visibleRange.interval) {\n      labelStyle = extend({}, getValue('properties', axis.labelStyle), null, true);\n\n      if (withIn(tempInterval, axis.visibleRange) && axis.labels.length > 0) {\n        position = Math.round(tempInterval);\n        triggerLabelRender(this.chart, position, axis.labels[position] ? axis.labels[position].toString() : position.toString(), labelStyle, axis);\n      }\n    }\n\n    if (axis.getMaxLabelWidth) {\n      axis.getMaxLabelWidth(this.chart);\n    }\n  };\n  /**\n   * Get module name\n   */\n\n\n  Category.prototype.getModuleName = function () {\n    /**\n     * Returns the module name\n     */\n    return 'Category';\n  };\n  /**\n   * To destroy the category axis.\n   * @return {void}\n   * @private\n   */\n\n\n  Category.prototype.destroy = function (chart) {\n    /**\n     * Destroy method performed here\n     */\n  };\n\n  return Category;\n}(NiceInterval);\n\nexport { Category };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","getActualDesiredIntervalsCount","triggerLabelRender","DoubleRange","withIn","extend","getValue","NiceInterval","Category","_super","chart","call","calculateRangeAndInterval","size","axis","calculateRange","getActualRange","applyRangePadding","calculateVisibleLabels","initializeDoubleRange","actualRange","interval","Math","max","floor","doubleRange","delta","ceil","min","start","end","ticks","labelPlacement","chartAreaType","calculateVisibleRange","visibleLabels","tempInterval","visibleRange","labelStyle","zoomFactor","zoomPosition","position","startLabel","labels","round","endLabel","length","toString","getMaxLabelWidth","getModuleName","destroy"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-charts/src/chart/axis/category-axis.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { getActualDesiredIntervalsCount, triggerLabelRender } from '../../common/utils/helper';\nimport { DoubleRange } from '../utils/double-range';\nimport { withIn } from '../../common/utils/helper';\nimport { extend, getValue } from '@syncfusion/ej2-base';\nimport { NiceInterval } from '../axis/axis-helper';\n/**\n * `Category` module is used to render category axis.\n */\nvar Category = /** @class */ (function (_super) {\n    __extends(Category, _super);\n    /**\n     * Constructor for the category module.\n     * @private\n     */\n    function Category(chart) {\n        return _super.call(this, chart) || this;\n    }\n    /**\n     * The function to calculate the range and labels for the axis.\n     * @return {void}\n     */\n    Category.prototype.calculateRangeAndInterval = function (size, axis) {\n        this.calculateRange(axis, size);\n        this.getActualRange(axis, size);\n        this.applyRangePadding(axis, size);\n        this.calculateVisibleLabels(axis);\n    };\n    /**\n     * Actual Range for the axis.\n     * @private\n     */\n    Category.prototype.getActualRange = function (axis, size) {\n        this.initializeDoubleRange(axis);\n        // axis.doubleRange = new DoubleRange(<number>this.min, <number>this.max);\n        axis.actualRange = {};\n        if (!axis.interval) {\n            axis.actualRange.interval = Math.max(1, Math.floor(axis.doubleRange.delta / getActualDesiredIntervalsCount(size, axis)));\n        }\n        else {\n            axis.actualRange.interval = Math.ceil(axis.interval);\n        }\n        axis.actualRange.min = axis.doubleRange.start;\n        axis.actualRange.max = axis.doubleRange.end;\n        axis.actualRange.delta = axis.doubleRange.delta;\n    };\n    /**\n     * Padding for the axis.\n     * @private\n     */\n    Category.prototype.applyRangePadding = function (axis, size) {\n        var ticks = (axis.labelPlacement === 'BetweenTicks' && this.chart.chartAreaType !== 'PolarRadar') ? 0.5 : 0;\n        if (ticks > 0) {\n            axis.actualRange.min -= ticks;\n            axis.actualRange.max += ticks;\n        }\n        else {\n            axis.actualRange.max += axis.actualRange.max ? 0 : 0.5;\n        }\n        axis.doubleRange = new DoubleRange(axis.actualRange.min, axis.actualRange.max);\n        axis.actualRange.delta = axis.doubleRange.delta;\n        this.calculateVisibleRange(size, axis);\n    };\n    /**\n     * Calculate label for the axis.\n     * @private\n     */\n    Category.prototype.calculateVisibleLabels = function (axis) {\n        /*! Generate axis labels */\n        axis.visibleLabels = [];\n        var tempInterval = Math.ceil(axis.visibleRange.min);\n        var labelStyle;\n        if (axis.zoomFactor < 1 || axis.zoomPosition > 0) {\n            tempInterval = axis.visibleRange.min - (axis.visibleRange.min % axis.visibleRange.interval);\n        }\n        var position;\n        axis.startLabel = axis.labels[Math.round(axis.visibleRange.min)];\n        axis.endLabel = axis.labels[Math.floor(axis.visibleRange.max)];\n        for (; tempInterval <= axis.visibleRange.max; tempInterval += axis.visibleRange.interval) {\n            labelStyle = (extend({}, getValue('properties', axis.labelStyle), null, true));\n            if (withIn(tempInterval, axis.visibleRange) && axis.labels.length > 0) {\n                position = Math.round(tempInterval);\n                triggerLabelRender(this.chart, position, axis.labels[position] ? axis.labels[position].toString() : position.toString(), labelStyle, axis);\n            }\n        }\n        if (axis.getMaxLabelWidth) {\n            axis.getMaxLabelWidth(this.chart);\n        }\n    };\n    /**\n     * Get module name\n     */\n    Category.prototype.getModuleName = function () {\n        /**\n         * Returns the module name\n         */\n        return 'Category';\n    };\n    /**\n     * To destroy the category axis.\n     * @return {void}\n     * @private\n     */\n    Category.prototype.destroy = function (chart) {\n        /**\n         * Destroy method performed here\n         */\n    };\n    return Category;\n}(NiceInterval));\nexport { Category };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}