{"ast":null,"code":"import { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach, removeClass, addClass, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { isBlazor, debounce } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar listElementCount = 1.5;\nvar windowElementCount = 3;\n\nvar Virtualization =\n/** @class */\nfunction () {\n  function Virtualization(instance) {\n    this.elementDifference = 0;\n    this.listViewInstance = instance;\n  }\n  /**\n   * For internal use only.\n   * @private\n   */\n\n\n  Virtualization.prototype.isNgTemplate = function () {\n    return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n  };\n  /**\n   * For internal use only.\n   * @private\n   */\n\n\n  Virtualization.prototype.uiVirtualization = function () {\n    this.wireScrollEvent(false);\n    var curViewDS = this.listViewInstance.curViewDS;\n    var firstDs = curViewDS.slice(0, 1);\n\n    if (!(isBlazor() || this.listViewInstance.isServerRendered)) {\n      this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption, null, this);\n      this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', {\n        className: classNames.content\n      });\n      this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n      this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n    }\n\n    this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n    this.expectedDomItemCount = this.ValidateItemCount(10000);\n    this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n    this.uiFirstIndex = 0;\n    this.uiLastIndex = this.domItemCount - 1;\n    var otherDs = curViewDS.slice(1, this.domItemCount);\n\n    if (!(isBlazor() || this.listViewInstance.isServerRendered)) {\n      var listItems = ListBase.createListItemFromJson(this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption, null, null, this);\n      append(listItems, this.listViewInstance.ulElement);\n      this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n      this.topElement = this.listViewInstance.createElement('div');\n      this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n      this.bottomElement = this.listViewInstance.createElement('div');\n      this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n      this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n      this.topElement.style.height = 0 + 'px';\n      this.bottomElement.style.height = this.totalHeight + 'px';\n      this.topElementHeight = 0;\n      this.bottomElementHeight = this.totalHeight;\n    } else {\n      this.listViewInstance.contentContainer = this.listViewInstance.element.querySelector('.e-content');\n      this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n    }\n\n    this.listDiff = 0;\n    this.uiIndicesInitialization();\n  };\n\n  Virtualization.prototype.wireScrollEvent = function (destroy) {\n    if (!destroy) {\n      if (!(isBlazor() && this.listViewInstance.isServerRendered)) {\n        if (this.listViewInstance.isWindow) {\n          this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n          window.addEventListener('scroll', this.onVirtualScroll);\n        } else {\n          EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n        }\n      } else {\n        if (this.listViewInstance.isWindow) {\n          // tslint:disable-next-line:no-any\n          this.onVirtualScroll = debounce(this.onVirtualUiScroll.bind(this), 350); // tslint:enable-next-line:no-any      \n\n          this.updateUl = this.updateUlContainer.bind(this);\n          window.addEventListener('scroll', this.onVirtualScroll);\n          window.addEventListener('scroll', this.updateUl);\n        } else {\n          EventHandler.add(this.listViewInstance.element, 'scroll', debounce(this.onVirtualUiScroll, 350), this);\n          EventHandler.add(this.listViewInstance.element, 'scroll', this.updateUlContainer, this);\n        }\n      }\n    } else {\n      this.listViewInstance.isWindow ? window.removeEventListener('scroll', this.onVirtualScroll) : EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n      this.listViewInstance.isWindow ? window.removeEventListener('scroll', this.updateUl) : EventHandler.remove(this.listViewInstance.element, 'scroll', this.updateUlContainer);\n    }\n  };\n\n  Virtualization.prototype.updateUlContainer = function (e) {\n    var listDiff;\n    var virtualElementContainer = this.listViewInstance.ulElement.querySelector('.' + classNames.virtualElementContainer);\n\n    if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n      this.listViewInstance.updateLiElementHeight();\n    }\n\n    if (this.listViewInstance.isWindow) {\n      // tslint:disable-next-line:no-any\n      listDiff = Math.round(e.target.documentElement.scrollTop / this.listViewInstance.liElementHeight) - 2; // tslint:enable-next-line:no-any  \n    } else {\n      // tslint:disable-next-line:no-any\n      listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight) - 2; // tslint:enable-next-line:no-any  \n    }\n\n    if ((listDiff - 1) * this.listViewInstance.liElementHeight < 0) {\n      virtualElementContainer.style.top = '0px';\n    } else {\n      virtualElementContainer.style.top = listDiff * this.listViewInstance.liElementHeight + 'px';\n    }\n  };\n\n  Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n    var height = parseFloat(formatUnit(this.listViewInstance.height));\n    var itemCount;\n\n    if (this.listViewInstance.isWindow) {\n      itemCount = Math.round(window.innerHeight / this.listItemHeight * windowElementCount);\n    } else {\n      if (typeof this.listViewInstance.height === 'string' && this.listViewInstance.height.indexOf('%') !== -1) {\n        // tslint:disable-next-line:max-line-length\n        itemCount = Math.round(this.listViewInstance.element.getBoundingClientRect().height / this.listItemHeight * listElementCount);\n      } else {\n        itemCount = Math.round(height / this.listItemHeight * listElementCount);\n      }\n    }\n\n    if (itemCount > dataSourceLength) {\n      itemCount = dataSourceLength;\n    }\n\n    return itemCount;\n  };\n\n  Virtualization.prototype.uiIndicesInitialization = function () {\n    this.uiIndices = {\n      'activeIndices': [],\n      'disabledItemIndices': [],\n      'hiddenItemIndices': []\n    };\n    var data = this.listViewInstance.curViewDS;\n\n    for (var i = 0; i < data.length; i++) {\n      if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n        this.uiIndices.activeIndices.push(i);\n      }\n\n      if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) && !data[i][this.listViewInstance.fields.enabled]) {\n        this.uiIndices.disabledItemIndices.push(i);\n      }\n    }\n\n    if (this.isNgTemplate()) {\n      var items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n\n      for (var index = 0; index < items.length; index++) {\n        items[index].context = this.listViewInstance.viewContainerRef.get(index).context;\n      }\n    }\n  };\n\n  Virtualization.prototype.refreshItemHeight = function () {\n    if (this.listViewInstance.curViewDS.length) {\n      var curViewDS = this.listViewInstance.curViewDS;\n\n      if (isBlazor() && this.listViewInstance.isServerRendered) {\n        this.listViewInstance.ulElement.children[0].style.height = this.listViewInstance.liElementHeight * Object.keys(curViewDS).length + 'px';\n      } else {\n        this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n        this.totalHeight = Object.keys(curViewDS).length * this.listItemHeight - this.domItemCount * this.listItemHeight;\n        this.bottomElementHeight = this.totalHeight;\n        this.bottomElement.style.height = this.totalHeight + 'px';\n      }\n    }\n  };\n\n  Virtualization.prototype.getscrollerHeight = function (startingHeight) {\n    return this.listViewInstance.isWindow ? pageYOffset - startingHeight <= 0 ? 0 : pageYOffset - startingHeight : this.listViewInstance.element.scrollTop - startingHeight <= 0 ? 0 : this.listViewInstance.element.scrollTop - startingHeight;\n  };\n\n  Virtualization.prototype.onVirtualUiScroll = function (e) {\n    var _a;\n\n    var startingHeight;\n\n    if (this.listViewInstance.isWindow) {\n      startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top - document.documentElement.getBoundingClientRect().top;\n    } else {\n      startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n    }\n\n    this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n    var scroll = this.getscrollerHeight(startingHeight);\n    this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n    this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n    _a = scroll <= this.totalHeight ? [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n\n    if (isBlazor() && this.listViewInstance.isServerRendered) {\n      var listDiff = void 0;\n\n      if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n        this.listViewInstance.updateLiElementHeight();\n      }\n\n      if (this.listViewInstance.isWindow) {\n        listDiff = Math.round(document.documentElement.scrollTop / this.listViewInstance.liElementHeight);\n      } else {\n        // tslint:disable-next-line:no-any\n        listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight); // tslint:enable-next-line:no-any\n      }\n\n      if (listDiff - 2 - this.elementDifference >= 3 || listDiff - 2 - this.elementDifference <= -1) {\n        var args = {\n          listDiff: listDiff - 2,\n          selectedItems: this.listViewInstance.previousSelectedItems\n        };\n        this.listViewInstance.interopAdaptor.invokeMethodAsync('VirtalScrolling', args);\n\n        if (this.listViewInstance.ulElement.querySelector('.e-focused')) {\n          this.listViewInstance.ulElement.querySelector('.e-focused').classList.remove('e-focused');\n        }\n\n        this.elementDifference = listDiff - 2;\n      }\n    } else {\n      if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n        this.topElement.style.height = this.topElementHeight + 'px';\n        this.bottomElement.style.height = this.bottomElementHeight + 'px';\n\n        if (scroll > this.scrollPosition) {\n          var listDiff = Math.round(this.topElementHeight / this.listItemHeight - this.listDiff);\n\n          if (listDiff > this.expectedDomItemCount + 5) {\n            this.onLongScroll(listDiff, true);\n          } else {\n            this.onNormalScroll(listDiff, true);\n          }\n        } else {\n          var listDiff = Math.round(this.listDiff - this.topElementHeight / this.listItemHeight);\n\n          if (listDiff > this.expectedDomItemCount + 5) {\n            this.onLongScroll(listDiff, false);\n          } else {\n            this.onNormalScroll(listDiff, false);\n          }\n        }\n      }\n\n      this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n\n      if (typeof this.listViewInstance.onUIScrolled === 'function') {\n        this.listViewInstance.onUIScrolled();\n      }\n    }\n\n    this.scrollPosition = scroll;\n  };\n\n  Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n    var index = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n    var elements = this.listViewInstance.ulElement.querySelectorAll('li');\n\n    for (var i = 0; i < elements.length; i++) {\n      this.updateUI(elements[i], index);\n      index++;\n    }\n\n    this.uiLastIndex = isScrollingDown ? this.uiLastIndex + listDiff : this.uiLastIndex - listDiff;\n    this.uiFirstIndex = isScrollingDown ? this.uiFirstIndex + listDiff : this.uiFirstIndex - listDiff;\n  };\n\n  Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n    if (isScrollingDown) {\n      for (var i = 0; i < listDiff; i++) {\n        var index = ++this.uiLastIndex;\n        this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n        this.uiFirstIndex++;\n      }\n    } else {\n      for (var i = 0; i < listDiff; i++) {\n        var index = --this.uiFirstIndex;\n        var target = this.topElement.nextSibling;\n        this.updateUI(this.bottomElement.previousElementSibling, index, target);\n        this.uiLastIndex--;\n      }\n    }\n  };\n\n  Virtualization.prototype.updateUiContent = function (element, index) {\n    var curViewDs = this.listViewInstance.curViewDS;\n\n    if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n      element.dataset.uid = ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML = this.listViewInstance.curViewDS[index].toString();\n    } else {\n      element.dataset.uid = curViewDs[index][this.listViewInstance.fields.id] ? curViewDs[index][this.listViewInstance.fields.id].toString() : ListBase.generateId();\n      element.getElementsByClassName(classNames.listItemText)[0].innerHTML = curViewDs[index][this.listViewInstance.fields.text].toString();\n    }\n\n    if (this.listViewInstance.showIcon) {\n      if (element.querySelector('.' + classNames.listIcon)) {\n        detach(element.querySelector('.' + classNames.listIcon));\n      }\n\n      if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n        var textContent = element.querySelector('.' + classNames.textContent);\n        var target = this.listViewInstance.createElement('div', {\n          className: classNames.listIcon + ' ' + this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n        });\n        textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n      }\n    }\n\n    if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n      if (!this.checkListWrapper) {\n        this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n      }\n\n      var textContent = element.querySelector('.' + classNames.textContent);\n\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.remove(classNames.checklist);\n          textContent.classList.remove(classNames.checkbox);\n          detach(element.querySelector('.' + classNames.checkboxWrapper));\n        }\n      } else {\n        if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n          element.classList.add(classNames.checklist);\n          textContent.classList.add(classNames.checkbox);\n          textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n        }\n      }\n    }\n  };\n\n  Virtualization.prototype.changeElementAttributes = function (element, index) {\n    element.classList.remove(classNames.disable);\n\n    if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n      element.classList.add(classNames.disable);\n    }\n\n    element.style.display = '';\n\n    if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n      element.style.display = 'none';\n    }\n\n    if (this.listViewInstance.showCheckBox) {\n      var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n      element.classList.remove(classNames.selected);\n      element.classList.remove(classNames.focused);\n\n      if (checklistElement) {\n        checklistElement.removeAttribute('aria-checked');\n        checklistElement.firstElementChild.classList.remove(classNames.checked);\n      }\n\n      if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        checklistElement.firstElementChild.classList.add(classNames.checked);\n        checklistElement.setAttribute('aria-checked', 'true');\n\n        if (this.activeIndex === index) {\n          element.classList.add(classNames.focused);\n        }\n      }\n    } else {\n      element.classList.remove(classNames.selected);\n      element.removeAttribute('aria-selected');\n\n      if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index && !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n        element.classList.add(classNames.selected);\n        element.setAttribute('aria-selected', 'true');\n      }\n    }\n\n    if (this.listViewInstance.fields.groupBy) {\n      if (this.listViewInstance.curViewDS[index].isHeader) {\n        if (element.classList.contains(classNames.listItem)) {\n          element.classList.remove(classNames.listItem);\n          element.setAttribute('role', 'group');\n          element.classList.add(classNames.groupListItem);\n        }\n      } else {\n        if (element.classList.contains(classNames.groupListItem)) {\n          element.classList.remove(classNames.groupListItem);\n          element.setAttribute('role', 'listitem');\n          element.classList.add(classNames.listItem);\n        }\n      }\n    }\n  };\n\n  Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n    var _this = this;\n\n    var resultJSON = {};\n    fields = this.listViewInstance.getElementUID(fields);\n\n    if (!isNullOrUndefined(fields)) {\n      ds.some(function (data, index) {\n        if (fields[_this.listViewInstance.fields.id] && fields[_this.listViewInstance.fields.id].toString() === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id].toString()) || fields === data) {\n          resultJSON.index = index;\n          resultJSON.data = data;\n          return true;\n        } else {\n          return false;\n        }\n      });\n    }\n\n    return resultJSON;\n  };\n\n  Virtualization.prototype.getSelectedItems = function () {\n    var _this = this;\n\n    if (!isNullOrUndefined(this.activeIndex) || this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length) {\n      var dataCollection = [];\n      var textCollection = [];\n\n      if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n        var curViewDS_1 = this.listViewInstance.curViewDS;\n\n        if (this.listViewInstance.showCheckBox) {\n          var indices = this.uiIndices.activeIndices;\n\n          for (var i = 0; i < indices.length; i++) {\n            dataCollection.push(curViewDS_1[indices[i]]);\n          }\n\n          return {\n            text: dataCollection,\n            data: dataCollection,\n            index: this.uiIndices.activeIndices.map(function (index) {\n              return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n            })\n          };\n        } else {\n          return {\n            text: curViewDS_1[this.activeIndex],\n            data: curViewDS_1[this.activeIndex],\n            index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n          };\n        }\n      } else {\n        if (isBlazor() && this.listViewInstance.isServerRendered) {\n          var scrollDiff = Math.round(this.listViewInstance.element.scrollTop / this.listViewInstance.liElementHeight) - 2;\n\n          if (scrollDiff < 0) {\n            scrollDiff = 0;\n          }\n\n          this.activeIndex += scrollDiff;\n        }\n\n        var curViewDS_2 = this.listViewInstance.curViewDS;\n        var text = this.listViewInstance.fields.text;\n\n        if (this.listViewInstance.showCheckBox) {\n          var indexArray = this.uiIndices.activeIndices;\n\n          for (var i = 0; i < indexArray.length; i++) {\n            textCollection.push(curViewDS_2[indexArray[i]][text]);\n            dataCollection.push(curViewDS_2[indexArray[i]]);\n          }\n\n          var dataSource_1 = this.listViewInstance.dataSource instanceof DataManager ? curViewDS_2 : this.listViewInstance.dataSource;\n          return {\n            text: textCollection,\n            data: dataCollection,\n            index: this.uiIndices.activeIndices.map(function (index) {\n              return dataSource_1.indexOf(curViewDS_2[index]);\n            })\n          };\n        } else {\n          var dataSource = this.listViewInstance.dataSource instanceof DataManager ? curViewDS_2 : this.listViewInstance.dataSource;\n          return {\n            text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n            data: curViewDS_2[this.activeIndex],\n            index: dataSource.indexOf(curViewDS_2[this.activeIndex])\n          };\n        }\n      }\n    } else {\n      return undefined;\n    }\n  };\n\n  Virtualization.prototype.selectItem = function (obj) {\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (Object.keys(resutJSON).length) {\n      var isSelected = this.activeIndex === resutJSON.index;\n      var isChecked = void 0;\n      this.activeIndex = resutJSON.index;\n\n      if (this.listViewInstance.showCheckBox) {\n        if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n          isChecked = true;\n          this.uiIndices.activeIndices.push(resutJSON.index);\n        } else {\n          isChecked = false;\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n        }\n\n        if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n          this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n        }\n      }\n\n      if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n        if (this.listViewInstance.showCheckBox) {\n          this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        } else {\n          this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n        }\n      } else {\n        var eventArgs = void 0;\n\n        if (typeof this.listViewInstance.dataSource[0] === 'string' || typeof this.listViewInstance.dataSource[0] === 'number') {\n          eventArgs = {\n            text: this.listViewInstance.curViewDS[this.activeIndex],\n            data: this.listViewInstance.curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        } else {\n          var curViewDS = this.listViewInstance.curViewDS;\n          eventArgs = {\n            text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n            data: curViewDS[this.activeIndex],\n            index: this.activeIndex\n          };\n        }\n\n        if (this.listViewInstance.showCheckBox) {\n          eventArgs.isChecked = isChecked;\n          this.listViewInstance.trigger('select', eventArgs);\n        } else if (!isSelected) {\n          this.listViewInstance.removeSelect();\n          this.listViewInstance.trigger('select', eventArgs);\n        }\n      }\n    } else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n      this.listViewInstance.removeSelect();\n      this.activeIndex = undefined;\n    }\n\n    if (isBlazor() && this.listViewInstance.isServerRendered) {\n      // tslint:disable-next-line:no-any\n      var elementId = resutJSON.data[this.listViewInstance.fields.id]; // tslint:enable-next-line:no-any\n\n      if (this.listViewInstance.showCheckBox) {\n        if (!this.listViewInstance.previousSelectedItems.includes(elementId)) {\n          this.listViewInstance.previousSelectedItems.push(elementId);\n        } else {\n          var indexPosition = this.listViewInstance.previousSelectedItems.indexOf(elementId);\n\n          if (indexPosition > -1) {\n            this.listViewInstance.previousSelectedItems.splice(indexPosition, 1);\n          }\n        }\n      } else {\n        this.listViewInstance.previousSelectedItems[0] = elementId;\n      }\n\n      this.listViewInstance.removeActiveClass();\n    }\n  };\n\n  Virtualization.prototype.enableItem = function (obj) {\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (isBlazor() && this.listViewInstance.isServerRendered) {\n      var itemId = resutJSON.data[this.listViewInstance.fields.id];\n\n      if (!this.listViewInstance.enabledItems.includes(itemId)) {\n        this.listViewInstance.enabledItems.push(itemId);\n        this.listViewInstance.removeActiveClass();\n      }\n\n      if (this.listViewInstance.disabledItems.includes(itemId)) {\n        var indexPosition = this.listViewInstance.disabledItems.indexOf(itemId);\n\n        if (indexPosition > -1) {\n          this.listViewInstance.disabledItems.splice(indexPosition, 1);\n        }\n      }\n    } else {\n      if (Object.keys(resutJSON).length) {\n        this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n      }\n    }\n  };\n\n  Virtualization.prototype.disableItem = function (obj) {\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (isBlazor() && this.listViewInstance.isServerRendered) {\n      var liElementId = resutJSON.data[this.listViewInstance.fields.id];\n\n      if (!this.listViewInstance.disabledItems.includes(liElementId)) {\n        this.listViewInstance.disabledItems.push(liElementId);\n        this.listViewInstance.removeActiveClass();\n      }\n\n      if (this.listViewInstance.enabledItems.includes(liElementId)) {\n        var indexPosition = this.listViewInstance.enabledItems.indexOf(liElementId);\n\n        if (indexPosition > -1) {\n          this.listViewInstance.enabledItems.splice(indexPosition, 1);\n        }\n      }\n    } else {\n      if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n        this.uiIndices.disabledItemIndices.push(resutJSON.index);\n      }\n    }\n  };\n\n  Virtualization.prototype.showItem = function (obj) {\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (isBlazor() && this.listViewInstance.isServerRendered) {\n      // tslint:disable-next-line:no-any\n      var hiddenElementId = resutJSON.data[this.listViewInstance.fields.id]; // tslint:enable-next-line:no-any\n\n      if (this.listViewInstance.hiddenItems.includes(hiddenElementId)) {\n        var indexPosition = this.listViewInstance.hiddenItems.indexOf(hiddenElementId);\n\n        if (indexPosition > -1) {\n          this.listViewInstance.previousSelectedItems.splice(indexPosition, 1);\n          this.listViewInstance.removeActiveClass();\n        }\n      }\n    } else {\n      if (Object.keys(resutJSON).length) {\n        this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n      }\n    }\n  };\n\n  Virtualization.prototype.hideItem = function (obj) {\n    var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n\n    if (isBlazor() && this.listViewInstance.isServerRendered) {\n      // tslint:disable-next-line:no-any\n      var elementId = resutJSON.data[this.listViewInstance.fields.id]; // tslint:enable-next-line:no-any\n\n      if (!this.listViewInstance.hiddenItems.includes(elementId)) {\n        this.listViewInstance.hiddenItems.push(elementId);\n        this.listViewInstance.removeActiveClass();\n      }\n    } else {\n      if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n        this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n      }\n    }\n  };\n\n  Virtualization.prototype.removeItem = function (obj) {\n    var dataSource;\n    var curViewDS = this.listViewInstance.curViewDS;\n    var resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n\n    if (isBlazor() && this.listViewInstance.isServerRendered) {\n      if (resutJSON.index !== undefined) {\n        // tslint:disable\n        this.listViewInstance.interopAdaptor.invokeMethodAsync('RemoveItemPosition', resutJSON.index); // tslint:enable\n      }\n    }\n\n    if (Object.keys(resutJSON).length) {\n      dataSource = resutJSON.data;\n\n      if (curViewDS[resutJSON.index - 1] && curViewDS[resutJSON.index - 1].isHeader && curViewDS[resutJSON.index - 1].items.length === 1) {\n        this.removeUiItem(resutJSON.index - 1);\n        this.removeUiItem(resutJSON.index - 1);\n      } else {\n        if (!(isBlazor() && this.listViewInstance.isServerRendered)) {\n          this.removeUiItem(resutJSON.index);\n        }\n      }\n    }\n\n    var listDataSource = this.listViewInstance.dataSource instanceof DataManager ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n    var index = listDataSource.indexOf(dataSource);\n\n    if (index !== -1) {\n      listDataSource.splice(index, 1);\n      this.listViewInstance.setViewDataSource(listDataSource);\n    } // recollect all the list item into collection\n\n\n    this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n  };\n\n  Virtualization.prototype.setCheckboxLI = function (li, e) {\n    if (isBlazor() && this.listViewInstance.isServerRendered) {\n      this.uiFirstIndex = Math.round(this.listViewInstance.element.scrollTop / 36) - 4;\n\n      if (this.uiFirstIndex < 0) {\n        this.uiFirstIndex = 0;\n      }\n    }\n\n    var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n\n    if (li.classList.contains(classNames.selected)) {\n      if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n        this.uiIndices.activeIndices.push(index);\n      }\n    } else {\n      this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n    }\n  };\n\n  Virtualization.prototype.setSelectLI = function (li, e) {\n    this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n  };\n\n  Virtualization.prototype.checkedItem = function (checked) {\n    if (checked) {\n      this.uiIndices.activeIndices = [];\n      this.activeIndex = undefined;\n      var data = this.listViewInstance.curViewDS;\n\n      for (var index = 0; index < data.length; index++) {\n        if (!data[index].isHeader) {\n          this.uiIndices.activeIndices.push(index);\n        }\n      }\n    } else {\n      this.activeIndex = undefined;\n      this.uiIndices.activeIndices = [];\n    }\n  };\n\n  Virtualization.prototype.addUiItem = function (index) {\n    // virtually new add list item based on the scollbar position\n    // if the scroll bar is at the top, just pretend the new item has been added since no UI\n    // change is required for the item that has been added at last but when scroll bar is at the bottom\n    // just detach top and inject into bottom to mimic new item is added\n    var curViewDs = this.listViewInstance.curViewDS;\n    this.changeUiIndices(index, true);\n\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex++;\n    }\n\n    if (this.listViewInstance.showCheckBox && curViewDs[index][this.listViewInstance.fields.isChecked]) {\n      this.uiIndices.activeIndices.push(index);\n    }\n\n    if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n      this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n    }\n\n    if (parseFloat(this.bottomElement.style.height)) {\n      var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n      var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n\n      if (target) {\n        this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        this.updateUI(liItem, index, target);\n      }\n    } else {\n      var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n      var target = void 0;\n\n      if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n        target = this.listViewInstance.curUL.lastElementChild;\n      } else {\n        target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) || this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n      }\n\n      this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n      this.uiFirstIndex++;\n      this.uiLastIndex++;\n\n      if (target) {\n        this.updateUI(liItem, index, target);\n        this.listViewInstance.isWindow ? window.scrollTo(0, pageYOffset + this.listItemHeight) : this.listViewInstance.element.scrollTop += this.listItemHeight;\n      }\n    }\n\n    this.totalHeight += this.listItemHeight;\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  };\n\n  Virtualization.prototype.removeUiItem = function (index) {\n    this.totalHeight -= this.listItemHeight;\n    var curViewDS = this.listViewInstance.curViewDS[index];\n    var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n    this.listViewInstance.curViewDS.splice(index, 1);\n\n    if (this.activeIndex && this.activeIndex >= index) {\n      this.activeIndex--;\n    }\n\n    if (liItem) {\n      if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n        detach(liItem);\n        this.domItemCount--;\n        this.uiLastIndex--;\n        this.totalHeight = 0;\n      } else {\n        if (liItem.classList.contains(classNames.disable)) {\n          liItem.classList.remove(classNames.disable);\n          this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n        }\n\n        if (liItem.style.display === 'none') {\n          liItem.style.display = '';\n          this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n        }\n\n        if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n          var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n          checklistElement.removeAttribute('aria-checked');\n          checklistElement.firstElementChild.classList.remove(classNames.checked);\n\n          if (liItem.classList.contains(classNames.focused)) {\n            liItem.classList.remove(classNames.focused);\n            this.activeIndex = undefined;\n          }\n        } else if (liItem.classList.contains(classNames.selected)) {\n          this.listViewInstance.removeSelect();\n          this.activeIndex = undefined;\n        }\n\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else if (parseFloat(this.bottomElement.style.height)) {\n          this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n        } else {\n          this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n          this.updateUI(liItem, this.uiFirstIndex - 1, this.topElement.nextSibling);\n          this.uiLastIndex--;\n          this.uiFirstIndex--;\n        }\n      }\n    }\n\n    this.changeUiIndices(index, false);\n    this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n  };\n\n  Virtualization.prototype.changeUiIndices = function (index, increment) {\n    var keys = Object.keys(this.uiIndices);\n\n    for (var ind = 0; ind < keys.length; ind++) {\n      this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map(function (i) {\n        if (i >= index) {\n          return increment ? ++i : --i;\n        } else {\n          return i;\n        }\n      });\n    }\n  };\n\n  Virtualization.prototype.addItem = function (data, fields, dataSource) {\n    for (var i = 0; i < data.length; i++) {\n      var currentItem = data[i]; // push the given data to main data array\n\n      dataSource.push(currentItem); // recalculate all the group data or other datasource related things\n\n      this.listViewInstance.setViewDataSource(dataSource); // render list items for first time due to no datasource present earlier\n\n      if (!this.domItemCount) {\n        // fresh rendering for first time\n        if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n          this.listViewInstance.listBaseOption.template = null;\n          this.listViewInstance.listBaseOption.groupTemplate = null;\n          this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n        }\n\n        this.uiVirtualization(); // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n      } else if (this.domItemCount < this.expectedDomItemCount) {\n        var ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n\n        if (ds instanceof Array) {\n          if (this.listViewInstance.ulElement) {\n            var index = this.listViewInstance.curViewDS.indexOf(currentItem); // inject new list item into DOM\n\n            this.createAndInjectNewItem(currentItem, index); // check for group header item\n\n            var curViewDS = this.listViewInstance.curViewDS[index - 1];\n\n            if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n              // target group item index in datasource\n              --index; // inject new group header into DOM for previously created list item\n\n              this.createAndInjectNewItem(curViewDS, index);\n            }\n          } // recollect all the list item into collection\n\n\n          this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        }\n      } else {\n        var index = this.listViewInstance.curViewDS.indexOf(currentItem); // virtually new add list item based on the scollbar position\n\n        this.addUiItem(index); // check for group header item needs to be added\n\n        var curViewDS = this.listViewInstance.curViewDS[index - 1];\n\n        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n          this.addUiItem(index - 1);\n        }\n      }\n    }\n  };\n\n  Virtualization.prototype.createAndInjectNewItem = function (itemData, index) {\n    // generate li item for given datasource\n    var target;\n    var li = ListBase.createListItemFromJson(this.listViewInstance.createElement, [itemData], this.listViewInstance.listBaseOption, null, null, this); // check for target element whether to insert before last item or group item\n\n    if (Object.keys(this.listViewInstance.curViewDS).length - 1 === index) {\n      target = this.listViewInstance.curUL.lastElementChild;\n    } else {\n      // target group header's first child item to append its header\n      target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) || this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n    } // insert before the target element\n\n\n    this.listViewInstance.ulElement.insertBefore(li[0], target); // increment internal DOM count, last index count for new element\n\n    this.domItemCount++;\n\n    if (this.bottomElementHeight <= 0) {\n      this.uiLastIndex++;\n    } // recalculate the current item height, to avoid jumpy scroller\n\n\n    this.refreshItemHeight();\n  };\n\n  Virtualization.prototype.createUIItem = function (args) {\n    var virtualTemplate = this.listViewInstance.template;\n    var template = this.listViewInstance.createElement('div');\n    var commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' + '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n\n    if (this.listViewInstance.showCheckBox) {\n      // tslint:disable-next-line:no-any\n      this.listViewInstance.renderCheckbox(args); // tslint:enable-next-line:no-any\n\n      if (!isNullOrUndefined(this.listViewInstance.virtualCheckBox) && !isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML)) {\n        var div = document.createElement('div');\n        div.innerHTML = this.listViewInstance.template || commonTemplate;\n        div.children[0].classList.add('e-checkbox');\n        this.listViewInstance.checkBoxPosition === 'Left' ? div.children[0].classList.add('e-checkbox-left') : div.children[0].classList.add('e-checkbox-right');\n\n        if (this.listViewInstance.checkBoxPosition === 'Left') {\n          div.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div.childNodes[0].children[0]);\n        } else {\n          div.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n        }\n\n        this.listViewInstance.template = div.innerHTML;\n      }\n\n      template.innerHTML = this.listViewInstance.template;\n      this.listViewInstance.template = virtualTemplate;\n    } else {\n      template.innerHTML = this.listViewInstance.template || commonTemplate;\n    } // tslint:disable-next-line:no-any\n\n\n    var templateElements = template.getElementsByTagName('*');\n    var groupTemplate = this.listViewInstance.createElement('div');\n\n    if (this.listViewInstance.fields.groupBy) {\n      groupTemplate.innerHTML = this.listViewInstance.groupTemplate || commonTemplate;\n    } // tslint:disable-next-line:no-any\n\n\n    var groupTemplateElements = groupTemplate.getElementsByTagName('*');\n\n    if (args.curData.isHeader) {\n      this.headerData = args.curData;\n    }\n\n    this.templateData = args.curData.isHeader ? args.curData.items[0] : args.curData;\n    args.item.innerHTML = '';\n    args.item.context = {\n      data: args.curData,\n      nodes: {\n        flatTemplateNodes: [],\n        groupTemplateNodes: []\n      }\n    };\n\n    for (var i = 0; i < templateElements.length; i++) {\n      this.compileTemplate(templateElements[i], args.item, false);\n    }\n\n    for (var i = 0; i < groupTemplateElements.length; i++) {\n      this.compileTemplate(groupTemplateElements[i], args.item, true);\n    }\n\n    args.item.context.template = args.curData.isHeader ? template.firstElementChild : groupTemplate.firstElementChild;\n    args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n    var element = args.curData.isHeader ? groupTemplate : template;\n    args.item.insertBefore(element.firstElementChild, null);\n  };\n\n  Virtualization.prototype.compileTemplate = function (element, item, isHeader) {\n    this.textProperty(element, item, isHeader);\n    this.classProperty(element, item, isHeader);\n    this.attributeProperty(element, item, isHeader);\n  };\n\n  Virtualization.prototype.onChange = function (newData, listElement) {\n    listElement.context.data = newData;\n    var groupTemplateNodes = listElement.context.nodes.groupTemplateNodes;\n    var flatTemplateNodes = listElement.context.nodes.flatTemplateNodes;\n\n    if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n      var element = listElement.firstElementChild;\n      detach(listElement.firstElementChild);\n      listElement.insertBefore(listElement.context.template, null);\n      listElement.context.template = element;\n      listElement.context.type = 'flatList';\n\n      for (var i = 0; i < groupTemplateNodes.length; i++) {\n        groupTemplateNodes[i].onChange(newData);\n      }\n    } else if (!newData.isHeader && listElement.context.type === 'flatList') {\n      var element = listElement.firstElementChild;\n      detach(listElement.firstElementChild);\n      listElement.insertBefore(listElement.context.template, null);\n      listElement.context.template = element;\n      listElement.context.type = 'groupList';\n\n      for (var i = 0; i < flatTemplateNodes.length; i++) {\n        flatTemplateNodes[i].onChange(newData);\n      }\n    } else if (!newData.isHeader) {\n      for (var i = 0; i < flatTemplateNodes.length; i++) {\n        flatTemplateNodes[i].onChange(newData);\n      }\n    } else {\n      for (var i = 0; i < groupTemplateNodes.length; i++) {\n        groupTemplateNodes[i].onChange(newData);\n      }\n    }\n  };\n\n  Virtualization.prototype.updateContextData = function (listElement, node, isHeader) {\n    if (isHeader) {\n      listElement.context.nodes.groupTemplateNodes.push(node);\n    } else {\n      listElement.context.nodes.flatTemplateNodes.push(node);\n    }\n  };\n\n  Virtualization.prototype.classProperty = function (element, listElement, isHeader) {\n    var regex = new RegExp('\\\\${([^}]*)}', 'g');\n    var resultantOutput = [];\n    var regexMatch;\n\n    while (regexMatch !== null) {\n      var match = regex.exec(element.className);\n      resultantOutput.push(match);\n      regexMatch = match;\n\n      if (regexMatch === null) {\n        resultantOutput.pop();\n      }\n    }\n\n    if (resultantOutput && resultantOutput.length) {\n      var _loop_1 = function (i) {\n        var classNameMatch = resultantOutput[i];\n        var classFunction;\n\n        if (classNameMatch[1].indexOf('?') !== -1 && classNameMatch[1].indexOf(':') !== -1) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          classFunction = new Function('data', 'return ' + classNameMatch[1].replace(/\\$/g, 'data.'));\n        } else {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          classFunction = new Function('data', 'return ' + 'data.' + classNameMatch[1]);\n        }\n\n        var subNode = {};\n\n        if (isHeader) {\n          subNode.bindedvalue = classFunction(this_1.headerData);\n        } else {\n          subNode.bindedvalue = classFunction(this_1.templateData);\n        }\n\n        subNode.onChange = function (value) {\n          if (subNode.bindedvalue) {\n            removeClass([element], subNode.bindedvalue.split(' ').filter(function (css) {\n              return css;\n            }));\n          }\n\n          var newCss = classFunction(value);\n\n          if (newCss) {\n            addClass([element], newCss.split(' ').filter(function (css) {\n              return css;\n            }));\n          }\n\n          subNode.bindedvalue = newCss;\n        };\n\n        var className = classNameMatch[0].split(' ');\n\n        for (var i_1 = 0; i_1 < className.length; i_1++) {\n          element.classList.remove(className[i_1]);\n        }\n\n        if (subNode.bindedvalue) {\n          addClass([element], subNode.bindedvalue.split(' ').filter(function (css) {\n            return css;\n          }));\n        }\n\n        this_1.updateContextData(listElement, subNode, isHeader);\n      };\n\n      var this_1 = this;\n\n      for (var i = 0; i < resultantOutput.length; i++) {\n        _loop_1(i);\n      }\n    }\n  };\n\n  Virtualization.prototype.attributeProperty = function (element, listElement, isHeader) {\n    var attributeNames = [];\n\n    for (var i = 0; i < element.attributes.length; i++) {\n      attributeNames.push(element.attributes[i].nodeName);\n    }\n\n    if (attributeNames.indexOf('class') !== -1) {\n      attributeNames.splice(attributeNames.indexOf('class'), 1);\n    }\n\n    var _loop_2 = function (i) {\n      var attributeName = attributeNames[i];\n      var attrNameMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(attributeName) || [];\n      var attrValueMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(element.getAttribute(attributeName)) || [];\n      var attributeNameFunction;\n      var attributeValueFunction;\n\n      if (attrNameMatch.length || attrValueMatch.length) {\n        if (attrNameMatch[1]) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          attributeNameFunction = new Function('data', 'return ' + 'data.' + attrNameMatch[1]);\n        }\n\n        if (attrValueMatch[1]) {\n          if (attrValueMatch[1].indexOf('?') !== -1 && attrValueMatch[1].indexOf(':') !== -1) {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            attributeValueFunction = new Function('data', 'return ' + attrValueMatch[1].replace(/\\$/g, 'data.'));\n          } else {\n            // tslint:disable-next-line:no-function-constructor-with-string-args\n            attributeValueFunction = new Function('data', 'return ' + 'data.' + attrValueMatch[1]);\n          }\n        }\n\n        var subNode_1 = {};\n\n        if (isHeader) {\n          subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.headerData), attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.headerData)];\n        } else {\n          subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.templateData), attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.templateData)];\n        }\n\n        subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? attributeName : subNode_1.bindedvalue[0];\n\n        subNode_1.onChange = function (value) {\n          var bindedvalue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(subNode_1.attrName) : attributeValueFunction(value);\n          element.removeAttribute(subNode_1.attrName);\n          subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? subNode_1.attrName : attributeNameFunction(value);\n          element.setAttribute(subNode_1.attrName, bindedvalue);\n          subNode_1.bindedvalue = [subNode_1.bindedvalue[0] === undefined ? undefined : attributeNameFunction(value), subNode_1.bindedvalue[1] === undefined ? undefined : attributeValueFunction(value)];\n        };\n\n        var attributeValue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(attributeName) : subNode_1.bindedvalue[1];\n        element.removeAttribute(attributeName);\n        element.setAttribute(subNode_1.attrName, attributeValue);\n        this_2.updateContextData(listElement, subNode_1, isHeader);\n      }\n    };\n\n    var this_2 = this;\n\n    for (var i = 0; i < attributeNames.length; i++) {\n      _loop_2(i);\n    }\n  };\n\n  Virtualization.prototype.textProperty = function (element, listElement, isHeader) {\n    var regex = new RegExp('\\\\${([^}]*)}', 'g');\n    var resultantOutput = [];\n    var regexMatch;\n\n    while (regexMatch !== null) {\n      var match = regex.exec(element.innerText);\n      resultantOutput.push(match);\n      regexMatch = match;\n\n      if (regexMatch === null) {\n        resultantOutput.pop();\n      }\n    }\n\n    var isChildHasTextContent = Array.prototype.some.call(element.children, function (element) {\n      if (new RegExp('\\\\${([^}]*)}', 'g').exec(element.innerText)) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n\n    if (resultantOutput && resultantOutput.length && !isChildHasTextContent) {\n      var _loop_3 = function (i) {\n        var textPropertyMatch = resultantOutput[i];\n        var subNode = {};\n        var textFunction;\n\n        if (textPropertyMatch[1].indexOf('?') !== -1 && textPropertyMatch[1].indexOf(':') !== -1) {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          textFunction = new Function('data', 'return ' + textPropertyMatch[1].replace(/\\$/g, 'data.'));\n        } else {\n          // tslint:disable-next-line:no-function-constructor-with-string-args\n          textFunction = new Function('data', 'return ' + 'data.' + textPropertyMatch[1]);\n        }\n\n        if (isHeader) {\n          subNode.bindedvalue = textFunction(this_3.headerData);\n        } else {\n          subNode.bindedvalue = textFunction(this_3.templateData);\n        }\n\n        subNode.onChange = function (value) {\n          element.innerText = element.innerText.replace(subNode.bindedvalue, textFunction(value));\n          subNode.bindedvalue = textFunction(value);\n        };\n\n        element.innerText = element.innerText.replace(textPropertyMatch[0], subNode.bindedvalue);\n        this_3.updateContextData(listElement, subNode, isHeader);\n      };\n\n      var this_3 = this;\n\n      for (var i = 0; i < resultantOutput.length; i++) {\n        _loop_3(i);\n      }\n    }\n  };\n\n  Virtualization.prototype.reRenderUiVirtualization = function () {\n    this.wireScrollEvent(true);\n\n    if (this.listViewInstance.contentContainer) {\n      detach(this.listViewInstance.contentContainer);\n    }\n\n    this.listViewInstance.preRender(); // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n    // and then manually adding item using addItem API\n\n    this.domItemCount = 0;\n    this.listViewInstance.header();\n    this.listViewInstance.setLocalData();\n  };\n\n  Virtualization.prototype.updateUI = function (element, index, targetElement) {\n    var onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n\n    if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n      var curViewDS = this.listViewInstance.curViewDS[index];\n      element.dataset.uid = curViewDS[this.listViewInstance.fields.id] ? curViewDS[this.listViewInstance.fields.id].toString() : ListBase.generateId();\n      onChange(curViewDS, element, this);\n    } else {\n      this.updateUiContent(element, index);\n    }\n\n    this.changeElementAttributes(element, index);\n\n    if (targetElement) {\n      this.listViewInstance.ulElement.insertBefore(element, targetElement);\n    }\n  };\n\n  Virtualization.prototype.onNgChange = function (newData, listElement, virtualThis) {\n    // compile given target element with template for new data\n    var templateCompiler = compile(virtualThis.listViewInstance.template);\n    var resultElement = templateCompiler(newData);\n\n    while (listElement.lastChild) {\n      listElement.removeChild(listElement.lastChild);\n    }\n\n    listElement.appendChild(resultElement[0]);\n  };\n\n  Virtualization.prototype.getModuleName = function () {\n    return 'virtualization';\n  };\n\n  Virtualization.prototype.destroy = function () {\n    this.wireScrollEvent(true);\n  };\n\n  return Virtualization;\n}();\n\nexport { Virtualization };","map":{"version":3,"names":["classNames","EventHandler","append","isNullOrUndefined","detach","removeClass","addClass","compile","formatUnit","isBlazor","debounce","ListBase","DataManager","listElementCount","windowElementCount","Virtualization","instance","elementDifference","listViewInstance","prototype","isNgTemplate","templateRef","uiVirtualization","wireScrollEvent","curViewDS","firstDs","slice","isServerRendered","ulElement","curUL","createList","createElement","listBaseOption","contentContainer","className","content","element","appendChild","listItemHeight","firstElementChild","getBoundingClientRect","height","expectedDomItemCount","ValidateItemCount","domItemCount","Object","keys","length","uiFirstIndex","uiLastIndex","otherDs","listItems","createListItemFromJson","liCollection","querySelectorAll","topElement","insertBefore","bottomElement","totalHeight","style","topElementHeight","bottomElementHeight","querySelector","listDiff","uiIndicesInitialization","destroy","isWindow","onVirtualScroll","onVirtualUiScroll","bind","window","addEventListener","add","updateUl","updateUlContainer","removeEventListener","remove","e","virtualElementContainer","liElementHeight","updateLiElementHeight","Math","round","target","documentElement","scrollTop","top","dataSourceLength","parseFloat","itemCount","innerHeight","indexOf","uiIndices","data","i","showCheckBox","fields","isChecked","activeIndices","push","enabled","disabledItemIndices","items","listItem","index","context","viewContainerRef","get","refreshItemHeight","children","nextSibling","getscrollerHeight","startingHeight","pageYOffset","_a","document","headerEle","scrollPosition","scroll","floor","args","selectedItems","previousSelectedItems","interopAdaptor","invokeMethodAsync","classList","onLongScroll","onNormalScroll","onUIScrolled","isScrollingDown","elements","updateUI","nextElementSibling","previousElementSibling","updateUiContent","curViewDs","dataSource","dataset","uid","generateId","getElementsByClassName","listItemText","innerHTML","toString","id","text","showIcon","listIcon","iconCss","textContent","groupBy","checkListWrapper","checkboxWrapper","cloneNode","isHeader","checklist","checkbox","changeElementAttributes","disable","display","hiddenItemIndices","checklistElement","selected","focused","removeAttribute","checked","setAttribute","activeIndex","contains","groupListItem","findDSAndIndexFromId","ds","_this","resultJSON","getElementUID","some","getSelectedItems","dataCollection","textCollection","curViewDS_1","indices","map","scrollDiff","curViewDS_2","indexArray","dataSource_1","undefined","selectItem","obj","resutJSON","isSelected","splice","getLiFromObjOrElement","setCheckboxLI","setSelectLI","eventArgs","trigger","removeSelect","elementId","includes","indexPosition","removeActiveClass","enableItem","itemId","enabledItems","disabledItems","disableItem","liElementId","showItem","hiddenElementId","hiddenItems","hideItem","removeItem","removeUiItem","listDataSource","localData","setViewDataSource","li","Array","call","checkedItem","addUiItem","changeUiIndices","liItem","lastElementChild","previousSibling","scrollTo","increment","ind","addItem","currentItem","template","groupTemplate","itemCreated","createUIItem","findItemFromDS","createAndInjectNewItem","itemData","virtualTemplate","commonTemplate","renderCheckbox","virtualCheckBox","outerHTML","div","checkBoxPosition","childNodes","templateElements","getElementsByTagName","groupTemplateElements","curData","headerData","templateData","item","nodes","flatTemplateNodes","groupTemplateNodes","compileTemplate","type","textProperty","classProperty","attributeProperty","onChange","newData","listElement","updateContextData","node","regex","RegExp","resultantOutput","regexMatch","match","exec","pop","_loop_1","classNameMatch","classFunction","Function","replace","subNode","bindedvalue","this_1","value","split","filter","css","newCss","i_1","attributeNames","attributes","nodeName","_loop_2","attributeName","attrNameMatch","attrValueMatch","getAttribute","attributeNameFunction","attributeValueFunction","subNode_1","this_2","attrName","attributeValue","innerText","isChildHasTextContent","_loop_3","textPropertyMatch","textFunction","this_3","reRenderUiVirtualization","preRender","header","setLocalData","targetElement","onNgChange","virtualThis","templateCompiler","resultElement","lastChild","removeChild","getModuleName"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-lists/src/list-view/virtualization.js"],"sourcesContent":["import { classNames } from './list-view';\nimport { EventHandler, append, isNullOrUndefined, detach, removeClass, addClass, compile, formatUnit } from '@syncfusion/ej2-base';\nimport { isBlazor, debounce } from '@syncfusion/ej2-base';\nimport { ListBase } from '../common/list-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar listElementCount = 1.5;\nvar windowElementCount = 3;\nvar Virtualization = /** @class */ (function () {\n    function Virtualization(instance) {\n        this.elementDifference = 0;\n        this.listViewInstance = instance;\n    }\n    /**\n     * For internal use only.\n     * @private\n     */\n    Virtualization.prototype.isNgTemplate = function () {\n        return !isNullOrUndefined(this.listViewInstance.templateRef) && typeof this.listViewInstance.templateRef !== 'string';\n    };\n    /**\n     * For internal use only.\n     * @private\n     */\n    Virtualization.prototype.uiVirtualization = function () {\n        this.wireScrollEvent(false);\n        var curViewDS = this.listViewInstance.curViewDS;\n        var firstDs = curViewDS.slice(0, 1);\n        if (!(isBlazor() || this.listViewInstance.isServerRendered)) {\n            this.listViewInstance.ulElement = this.listViewInstance.curUL = ListBase.createList(this.listViewInstance.createElement, firstDs, this.listViewInstance.listBaseOption, null, this);\n            this.listViewInstance.contentContainer = this.listViewInstance.createElement('div', { className: classNames.content });\n            this.listViewInstance.element.appendChild(this.listViewInstance.contentContainer);\n            this.listViewInstance.contentContainer.appendChild(this.listViewInstance.ulElement);\n        }\n        this.listItemHeight = this.listViewInstance.ulElement.firstElementChild.getBoundingClientRect().height;\n        this.expectedDomItemCount = this.ValidateItemCount(10000);\n        this.domItemCount = this.ValidateItemCount(Object.keys(this.listViewInstance.curViewDS).length);\n        this.uiFirstIndex = 0;\n        this.uiLastIndex = this.domItemCount - 1;\n        var otherDs = curViewDS.slice(1, this.domItemCount);\n        if (!(isBlazor() || this.listViewInstance.isServerRendered)) {\n            var listItems = ListBase.createListItemFromJson(this.listViewInstance.createElement, otherDs, this.listViewInstance.listBaseOption, null, null, this);\n            append(listItems, this.listViewInstance.ulElement);\n            this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n            this.topElement = this.listViewInstance.createElement('div');\n            this.listViewInstance.ulElement.insertBefore(this.topElement, this.listViewInstance.ulElement.firstElementChild);\n            this.bottomElement = this.listViewInstance.createElement('div');\n            this.listViewInstance.ulElement.insertBefore(this.bottomElement, null);\n            this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n            this.topElement.style.height = 0 + 'px';\n            this.bottomElement.style.height = this.totalHeight + 'px';\n            this.topElementHeight = 0;\n            this.bottomElementHeight = this.totalHeight;\n        }\n        else {\n            this.listViewInstance.contentContainer = this.listViewInstance.element.querySelector('.e-content');\n            this.listViewInstance.liCollection = this.listViewInstance.curUL.querySelectorAll('li');\n        }\n        this.listDiff = 0;\n        this.uiIndicesInitialization();\n    };\n    Virtualization.prototype.wireScrollEvent = function (destroy) {\n        if (!destroy) {\n            if (!(isBlazor() && this.listViewInstance.isServerRendered)) {\n                if (this.listViewInstance.isWindow) {\n                    this.onVirtualScroll = this.onVirtualUiScroll.bind(this);\n                    window.addEventListener('scroll', this.onVirtualScroll);\n                }\n                else {\n                    EventHandler.add(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll, this);\n                }\n            }\n            else {\n                if (this.listViewInstance.isWindow) {\n                    // tslint:disable-next-line:no-any\n                    this.onVirtualScroll = debounce(this.onVirtualUiScroll.bind(this), 350);\n                    // tslint:enable-next-line:no-any      \n                    this.updateUl = this.updateUlContainer.bind(this);\n                    window.addEventListener('scroll', this.onVirtualScroll);\n                    window.addEventListener('scroll', this.updateUl);\n                }\n                else {\n                    EventHandler.add(this.listViewInstance.element, 'scroll', debounce(this.onVirtualUiScroll, 350), this);\n                    EventHandler.add(this.listViewInstance.element, 'scroll', this.updateUlContainer, this);\n                }\n            }\n        }\n        else {\n            this.listViewInstance.isWindow ? window.removeEventListener('scroll', this.onVirtualScroll) :\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.onVirtualUiScroll);\n            this.listViewInstance.isWindow ? window.removeEventListener('scroll', this.updateUl) :\n                EventHandler.remove(this.listViewInstance.element, 'scroll', this.updateUlContainer);\n        }\n    };\n    Virtualization.prototype.updateUlContainer = function (e) {\n        var listDiff;\n        var virtualElementContainer = this.listViewInstance.ulElement.querySelector('.' + classNames.virtualElementContainer);\n        if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n            this.listViewInstance.updateLiElementHeight();\n        }\n        if (this.listViewInstance.isWindow) {\n            // tslint:disable-next-line:no-any\n            listDiff = Math.round(e.target.documentElement.scrollTop / this.listViewInstance.liElementHeight) - 2;\n            // tslint:enable-next-line:no-any  \n        }\n        else {\n            // tslint:disable-next-line:no-any\n            listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight) - 2;\n            // tslint:enable-next-line:no-any  \n        }\n        if (((listDiff - 1) * this.listViewInstance.liElementHeight) < 0) {\n            virtualElementContainer.style.top = '0px';\n        }\n        else {\n            virtualElementContainer.style.top = (listDiff) * this.listViewInstance.liElementHeight + 'px';\n        }\n    };\n    Virtualization.prototype.ValidateItemCount = function (dataSourceLength) {\n        var height = parseFloat(formatUnit(this.listViewInstance.height));\n        var itemCount;\n        if (this.listViewInstance.isWindow) {\n            itemCount = Math.round((window.innerHeight / this.listItemHeight) * windowElementCount);\n        }\n        else {\n            if (typeof this.listViewInstance.height === 'string' && this.listViewInstance.height.indexOf('%') !== -1) {\n                // tslint:disable-next-line:max-line-length\n                itemCount = Math.round((this.listViewInstance.element.getBoundingClientRect().height / this.listItemHeight) * listElementCount);\n            }\n            else {\n                itemCount = Math.round((height / this.listItemHeight) * listElementCount);\n            }\n        }\n        if (itemCount > dataSourceLength) {\n            itemCount = dataSourceLength;\n        }\n        return itemCount;\n    };\n    Virtualization.prototype.uiIndicesInitialization = function () {\n        this.uiIndices = { 'activeIndices': [], 'disabledItemIndices': [], 'hiddenItemIndices': [] };\n        var data = this.listViewInstance.curViewDS;\n        for (var i = 0; i < data.length; i++) {\n            if (this.listViewInstance.showCheckBox && data[i][this.listViewInstance.fields.isChecked]) {\n                this.uiIndices.activeIndices.push(i);\n            }\n            if (!isNullOrUndefined(data[i][this.listViewInstance.fields.enabled]) && !data[i][this.listViewInstance.fields.enabled]) {\n                this.uiIndices.disabledItemIndices.push(i);\n            }\n        }\n        if (this.isNgTemplate()) {\n            var items = this.listViewInstance.element.querySelectorAll('.' + classNames.listItem);\n            for (var index = 0; index < items.length; index++) {\n                items[index].context = this.listViewInstance.viewContainerRef.get(index).context;\n            }\n        }\n    };\n    Virtualization.prototype.refreshItemHeight = function () {\n        if (this.listViewInstance.curViewDS.length) {\n            var curViewDS = this.listViewInstance.curViewDS;\n            if (isBlazor() && this.listViewInstance.isServerRendered) {\n                this.listViewInstance.ulElement.children[0].style.height =\n                    (this.listViewInstance.liElementHeight * (Object.keys(curViewDS).length)) + 'px';\n            }\n            else {\n                this.listItemHeight = this.topElement.nextSibling.getBoundingClientRect().height;\n                this.totalHeight = (Object.keys(curViewDS).length * this.listItemHeight) - (this.domItemCount * this.listItemHeight);\n                this.bottomElementHeight = this.totalHeight;\n                this.bottomElement.style.height = this.totalHeight + 'px';\n            }\n        }\n    };\n    Virtualization.prototype.getscrollerHeight = function (startingHeight) {\n        return this.listViewInstance.isWindow ? (((pageYOffset - startingHeight) <= 0) ? 0 :\n            (pageYOffset - startingHeight)) : ((this.listViewInstance.element.scrollTop - startingHeight) <= 0) ? 0 :\n            (this.listViewInstance.element.scrollTop - startingHeight);\n    };\n    Virtualization.prototype.onVirtualUiScroll = function (e) {\n        var _a;\n        var startingHeight;\n        if (this.listViewInstance.isWindow) {\n            startingHeight = this.listViewInstance.ulElement.getBoundingClientRect().top -\n                document.documentElement.getBoundingClientRect().top;\n        }\n        else {\n            startingHeight = this.listViewInstance.headerEle ? this.listViewInstance.headerEle.getBoundingClientRect().height : 0;\n        }\n        this.scrollPosition = isNullOrUndefined(this.scrollPosition) ? 0 : this.scrollPosition;\n        var scroll = this.getscrollerHeight(startingHeight);\n        this.topElementHeight = this.listItemHeight * Math.floor(scroll / this.listItemHeight);\n        this.bottomElementHeight = this.totalHeight - this.topElementHeight;\n        _a = scroll <= this.totalHeight ?\n            [this.topElementHeight, this.bottomElementHeight] : [this.totalHeight, 0], this.topElementHeight = _a[0], this.bottomElementHeight = _a[1];\n        if (isBlazor() && this.listViewInstance.isServerRendered) {\n            var listDiff = void 0;\n            if (isNullOrUndefined(this.listViewInstance.liElementHeight)) {\n                this.listViewInstance.updateLiElementHeight();\n            }\n            if (this.listViewInstance.isWindow) {\n                listDiff = Math.round(document.documentElement.scrollTop / this.listViewInstance.liElementHeight);\n            }\n            else {\n                // tslint:disable-next-line:no-any\n                listDiff = Math.round(e.target.scrollTop / this.listViewInstance.liElementHeight);\n                // tslint:enable-next-line:no-any\n            }\n            if ((listDiff - 2) - this.elementDifference >= 3 || (listDiff - 2) - this.elementDifference <= -1) {\n                var args = { listDiff: listDiff - 2, selectedItems: this.listViewInstance.previousSelectedItems };\n                this.listViewInstance.interopAdaptor.invokeMethodAsync('VirtalScrolling', args);\n                if (this.listViewInstance.ulElement.querySelector('.e-focused')) {\n                    this.listViewInstance.ulElement.querySelector('.e-focused').classList.remove('e-focused');\n                }\n                this.elementDifference = listDiff - 2;\n            }\n        }\n        else {\n            if (this.topElementHeight !== parseFloat(this.topElement.style.height)) {\n                this.topElement.style.height = this.topElementHeight + 'px';\n                this.bottomElement.style.height = this.bottomElementHeight + 'px';\n                if (scroll > this.scrollPosition) {\n                    var listDiff = Math.round(((this.topElementHeight / this.listItemHeight) - this.listDiff));\n                    if (listDiff > (this.expectedDomItemCount + 5)) {\n                        this.onLongScroll(listDiff, true);\n                    }\n                    else {\n                        this.onNormalScroll(listDiff, true);\n                    }\n                }\n                else {\n                    var listDiff = Math.round((this.listDiff - (this.topElementHeight / this.listItemHeight)));\n                    if (listDiff > (this.expectedDomItemCount + 5)) {\n                        this.onLongScroll(listDiff, false);\n                    }\n                    else {\n                        this.onNormalScroll(listDiff, false);\n                    }\n                }\n            }\n            this.listDiff = Math.round(this.topElementHeight / this.listItemHeight);\n            if (typeof this.listViewInstance.onUIScrolled === 'function') {\n                this.listViewInstance.onUIScrolled();\n            }\n        }\n        this.scrollPosition = scroll;\n    };\n    Virtualization.prototype.onLongScroll = function (listDiff, isScrollingDown) {\n        var index = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n        var elements = this.listViewInstance.ulElement.querySelectorAll('li');\n        for (var i = 0; i < elements.length; i++) {\n            this.updateUI(elements[i], index);\n            index++;\n        }\n        this.uiLastIndex = isScrollingDown ? (this.uiLastIndex + listDiff) : (this.uiLastIndex - listDiff);\n        this.uiFirstIndex = isScrollingDown ? (this.uiFirstIndex + listDiff) : (this.uiFirstIndex - listDiff);\n    };\n    Virtualization.prototype.onNormalScroll = function (listDiff, isScrollingDown) {\n        if (isScrollingDown) {\n            for (var i = 0; i < listDiff; i++) {\n                var index = ++this.uiLastIndex;\n                this.updateUI(this.topElement.nextElementSibling, index, this.bottomElement);\n                this.uiFirstIndex++;\n            }\n        }\n        else {\n            for (var i = 0; i < listDiff; i++) {\n                var index = --this.uiFirstIndex;\n                var target = this.topElement.nextSibling;\n                this.updateUI(this.bottomElement.previousElementSibling, index, target);\n                this.uiLastIndex--;\n            }\n        }\n    };\n    Virtualization.prototype.updateUiContent = function (element, index) {\n        var curViewDs = this.listViewInstance.curViewDS;\n        if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n            typeof this.listViewInstance.dataSource[0] === 'number') {\n            element.dataset.uid = ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                this.listViewInstance.curViewDS[index].toString();\n        }\n        else {\n            element.dataset.uid = curViewDs[index][this.listViewInstance.fields.id] ?\n                curViewDs[index][this.listViewInstance.fields.id].toString() : ListBase.generateId();\n            element.getElementsByClassName(classNames.listItemText)[0].innerHTML =\n                curViewDs[index][this.listViewInstance.fields.text].toString();\n        }\n        if (this.listViewInstance.showIcon) {\n            if (element.querySelector('.' + classNames.listIcon)) {\n                detach(element.querySelector('.' + classNames.listIcon));\n            }\n            if (this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]) {\n                var textContent = element.querySelector('.' + classNames.textContent);\n                var target = this.listViewInstance.createElement('div', {\n                    className: classNames.listIcon + ' ' +\n                        this.listViewInstance.curViewDS[index][this.listViewInstance.fields.iconCss]\n                });\n                textContent.insertBefore(target, element.querySelector('.' + classNames.listItemText));\n            }\n        }\n        if (this.listViewInstance.showCheckBox && this.listViewInstance.fields.groupBy) {\n            if (!this.checkListWrapper) {\n                this.checkListWrapper = this.listViewInstance.curUL.querySelector('.' + classNames.checkboxWrapper).cloneNode(true);\n            }\n            var textContent = element.querySelector('.' + classNames.textContent);\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.remove(classNames.checklist);\n                    textContent.classList.remove(classNames.checkbox);\n                    detach(element.querySelector('.' + classNames.checkboxWrapper));\n                }\n            }\n            else {\n                if (!element.querySelector('.' + classNames.checkboxWrapper)) {\n                    element.classList.add(classNames.checklist);\n                    textContent.classList.add(classNames.checkbox);\n                    textContent.insertBefore(this.checkListWrapper.cloneNode(true), element.querySelector('.' + classNames.listItemText));\n                }\n            }\n        }\n    };\n    Virtualization.prototype.changeElementAttributes = function (element, index) {\n        element.classList.remove(classNames.disable);\n        if (this.uiIndices.disabledItemIndices.length && this.uiIndices.disabledItemIndices.indexOf(index) !== -1) {\n            element.classList.add(classNames.disable);\n        }\n        element.style.display = '';\n        if (this.uiIndices.hiddenItemIndices.length && this.uiIndices.hiddenItemIndices.indexOf(index) !== -1) {\n            element.style.display = 'none';\n        }\n        if (this.listViewInstance.showCheckBox) {\n            var checklistElement = element.querySelector('.' + classNames.checkboxWrapper);\n            element.classList.remove(classNames.selected);\n            element.classList.remove(classNames.focused);\n            if (checklistElement) {\n                checklistElement.removeAttribute('aria-checked');\n                checklistElement.firstElementChild.classList.remove(classNames.checked);\n            }\n            if (this.uiIndices.activeIndices.length && this.uiIndices.activeIndices.indexOf(index) !== -1 &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                checklistElement.firstElementChild.classList.add(classNames.checked);\n                checklistElement.setAttribute('aria-checked', 'true');\n                if (this.activeIndex === index) {\n                    element.classList.add(classNames.focused);\n                }\n            }\n        }\n        else {\n            element.classList.remove(classNames.selected);\n            element.removeAttribute('aria-selected');\n            if (!isNullOrUndefined(this.activeIndex) && this.activeIndex === index &&\n                !this.listViewInstance.curUL.querySelector(classNames.selected)) {\n                element.classList.add(classNames.selected);\n                element.setAttribute('aria-selected', 'true');\n            }\n        }\n        if (this.listViewInstance.fields.groupBy) {\n            if (this.listViewInstance.curViewDS[index].isHeader) {\n                if (element.classList.contains(classNames.listItem)) {\n                    element.classList.remove(classNames.listItem);\n                    element.setAttribute('role', 'group');\n                    element.classList.add(classNames.groupListItem);\n                }\n            }\n            else {\n                if (element.classList.contains(classNames.groupListItem)) {\n                    element.classList.remove(classNames.groupListItem);\n                    element.setAttribute('role', 'listitem');\n                    element.classList.add(classNames.listItem);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.findDSAndIndexFromId = function (ds, fields) {\n        var _this = this;\n        var resultJSON = {};\n        fields = this.listViewInstance.getElementUID(fields);\n        if (!isNullOrUndefined(fields)) {\n            ds.some(function (data, index) {\n                if ((fields[_this.listViewInstance.fields.id] &&\n                    fields[_this.listViewInstance.fields.id].toString()\n                        === (data[_this.listViewInstance.fields.id] && data[_this.listViewInstance.fields.id].toString())) || fields === data) {\n                    resultJSON.index = index;\n                    resultJSON.data = data;\n                    return true;\n                }\n                else {\n                    return false;\n                }\n            });\n        }\n        return resultJSON;\n    };\n    Virtualization.prototype.getSelectedItems = function () {\n        var _this = this;\n        if (!isNullOrUndefined(this.activeIndex) || (this.listViewInstance.showCheckBox && this.uiIndices.activeIndices.length)) {\n            var dataCollection = [];\n            var textCollection = [];\n            if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                typeof this.listViewInstance.dataSource[0] === 'number') {\n                var curViewDS_1 = this.listViewInstance.curViewDS;\n                if (this.listViewInstance.showCheckBox) {\n                    var indices = this.uiIndices.activeIndices;\n                    for (var i = 0; i < indices.length; i++) {\n                        dataCollection.push(curViewDS_1[indices[i]]);\n                    }\n                    return {\n                        text: dataCollection,\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return _this.listViewInstance.dataSource.indexOf(curViewDS_1[index]);\n                        })\n                    };\n                }\n                else {\n                    return {\n                        text: curViewDS_1[this.activeIndex],\n                        data: curViewDS_1[this.activeIndex],\n                        index: this.listViewInstance.dataSource.indexOf(curViewDS_1[this.activeIndex])\n                    };\n                }\n            }\n            else {\n                if (isBlazor() && this.listViewInstance.isServerRendered) {\n                    var scrollDiff = Math.round(this.listViewInstance.element.scrollTop /\n                        this.listViewInstance.liElementHeight) - 2;\n                    if (scrollDiff < 0) {\n                        scrollDiff = 0;\n                    }\n                    this.activeIndex += scrollDiff;\n                }\n                var curViewDS_2 = this.listViewInstance.curViewDS;\n                var text = this.listViewInstance.fields.text;\n                if (this.listViewInstance.showCheckBox) {\n                    var indexArray = this.uiIndices.activeIndices;\n                    for (var i = 0; i < indexArray.length; i++) {\n                        textCollection.push(curViewDS_2[indexArray[i]][text]);\n                        dataCollection.push(curViewDS_2[indexArray[i]]);\n                    }\n                    var dataSource_1 = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: textCollection,\n                        data: dataCollection,\n                        index: this.uiIndices.activeIndices.map(function (index) {\n                            return dataSource_1.indexOf(curViewDS_2[index]);\n                        })\n                    };\n                }\n                else {\n                    var dataSource = this.listViewInstance.dataSource instanceof DataManager\n                        ? curViewDS_2 : this.listViewInstance.dataSource;\n                    return {\n                        text: curViewDS_2[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS_2[this.activeIndex],\n                        index: dataSource.indexOf(curViewDS_2[this.activeIndex])\n                    };\n                }\n            }\n        }\n        else {\n            return undefined;\n        }\n    };\n    Virtualization.prototype.selectItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (Object.keys(resutJSON).length) {\n            var isSelected = this.activeIndex === resutJSON.index;\n            var isChecked = void 0;\n            this.activeIndex = resutJSON.index;\n            if (this.listViewInstance.showCheckBox) {\n                if (this.uiIndices.activeIndices.indexOf(resutJSON.index) === -1) {\n                    isChecked = true;\n                    this.uiIndices.activeIndices.push(resutJSON.index);\n                }\n                else {\n                    isChecked = false;\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(resutJSON.index), 1);\n                }\n                if (this.listViewInstance.curUL.querySelector('.' + classNames.focused)) {\n                    this.listViewInstance.curUL.querySelector('.' + classNames.focused).classList.remove(classNames.focused);\n                }\n            }\n            if (this.listViewInstance.getLiFromObjOrElement(obj)) {\n                if (this.listViewInstance.showCheckBox) {\n                    this.listViewInstance.setCheckboxLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n                else {\n                    this.listViewInstance.setSelectLI(this.listViewInstance.getLiFromObjOrElement(obj));\n                }\n            }\n            else {\n                var eventArgs = void 0;\n                if (typeof this.listViewInstance.dataSource[0] === 'string' ||\n                    typeof this.listViewInstance.dataSource[0] === 'number') {\n                    eventArgs = {\n                        text: this.listViewInstance.curViewDS[this.activeIndex],\n                        data: this.listViewInstance.curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                else {\n                    var curViewDS = this.listViewInstance.curViewDS;\n                    eventArgs = {\n                        text: curViewDS[this.activeIndex][this.listViewInstance.fields.text],\n                        data: curViewDS[this.activeIndex],\n                        index: this.activeIndex\n                    };\n                }\n                if (this.listViewInstance.showCheckBox) {\n                    eventArgs.isChecked = isChecked;\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n                else if (!isSelected) {\n                    this.listViewInstance.removeSelect();\n                    this.listViewInstance.trigger('select', eventArgs);\n                }\n            }\n        }\n        else if (isNullOrUndefined(obj) && !this.listViewInstance.showCheckBox) {\n            this.listViewInstance.removeSelect();\n            this.activeIndex = undefined;\n        }\n        if (isBlazor() && this.listViewInstance.isServerRendered) {\n            // tslint:disable-next-line:no-any\n            var elementId = resutJSON.data[this.listViewInstance.fields.id];\n            // tslint:enable-next-line:no-any\n            if (this.listViewInstance.showCheckBox) {\n                if (!this.listViewInstance.previousSelectedItems.includes(elementId)) {\n                    this.listViewInstance.previousSelectedItems.push(elementId);\n                }\n                else {\n                    var indexPosition = this.listViewInstance.previousSelectedItems.indexOf(elementId);\n                    if (indexPosition > -1) {\n                        this.listViewInstance.previousSelectedItems.splice(indexPosition, 1);\n                    }\n                }\n            }\n            else {\n                this.listViewInstance.previousSelectedItems[0] = elementId;\n            }\n            this.listViewInstance.removeActiveClass();\n        }\n    };\n    Virtualization.prototype.enableItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (isBlazor() && this.listViewInstance.isServerRendered) {\n            var itemId = resutJSON.data[this.listViewInstance.fields.id];\n            if (!this.listViewInstance.enabledItems.includes(itemId)) {\n                this.listViewInstance.enabledItems.push(itemId);\n                this.listViewInstance.removeActiveClass();\n            }\n            if (this.listViewInstance.disabledItems.includes(itemId)) {\n                var indexPosition = this.listViewInstance.disabledItems.indexOf(itemId);\n                if (indexPosition > -1) {\n                    this.listViewInstance.disabledItems.splice(indexPosition, 1);\n                }\n            }\n        }\n        else {\n            if (Object.keys(resutJSON).length) {\n                this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(resutJSON.index), 1);\n            }\n        }\n    };\n    Virtualization.prototype.disableItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (isBlazor() && this.listViewInstance.isServerRendered) {\n            var liElementId = resutJSON.data[this.listViewInstance.fields.id];\n            if (!this.listViewInstance.disabledItems.includes(liElementId)) {\n                this.listViewInstance.disabledItems.push(liElementId);\n                this.listViewInstance.removeActiveClass();\n            }\n            if (this.listViewInstance.enabledItems.includes(liElementId)) {\n                var indexPosition = this.listViewInstance.enabledItems.indexOf(liElementId);\n                if (indexPosition > -1) {\n                    this.listViewInstance.enabledItems.splice(indexPosition, 1);\n                }\n            }\n        }\n        else {\n            if (Object.keys(resutJSON).length && this.uiIndices.disabledItemIndices.indexOf(resutJSON.index) === -1) {\n                this.uiIndices.disabledItemIndices.push(resutJSON.index);\n            }\n        }\n    };\n    Virtualization.prototype.showItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (isBlazor() && this.listViewInstance.isServerRendered) {\n            // tslint:disable-next-line:no-any\n            var hiddenElementId = resutJSON.data[this.listViewInstance.fields.id];\n            // tslint:enable-next-line:no-any\n            if (this.listViewInstance.hiddenItems.includes(hiddenElementId)) {\n                var indexPosition = this.listViewInstance.hiddenItems.indexOf(hiddenElementId);\n                if (indexPosition > -1) {\n                    this.listViewInstance.previousSelectedItems.splice(indexPosition, 1);\n                    this.listViewInstance.removeActiveClass();\n                }\n            }\n        }\n        else {\n            if (Object.keys(resutJSON).length) {\n                this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index), 1);\n            }\n        }\n    };\n    Virtualization.prototype.hideItem = function (obj) {\n        var resutJSON = this.findDSAndIndexFromId(this.listViewInstance.curViewDS, obj);\n        if (isBlazor() && this.listViewInstance.isServerRendered) {\n            // tslint:disable-next-line:no-any\n            var elementId = resutJSON.data[this.listViewInstance.fields.id];\n            // tslint:enable-next-line:no-any\n            if (!this.listViewInstance.hiddenItems.includes(elementId)) {\n                this.listViewInstance.hiddenItems.push(elementId);\n                this.listViewInstance.removeActiveClass();\n            }\n        }\n        else {\n            if (Object.keys(resutJSON).length && this.uiIndices.hiddenItemIndices.indexOf(resutJSON.index) === -1) {\n                this.uiIndices.hiddenItemIndices.push(resutJSON.index);\n            }\n        }\n    };\n    Virtualization.prototype.removeItem = function (obj) {\n        var dataSource;\n        var curViewDS = this.listViewInstance.curViewDS;\n        var resutJSON = this.findDSAndIndexFromId(curViewDS, obj);\n        if (isBlazor() && this.listViewInstance.isServerRendered) {\n            if (resutJSON.index !== undefined) {\n                // tslint:disable\n                this.listViewInstance.interopAdaptor.invokeMethodAsync('RemoveItemPosition', resutJSON.index);\n                // tslint:enable\n            }\n        }\n        if (Object.keys(resutJSON).length) {\n            dataSource = resutJSON.data;\n            if (curViewDS[resutJSON.index - 1] &&\n                curViewDS[resutJSON.index - 1].isHeader &&\n                (curViewDS[resutJSON.index - 1])\n                    .items.length === 1) {\n                this.removeUiItem(resutJSON.index - 1);\n                this.removeUiItem(resutJSON.index - 1);\n            }\n            else {\n                if (!(isBlazor() && this.listViewInstance.isServerRendered)) {\n                    this.removeUiItem(resutJSON.index);\n                }\n            }\n        }\n        var listDataSource = this.listViewInstance.dataSource instanceof DataManager\n            ? this.listViewInstance.localData : this.listViewInstance.dataSource;\n        var index = listDataSource.indexOf(dataSource);\n        if (index !== -1) {\n            listDataSource.splice(index, 1);\n            this.listViewInstance.setViewDataSource(listDataSource);\n        }\n        // recollect all the list item into collection\n        this.listViewInstance.liCollection =\n            this.listViewInstance.curUL.querySelectorAll('li');\n    };\n    Virtualization.prototype.setCheckboxLI = function (li, e) {\n        if (isBlazor() && this.listViewInstance.isServerRendered) {\n            this.uiFirstIndex = Math.round(this.listViewInstance.element.scrollTop / 36) - 4;\n            if (this.uiFirstIndex < 0) {\n                this.uiFirstIndex = 0;\n            }\n        }\n        var index = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n        if (li.classList.contains(classNames.selected)) {\n            if (this.uiIndices.activeIndices.indexOf(index) === -1) {\n                this.uiIndices.activeIndices.push(index);\n            }\n        }\n        else {\n            this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n        }\n    };\n    Virtualization.prototype.setSelectLI = function (li, e) {\n        this.activeIndex = Array.prototype.indexOf.call(this.listViewInstance.curUL.querySelectorAll('li'), li) + this.uiFirstIndex;\n    };\n    Virtualization.prototype.checkedItem = function (checked) {\n        if (checked) {\n            this.uiIndices.activeIndices = [];\n            this.activeIndex = undefined;\n            var data = this.listViewInstance.curViewDS;\n            for (var index = 0; index < data.length; index++) {\n                if (!data[index].isHeader) {\n                    this.uiIndices.activeIndices.push(index);\n                }\n            }\n        }\n        else {\n            this.activeIndex = undefined;\n            this.uiIndices.activeIndices = [];\n        }\n    };\n    Virtualization.prototype.addUiItem = function (index) {\n        // virtually new add list item based on the scollbar position\n        // if the scroll bar is at the top, just pretend the new item has been added since no UI\n        // change is required for the item that has been added at last but when scroll bar is at the bottom\n        // just detach top and inject into bottom to mimic new item is added\n        var curViewDs = this.listViewInstance.curViewDS;\n        this.changeUiIndices(index, true);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex++;\n        }\n        if (this.listViewInstance.showCheckBox &&\n            curViewDs[index][this.listViewInstance.fields.isChecked]) {\n            this.uiIndices.activeIndices.push(index);\n        }\n        if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n            this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n        }\n        if (parseFloat(this.bottomElement.style.height)) {\n            var liItem = this.listViewInstance.curUL.lastElementChild.previousSibling;\n            var target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            if (target) {\n                this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) + this.listItemHeight + 'px';\n                this.updateUI(liItem, index, target);\n            }\n        }\n        else {\n            var liItem = this.listViewInstance.curUL.firstElementChild.nextSibling;\n            var target = void 0;\n            if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n                target = this.listViewInstance.curUL.lastElementChild;\n            }\n            else {\n                target = this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 1]) ||\n                    this.listViewInstance.getLiFromObjOrElement(curViewDs[index + 2]);\n            }\n            this.topElement.style.height = parseFloat(this.topElement.style.height) + this.listItemHeight + 'px';\n            this.uiFirstIndex++;\n            this.uiLastIndex++;\n            if (target) {\n                this.updateUI(liItem, index, target);\n                this.listViewInstance.isWindow ? window.scrollTo(0, (pageYOffset + this.listItemHeight)) :\n                    this.listViewInstance.element.scrollTop += this.listItemHeight;\n            }\n        }\n        this.totalHeight += this.listItemHeight;\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.removeUiItem = function (index) {\n        this.totalHeight -= this.listItemHeight;\n        var curViewDS = this.listViewInstance.curViewDS[index];\n        var liItem = this.listViewInstance.getLiFromObjOrElement(curViewDS);\n        this.listViewInstance.curViewDS.splice(index, 1);\n        if (this.activeIndex && this.activeIndex >= index) {\n            this.activeIndex--;\n        }\n        if (liItem) {\n            if (this.domItemCount > Object.keys(this.listViewInstance.curViewDS).length) {\n                detach(liItem);\n                this.domItemCount--;\n                this.uiLastIndex--;\n                this.totalHeight = 0;\n            }\n            else {\n                if (liItem.classList.contains(classNames.disable)) {\n                    liItem.classList.remove(classNames.disable);\n                    this.uiIndices.disabledItemIndices.splice(this.uiIndices.disabledItemIndices.indexOf(index), 1);\n                }\n                if (liItem.style.display === 'none') {\n                    liItem.style.display = '';\n                    this.uiIndices.hiddenItemIndices.splice(this.uiIndices.hiddenItemIndices.indexOf(index), 1);\n                }\n                if (this.listViewInstance.showCheckBox && liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.uiIndices.activeIndices.splice(this.uiIndices.activeIndices.indexOf(index), 1);\n                    var checklistElement = liItem.querySelector('.' + classNames.checkboxWrapper);\n                    checklistElement.removeAttribute('aria-checked');\n                    checklistElement.firstElementChild.classList.remove(classNames.checked);\n                    if (liItem.classList.contains(classNames.focused)) {\n                        liItem.classList.remove(classNames.focused);\n                        this.activeIndex = undefined;\n                    }\n                }\n                else if (liItem.classList.contains(classNames.selected)) {\n                    this.listViewInstance.removeSelect();\n                    this.activeIndex = undefined;\n                }\n                if (!parseFloat(this.bottomElement.style.height) && !parseFloat(this.topElement.style.height)) {\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else if (parseFloat(this.bottomElement.style.height)) {\n                    this.bottomElement.style.height = parseFloat(this.bottomElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, this.uiLastIndex, this.bottomElement);\n                }\n                else {\n                    this.topElement.style.height = parseFloat(this.topElement.style.height) - this.listItemHeight + 'px';\n                    this.updateUI(liItem, (this.uiFirstIndex - 1), this.topElement.nextSibling);\n                    this.uiLastIndex--;\n                    this.uiFirstIndex--;\n                }\n            }\n        }\n        this.changeUiIndices(index, false);\n        this.listDiff = Math.round(parseFloat(this.topElement.style.height) / this.listItemHeight);\n    };\n    Virtualization.prototype.changeUiIndices = function (index, increment) {\n        var keys = Object.keys(this.uiIndices);\n        for (var ind = 0; ind < keys.length; ind++) {\n            this.uiIndices[keys[ind]] = this.uiIndices[keys[ind]].map(function (i) {\n                if (i >= index) {\n                    return increment ? ++i : --i;\n                }\n                else {\n                    return i;\n                }\n            });\n        }\n    };\n    Virtualization.prototype.addItem = function (data, fields, dataSource) {\n        for (var i = 0; i < data.length; i++) {\n            var currentItem = data[i];\n            // push the given data to main data array\n            dataSource.push(currentItem);\n            // recalculate all the group data or other datasource related things\n            this.listViewInstance.setViewDataSource(dataSource);\n            // render list items for first time due to no datasource present earlier\n            if (!this.domItemCount) {\n                // fresh rendering for first time\n                if ((this.listViewInstance.template || this.listViewInstance.groupTemplate) && !this.isNgTemplate()) {\n                    this.listViewInstance.listBaseOption.template = null;\n                    this.listViewInstance.listBaseOption.groupTemplate = null;\n                    this.listViewInstance.listBaseOption.itemCreated = this.createUIItem.bind(this);\n                }\n                this.uiVirtualization();\n                // when expected expected DOM count doesn't meet the condition we need to create and inject new item into DOM\n            }\n            else if (this.domItemCount < this.expectedDomItemCount) {\n                var ds = this.listViewInstance.findItemFromDS(dataSource, fields);\n                if (ds instanceof Array) {\n                    if (this.listViewInstance.ulElement) {\n                        var index = this.listViewInstance.curViewDS.indexOf(currentItem);\n                        // inject new list item into DOM\n                        this.createAndInjectNewItem(currentItem, index);\n                        // check for group header item\n                        var curViewDS = this.listViewInstance.curViewDS[index - 1];\n                        if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                            // target group item index in datasource\n                            --index;\n                            // inject new group header into DOM for previously created list item\n                            this.createAndInjectNewItem(curViewDS, index);\n                        }\n                    }\n                    // recollect all the list item into collection\n                    this.listViewInstance.liCollection =\n                        this.listViewInstance.curUL.querySelectorAll('li');\n                }\n            }\n            else {\n                var index = this.listViewInstance.curViewDS.indexOf(currentItem);\n                // virtually new add list item based on the scollbar position\n                this.addUiItem(index);\n                // check for group header item needs to be added\n                var curViewDS = this.listViewInstance.curViewDS[index - 1];\n                if (curViewDS && curViewDS.isHeader && curViewDS.items.length === 1) {\n                    this.addUiItem(index - 1);\n                }\n            }\n        }\n    };\n    Virtualization.prototype.createAndInjectNewItem = function (itemData, index) {\n        // generate li item for given datasource\n        var target;\n        var li = ListBase.createListItemFromJson(this.listViewInstance.createElement, [itemData], this.listViewInstance.listBaseOption, null, null, this);\n        // check for target element whether to insert before last item or group item\n        if ((Object.keys(this.listViewInstance.curViewDS).length - 1) === index) {\n            target = this.listViewInstance.curUL.lastElementChild;\n        }\n        else {\n            // target group header's first child item to append its header\n            target = this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 1]) ||\n                this.listViewInstance.getLiFromObjOrElement(this.listViewInstance.curViewDS[index + 2]);\n        }\n        // insert before the target element\n        this.listViewInstance.ulElement.insertBefore(li[0], target);\n        // increment internal DOM count, last index count for new element\n        this.domItemCount++;\n        if (this.bottomElementHeight <= 0) {\n            this.uiLastIndex++;\n        }\n        // recalculate the current item height, to avoid jumpy scroller\n        this.refreshItemHeight();\n    };\n    Virtualization.prototype.createUIItem = function (args) {\n        var virtualTemplate = this.listViewInstance.template;\n        var template = this.listViewInstance.createElement('div');\n        var commonTemplate = '<div class=\"e-text-content\" role=\"presentation\"> ' +\n            '<span class=\"e-list-text\"> ${' + this.listViewInstance.fields.text + '} </span></div>';\n        if (this.listViewInstance.showCheckBox) {\n            // tslint:disable-next-line:no-any\n            this.listViewInstance.renderCheckbox(args);\n            // tslint:enable-next-line:no-any\n            if ((!isNullOrUndefined(this.listViewInstance.virtualCheckBox)) &&\n                (!isNullOrUndefined(this.listViewInstance.virtualCheckBox.outerHTML))) {\n                var div = document.createElement('div');\n                div.innerHTML = this.listViewInstance.template || commonTemplate;\n                div.children[0].classList.add('e-checkbox');\n                this.listViewInstance.checkBoxPosition === 'Left' ? div.children[0].classList.add('e-checkbox-left') :\n                    div.children[0].classList.add('e-checkbox-right');\n                if (this.listViewInstance.checkBoxPosition === 'Left') {\n                    div.children[0].insertBefore(this.listViewInstance.virtualCheckBox, div.childNodes[0].children[0]);\n                }\n                else {\n                    div.children[0].appendChild(this.listViewInstance.virtualCheckBox);\n                }\n                this.listViewInstance.template = div.innerHTML;\n            }\n            template.innerHTML = this.listViewInstance.template;\n            this.listViewInstance.template = virtualTemplate;\n        }\n        else {\n            template.innerHTML = this.listViewInstance.template || commonTemplate;\n        }\n        // tslint:disable-next-line:no-any\n        var templateElements = template.getElementsByTagName('*');\n        var groupTemplate = this.listViewInstance.createElement('div');\n        if (this.listViewInstance.fields.groupBy) {\n            groupTemplate.innerHTML = this.listViewInstance.groupTemplate || commonTemplate;\n        }\n        // tslint:disable-next-line:no-any\n        var groupTemplateElements = groupTemplate.getElementsByTagName('*');\n        if (args.curData.isHeader) {\n            this.headerData = args.curData;\n        }\n        this.templateData = args.curData.isHeader ? args.curData.items[0] :\n            args.curData;\n        args.item.innerHTML = '';\n        args.item.context = { data: args.curData, nodes: { flatTemplateNodes: [], groupTemplateNodes: [] } };\n        for (var i = 0; i < templateElements.length; i++) {\n            this.compileTemplate(templateElements[i], args.item, false);\n        }\n        for (var i = 0; i < groupTemplateElements.length; i++) {\n            this.compileTemplate(groupTemplateElements[i], args.item, true);\n        }\n        args.item.context.template = args.curData.isHeader ? template.firstElementChild :\n            groupTemplate.firstElementChild;\n        args.item.context.type = args.curData.isHeader ? 'flatList' : 'groupList';\n        var element = args.curData.isHeader ? groupTemplate : template;\n        args.item.insertBefore(element.firstElementChild, null);\n    };\n    Virtualization.prototype.compileTemplate = function (element, item, isHeader) {\n        this.textProperty(element, item, isHeader);\n        this.classProperty(element, item, isHeader);\n        this.attributeProperty(element, item, isHeader);\n    };\n    Virtualization.prototype.onChange = function (newData, listElement) {\n        listElement.context.data = newData;\n        var groupTemplateNodes = listElement.context.nodes.groupTemplateNodes;\n        var flatTemplateNodes = listElement.context.nodes.flatTemplateNodes;\n        if (!isNullOrUndefined(newData.isHeader) && newData.isHeader && listElement.context.type === 'groupList') {\n            var element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'flatList';\n            for (var i = 0; i < groupTemplateNodes.length; i++) {\n                groupTemplateNodes[i].onChange(newData);\n            }\n        }\n        else if (!newData.isHeader && listElement.context.type === 'flatList') {\n            var element = listElement.firstElementChild;\n            detach(listElement.firstElementChild);\n            listElement.insertBefore(listElement.context.template, null);\n            listElement.context.template = element;\n            listElement.context.type = 'groupList';\n            for (var i = 0; i < flatTemplateNodes.length; i++) {\n                flatTemplateNodes[i].onChange(newData);\n            }\n        }\n        else if (!newData.isHeader) {\n            for (var i = 0; i < flatTemplateNodes.length; i++) {\n                flatTemplateNodes[i].onChange(newData);\n            }\n        }\n        else {\n            for (var i = 0; i < groupTemplateNodes.length; i++) {\n                groupTemplateNodes[i].onChange(newData);\n            }\n        }\n    };\n    Virtualization.prototype.updateContextData = function (listElement, node, isHeader) {\n        if (isHeader) {\n            listElement.context.nodes.groupTemplateNodes.push(node);\n        }\n        else {\n            listElement.context.nodes.flatTemplateNodes.push(node);\n        }\n    };\n    Virtualization.prototype.classProperty = function (element, listElement, isHeader) {\n        var regex = new RegExp('\\\\${([^}]*)}', 'g');\n        var resultantOutput = [];\n        var regexMatch;\n        while (regexMatch !== null) {\n            var match = regex.exec(element.className);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        if (resultantOutput && resultantOutput.length) {\n            var _loop_1 = function (i) {\n                var classNameMatch = resultantOutput[i];\n                var classFunction;\n                if (classNameMatch[1].indexOf('?') !== -1 && classNameMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + classNameMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    classFunction = new Function('data', 'return ' + 'data.' + classNameMatch[1]);\n                }\n                var subNode = {};\n                if (isHeader) {\n                    subNode.bindedvalue = classFunction(this_1.headerData);\n                }\n                else {\n                    subNode.bindedvalue = classFunction(this_1.templateData);\n                }\n                subNode.onChange = function (value) {\n                    if (subNode.bindedvalue) {\n                        removeClass([element], subNode.bindedvalue.split(' ').filter(function (css) { return css; }));\n                    }\n                    var newCss = classFunction(value);\n                    if (newCss) {\n                        addClass([element], (newCss).split(' ').filter(function (css) { return css; }));\n                    }\n                    subNode.bindedvalue = newCss;\n                };\n                var className = classNameMatch[0].split(' ');\n                for (var i_1 = 0; i_1 < className.length; i_1++) {\n                    element.classList.remove(className[i_1]);\n                }\n                if (subNode.bindedvalue) {\n                    addClass([element], subNode.bindedvalue.split(' ').filter(function (css) { return css; }));\n                }\n                this_1.updateContextData(listElement, subNode, isHeader);\n            };\n            var this_1 = this;\n            for (var i = 0; i < resultantOutput.length; i++) {\n                _loop_1(i);\n            }\n        }\n    };\n    Virtualization.prototype.attributeProperty = function (element, listElement, isHeader) {\n        var attributeNames = [];\n        for (var i = 0; i < element.attributes.length; i++) {\n            attributeNames.push(element.attributes[i].nodeName);\n        }\n        if (attributeNames.indexOf('class') !== -1) {\n            attributeNames.splice(attributeNames.indexOf('class'), 1);\n        }\n        var _loop_2 = function (i) {\n            var attributeName = attributeNames[i];\n            var attrNameMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(attributeName) || [];\n            var attrValueMatch = new RegExp('\\\\${([^}]*)}', 'g').exec(element.getAttribute(attributeName))\n                || [];\n            var attributeNameFunction;\n            var attributeValueFunction;\n            if (attrNameMatch.length || attrValueMatch.length) {\n                if (attrNameMatch[1]) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    attributeNameFunction = new Function('data', 'return ' + 'data.' + attrNameMatch[1]);\n                }\n                if (attrValueMatch[1]) {\n                    if (attrValueMatch[1].indexOf('?') !== -1 && attrValueMatch[1].indexOf(':') !== -1) {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + attrValueMatch[1].replace(/\\$/g, 'data.'));\n                    }\n                    else {\n                        // tslint:disable-next-line:no-function-constructor-with-string-args\n                        attributeValueFunction = new Function('data', 'return ' + 'data.' + attrValueMatch[1]);\n                    }\n                }\n                var subNode_1 = {};\n                if (isHeader) {\n                    subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.headerData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.headerData)];\n                }\n                else {\n                    subNode_1.bindedvalue = [attrNameMatch[1] === undefined ? undefined : attributeNameFunction(this_2.templateData),\n                        attrValueMatch[1] === undefined ? undefined : attributeValueFunction(this_2.templateData)];\n                }\n                subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ?\n                    attributeName : subNode_1.bindedvalue[0];\n                subNode_1.onChange = function (value) {\n                    var bindedvalue = subNode_1.bindedvalue[1] === undefined ?\n                        element.getAttribute(subNode_1.attrName) : attributeValueFunction(value);\n                    element.removeAttribute(subNode_1.attrName);\n                    subNode_1.attrName = subNode_1.bindedvalue[0] === undefined ? subNode_1.attrName : attributeNameFunction(value);\n                    element.setAttribute(subNode_1.attrName, bindedvalue);\n                    subNode_1.bindedvalue = [subNode_1.bindedvalue[0] === undefined ? undefined : attributeNameFunction(value),\n                        subNode_1.bindedvalue[1] === undefined ? undefined : attributeValueFunction(value)];\n                };\n                var attributeValue = subNode_1.bindedvalue[1] === undefined ? element.getAttribute(attributeName) :\n                    subNode_1.bindedvalue[1];\n                element.removeAttribute(attributeName);\n                element.setAttribute(subNode_1.attrName, attributeValue);\n                this_2.updateContextData(listElement, subNode_1, isHeader);\n            }\n        };\n        var this_2 = this;\n        for (var i = 0; i < attributeNames.length; i++) {\n            _loop_2(i);\n        }\n    };\n    Virtualization.prototype.textProperty = function (element, listElement, isHeader) {\n        var regex = new RegExp('\\\\${([^}]*)}', 'g');\n        var resultantOutput = [];\n        var regexMatch;\n        while (regexMatch !== null) {\n            var match = regex.exec(element.innerText);\n            resultantOutput.push(match);\n            regexMatch = match;\n            if (regexMatch === null) {\n                resultantOutput.pop();\n            }\n        }\n        var isChildHasTextContent = Array.prototype.some.call(element.children, function (element) {\n            if (new RegExp('\\\\${([^}]*)}', 'g').exec(element.innerText)) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        if (resultantOutput && resultantOutput.length && !isChildHasTextContent) {\n            var _loop_3 = function (i) {\n                var textPropertyMatch = resultantOutput[i];\n                var subNode = {};\n                var textFunction;\n                if (textPropertyMatch[1].indexOf('?') !== -1 && textPropertyMatch[1].indexOf(':') !== -1) {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + textPropertyMatch[1].replace(/\\$/g, 'data.'));\n                }\n                else {\n                    // tslint:disable-next-line:no-function-constructor-with-string-args\n                    textFunction = new Function('data', 'return ' + 'data.' + textPropertyMatch[1]);\n                }\n                if (isHeader) {\n                    subNode.bindedvalue = textFunction(this_3.headerData);\n                }\n                else {\n                    subNode.bindedvalue = textFunction(this_3.templateData);\n                }\n                subNode.onChange = function (value) {\n                    element.innerText = element.innerText.replace(subNode.bindedvalue, textFunction(value));\n                    subNode.bindedvalue = textFunction(value);\n                };\n                element.innerText = element.innerText.replace(textPropertyMatch[0], subNode.bindedvalue);\n                this_3.updateContextData(listElement, subNode, isHeader);\n            };\n            var this_3 = this;\n            for (var i = 0; i < resultantOutput.length; i++) {\n                _loop_3(i);\n            }\n        }\n    };\n    Virtualization.prototype.reRenderUiVirtualization = function () {\n        this.wireScrollEvent(true);\n        if (this.listViewInstance.contentContainer) {\n            detach(this.listViewInstance.contentContainer);\n        }\n        this.listViewInstance.preRender();\n        // resetting the dom count to 0, to avoid edge case of dataSource suddenly becoming zero\n        // and then manually adding item using addItem API\n        this.domItemCount = 0;\n        this.listViewInstance.header();\n        this.listViewInstance.setLocalData();\n    };\n    Virtualization.prototype.updateUI = function (element, index, targetElement) {\n        var onChange = this.isNgTemplate() ? this.onNgChange : this.onChange;\n        if (this.listViewInstance.template || this.listViewInstance.groupTemplate) {\n            var curViewDS = this.listViewInstance.curViewDS[index];\n            element.dataset.uid = curViewDS[this.listViewInstance.fields.id] ?\n                curViewDS[this.listViewInstance.fields.id].toString() : ListBase.generateId();\n            onChange(curViewDS, element, this);\n        }\n        else {\n            this.updateUiContent(element, index);\n        }\n        this.changeElementAttributes(element, index);\n        if (targetElement) {\n            this.listViewInstance.ulElement.insertBefore(element, targetElement);\n        }\n    };\n    Virtualization.prototype.onNgChange = function (newData, listElement, virtualThis) {\n        // compile given target element with template for new data\n        var templateCompiler = compile(virtualThis.listViewInstance.template);\n        var resultElement = templateCompiler(newData);\n        while (listElement.lastChild) {\n            listElement.removeChild(listElement.lastChild);\n        }\n        listElement.appendChild(resultElement[0]);\n    };\n    Virtualization.prototype.getModuleName = function () {\n        return 'virtualization';\n    };\n    Virtualization.prototype.destroy = function () {\n        this.wireScrollEvent(true);\n    };\n    return Virtualization;\n}());\nexport { Virtualization };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}