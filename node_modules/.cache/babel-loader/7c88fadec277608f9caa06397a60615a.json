{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\n\nvar PdfFontMetrics =\n/** @class */\nfunction () {\n  function PdfFontMetrics() {\n    /**\n     * `Line gap`.\n     * @private\n     */\n    this.lineGap = 0;\n  } //  Public methods\n\n  /**\n   * Returns `ascent` taking into consideration font`s size.\n   * @private\n   */\n\n\n  PdfFontMetrics.prototype.getAscent = function (format) {\n    var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n    return returnValue;\n  };\n  /**\n   * Returns `descent` taking into consideration font`s size.\n   * @private\n   */\n\n\n  PdfFontMetrics.prototype.getDescent = function (format) {\n    var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n    return returnValue;\n  };\n  /**\n   * Returns `Line gap` taking into consideration font`s size.\n   * @private\n   */\n\n\n  PdfFontMetrics.prototype.getLineGap = function (format) {\n    var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n    return returnValue;\n  };\n  /**\n   * Returns `height` taking into consideration font`s size.\n   * @private\n   */\n\n\n  PdfFontMetrics.prototype.getHeight = function (format) {\n    var height;\n    var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n    var clearTypeFontCollection = [];\n\n    for (var index = 0; index < clearTypeFonts.length; index++) {\n      var font = clearTypeFonts[index];\n      clearTypeFontCollection.push(font);\n    }\n\n    if (this.getDescent(format) < 0) {\n      // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n      //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n      // } else {\n      height = this.getAscent(format) - this.getDescent(format) + this.getLineGap(format); // }\n    } else {\n      height = this.getAscent(format) + this.getDescent(format) + this.getLineGap(format);\n    }\n\n    return height;\n  };\n  /**\n   * Calculates `size` of the font depending on the subscript/superscript value.\n   * @private\n   */\n\n\n  PdfFontMetrics.prototype.getSize = function (format) {\n    var size = this.size;\n\n    if (format != null) {\n      switch (format.subSuperScript) {\n        case PdfSubSuperScript.SubScript:\n          size /= this.subScriptSizeFactor;\n          break;\n\n        case PdfSubSuperScript.SuperScript:\n          size /= this.superscriptSizeFactor;\n          break;\n      }\n    }\n\n    return size;\n  };\n  /**\n   * `Clones` the metrics.\n   * @private\n   */\n\n\n  PdfFontMetrics.prototype.clone = function () {\n    var metrics = this;\n    metrics.widthTable = WidthTable.clone();\n    return metrics;\n  };\n\n  Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n    //  Properies\n\n    /**\n     * Gets or sets the `width table`.\n     * @private\n     */\n    get: function () {\n      return this.internalWidthTable;\n    },\n    set: function (value) {\n      this.internalWidthTable = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfFontMetrics;\n}();\n\nexport { PdfFontMetrics };\n\nvar WidthTable =\n/** @class */\nfunction () {\n  function WidthTable() {}\n  /**\n   * Static `clones` this instance of the WidthTable class.\n   * @private\n   */\n\n\n  WidthTable.clone = function () {\n    return null;\n  };\n\n  return WidthTable;\n}();\n\nexport { WidthTable };\n\nvar StandardWidthTable =\n/** @class */\nfunction (_super) {\n  __extends(StandardWidthTable, _super); // Constructors\n\n  /**\n   * Initializes a new instance of the `StandardWidthTable` class.\n   * @private\n   */\n\n\n  function StandardWidthTable(widths) {\n    var _this = _super.call(this) || this;\n\n    if (widths == null) {\n      throw new Error('ArgumentNullException:widths');\n    }\n\n    _this.widths = widths;\n    return _this;\n  } //Properties\n\n  /**\n   * Gets the `32 bit number` at the specified index.\n   * @private\n   */\n\n\n  StandardWidthTable.prototype.items = function (index) {\n    if (index < 0 || index >= this.widths.length) {\n      throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n    }\n\n    var result = this.widths[index];\n    return result;\n  };\n\n  Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n    /**\n     * Gets the `length` of the internal array.\n     * @private\n     */\n    get: function () {\n      return this.widths.length;\n    },\n    enumerable: true,\n    configurable: true\n  }); //Overrides\n\n  /**\n   * `Clones` this instance of the WidthTable class.\n   * @private\n   */\n\n  StandardWidthTable.prototype.clone = function () {\n    var swt = this;\n    swt.widths = this.widths;\n    return swt;\n  };\n  /**\n   * Converts width table to a `PDF array`.\n   * @private\n   */\n\n\n  StandardWidthTable.prototype.toArray = function () {\n    var arr = new PdfArray(this.widths);\n    return arr;\n  };\n\n  return StandardWidthTable;\n}(WidthTable);\n\nexport { StandardWidthTable };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","PdfFont","PdfSubSuperScript","PdfArray","PdfFontMetrics","lineGap","getAscent","format","returnValue","ascent","charSizeMultiplier","getSize","getDescent","descent","getLineGap","getHeight","height","clearTypeFonts","clearTypeFontCollection","index","length","font","push","size","subSuperScript","SubScript","subScriptSizeFactor","SuperScript","superscriptSizeFactor","clone","metrics","widthTable","WidthTable","defineProperty","get","internalWidthTable","set","value","enumerable","configurable","StandardWidthTable","_super","widths","_this","call","Error","items","result","swt","toArray","arr"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/fonts/pdf-font-metrics.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { PdfFont } from './pdf-font';\nimport { PdfSubSuperScript } from './enum';\nimport { PdfArray } from './../../primitives/pdf-array';\n/**\n * `Metrics` of the font.\n * @private\n */\nvar PdfFontMetrics = /** @class */ (function () {\n    function PdfFontMetrics() {\n        /**\n         * `Line gap`.\n         * @private\n         */\n        this.lineGap = 0;\n    }\n    //  Public methods\n    /**\n     * Returns `ascent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getAscent = function (format) {\n        var returnValue = this.ascent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `descent` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getDescent = function (format) {\n        var returnValue = this.descent * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `Line gap` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getLineGap = function (format) {\n        var returnValue = this.lineGap * PdfFont.charSizeMultiplier * this.getSize(format);\n        return returnValue;\n    };\n    /**\n     * Returns `height` taking into consideration font`s size.\n     * @private\n     */\n    PdfFontMetrics.prototype.getHeight = function (format) {\n        var height;\n        var clearTypeFonts = ['cambria', 'candara', 'constantia', 'corbel', 'cariadings'];\n        var clearTypeFontCollection = [];\n        for (var index = 0; index < clearTypeFonts.length; index++) {\n            var font = clearTypeFonts[index];\n            clearTypeFontCollection.push(font);\n        }\n        if (this.getDescent(format) < 0) {\n            // if ((clearTypeFontCollection.indexOf(this.name.toLowerCase()) !== -1) && !this.isUnicodeFont) {\n            //     height = (this.GetAscent(format) - this.GetDescent(format) - this.GetLineGap(format));\n            // } else {\n            height = (this.getAscent(format) - this.getDescent(format) + this.getLineGap(format));\n            // }\n        }\n        else {\n            height = (this.getAscent(format) + this.getDescent(format) + this.getLineGap(format));\n        }\n        return height;\n    };\n    /**\n     * Calculates `size` of the font depending on the subscript/superscript value.\n     * @private\n     */\n    PdfFontMetrics.prototype.getSize = function (format) {\n        var size = this.size;\n        if (format != null) {\n            switch (format.subSuperScript) {\n                case PdfSubSuperScript.SubScript:\n                    size /= this.subScriptSizeFactor;\n                    break;\n                case PdfSubSuperScript.SuperScript:\n                    size /= this.superscriptSizeFactor;\n                    break;\n            }\n        }\n        return size;\n    };\n    /**\n     * `Clones` the metrics.\n     * @private\n     */\n    PdfFontMetrics.prototype.clone = function () {\n        var metrics = this;\n        metrics.widthTable = WidthTable.clone();\n        return metrics;\n    };\n    Object.defineProperty(PdfFontMetrics.prototype, \"widthTable\", {\n        //  Properies\n        /**\n         * Gets or sets the `width table`.\n         * @private\n         */\n        get: function () {\n            return this.internalWidthTable;\n        },\n        set: function (value) {\n            this.internalWidthTable = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfFontMetrics;\n}());\nexport { PdfFontMetrics };\nvar WidthTable = /** @class */ (function () {\n    function WidthTable() {\n    }\n    /**\n     * Static `clones` this instance of the WidthTable class.\n     * @private\n     */\n    WidthTable.clone = function () {\n        return null;\n    };\n    return WidthTable;\n}());\nexport { WidthTable };\nvar StandardWidthTable = /** @class */ (function (_super) {\n    __extends(StandardWidthTable, _super);\n    // Constructors\n    /**\n     * Initializes a new instance of the `StandardWidthTable` class.\n     * @private\n     */\n    function StandardWidthTable(widths) {\n        var _this = _super.call(this) || this;\n        if (widths == null) {\n            throw new Error('ArgumentNullException:widths');\n        }\n        _this.widths = widths;\n        return _this;\n    }\n    //Properties\n    /**\n     * Gets the `32 bit number` at the specified index.\n     * @private\n     */\n    StandardWidthTable.prototype.items = function (index) {\n        if (index < 0 || index >= this.widths.length) {\n            throw new Error('ArgumentOutOfRangeException:index, The character is not supported by the font.');\n        }\n        var result = this.widths[index];\n        return result;\n    };\n    Object.defineProperty(StandardWidthTable.prototype, \"length\", {\n        /**\n         * Gets the `length` of the internal array.\n         * @private\n         */\n        get: function () {\n            return this.widths.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Overrides\n    /**\n     * `Clones` this instance of the WidthTable class.\n     * @private\n     */\n    StandardWidthTable.prototype.clone = function () {\n        var swt = this;\n        swt.widths = this.widths;\n        return swt;\n    };\n    /**\n     * Converts width table to a `PDF array`.\n     * @private\n     */\n    StandardWidthTable.prototype.toArray = function () {\n        var arr = new PdfArray(this.widths);\n        return arr;\n    };\n    return StandardWidthTable;\n}(WidthTable));\nexport { StandardWidthTable };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}