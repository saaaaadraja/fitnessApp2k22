{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { firstToLowerCase } from '../../common/utils/helper';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `EmaIndicator` module is used to render EMA indicator.\n */\n\nvar EmaIndicator =\n/** @class */\nfunction (_super) {\n  __extends(EmaIndicator, _super);\n\n  function EmaIndicator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Defines the predictions based on EMA approach\n   * @private\n   */\n\n\n  EmaIndicator.prototype.initDataSource = function (indicator, chart) {\n    var field = firstToLowerCase(indicator.field);\n    var xField = 'x';\n    var emaPoints = [];\n    var signalSeries = indicator.targetSeries[0]; //prepare data\n\n    var validData = indicator.points;\n\n    if (validData && validData.length && validData.length >= indicator.period) {\n      //find initial average\n      var sum = 0;\n      var average = 0; //smoothing factor\n\n      var k = 2 / (indicator.period + 1);\n\n      for (var i = 0; i < indicator.period; i++) {\n        sum += validData[i][field];\n      }\n\n      average = sum / indicator.period;\n      emaPoints.push(this.getDataPoint(validData[indicator.period - 1][xField], average, validData[indicator.period - 1], signalSeries, emaPoints.length));\n      var index = indicator.period;\n\n      while (index < validData.length) {\n        //previous average\n        var prevAverage = emaPoints[index - indicator.period][signalSeries.yName];\n        var yValue = (validData[index][field] - prevAverage) * k + prevAverage;\n        emaPoints.push(this.getDataPoint(validData[index][xField], yValue, validData[index], signalSeries, emaPoints.length));\n        index++;\n      }\n    }\n\n    this.setSeriesRange(emaPoints, indicator);\n  };\n  /**\n   * To destroy the EMA Indicator\n   * @return {void}\n   * @private\n   */\n\n\n  EmaIndicator.prototype.destroy = function (chart) {\n    /**\n     * Destroys the EMA Indicator\n     */\n  };\n  /**\n   * Get module name.\n   */\n\n\n  EmaIndicator.prototype.getModuleName = function () {\n    /**\n     * Returns the module name of the series\n     */\n    return 'EmaIndicator';\n  };\n\n  return EmaIndicator;\n}(TechnicalAnalysis);\n\nexport { EmaIndicator };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","firstToLowerCase","TechnicalAnalysis","EmaIndicator","_super","apply","arguments","initDataSource","indicator","chart","field","xField","emaPoints","signalSeries","targetSeries","validData","points","length","period","sum","average","k","i","push","getDataPoint","index","prevAverage","yName","yValue","setSeriesRange","destroy","getModuleName"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-charts/src/chart/technical-indicators/ema-indicator.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { firstToLowerCase } from '../../common/utils/helper';\nimport { TechnicalAnalysis } from './indicator-base';\n/**\n * `EmaIndicator` module is used to render EMA indicator.\n */\nvar EmaIndicator = /** @class */ (function (_super) {\n    __extends(EmaIndicator, _super);\n    function EmaIndicator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Defines the predictions based on EMA approach\n     * @private\n     */\n    EmaIndicator.prototype.initDataSource = function (indicator, chart) {\n        var field = firstToLowerCase(indicator.field);\n        var xField = 'x';\n        var emaPoints = [];\n        var signalSeries = indicator.targetSeries[0];\n        //prepare data\n        var validData = indicator.points;\n        if (validData && validData.length && validData.length >= indicator.period) {\n            //find initial average\n            var sum = 0;\n            var average = 0;\n            //smoothing factor\n            var k = (2 / (indicator.period + 1));\n            for (var i = 0; i < indicator.period; i++) {\n                sum += validData[i][field];\n            }\n            average = sum / indicator.period;\n            emaPoints.push(this.getDataPoint(validData[indicator.period - 1][xField], average, validData[indicator.period - 1], signalSeries, emaPoints.length));\n            var index = indicator.period;\n            while (index < validData.length) {\n                //previous average\n                var prevAverage = emaPoints[index - indicator.period][signalSeries.yName];\n                var yValue = (validData[index][field] - prevAverage) * k + prevAverage;\n                emaPoints.push(this.getDataPoint(validData[index][xField], yValue, validData[index], signalSeries, emaPoints.length));\n                index++;\n            }\n        }\n        this.setSeriesRange(emaPoints, indicator);\n    };\n    /**\n     * To destroy the EMA Indicator\n     * @return {void}\n     * @private\n     */\n    EmaIndicator.prototype.destroy = function (chart) {\n        /**\n         * Destroys the EMA Indicator\n         */\n    };\n    /**\n     * Get module name.\n     */\n    EmaIndicator.prototype.getModuleName = function () {\n        /**\n         * Returns the module name of the series\n         */\n        return 'EmaIndicator';\n    };\n    return EmaIndicator;\n}(TechnicalAnalysis));\nexport { EmaIndicator };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}