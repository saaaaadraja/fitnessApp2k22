{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { GetResourceEventHandler } from './../pdf-graphics';\nimport { PdfBrush } from './pdf-brush';\nimport { PointF, SizeF, RectangleF, Rectangle } from './../../drawing/pdf-drawing';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfPage } from './../../pages/pdf-page';\n/**\n * `PdfTilingBrush` Implements a colored tiling brush.\n */\n\nvar PdfTilingBrush =\n/** @class */\nfunction (_super) {\n  __extends(PdfTilingBrush, _super);\n  /**\n   * Initializes a new instance of the `PdfTilingBrush` class.\n   * @public\n   */\n\n\n  function PdfTilingBrush(arg1, arg2) {\n    var _this = _super.call(this) || this;\n    /**\n     * Local variable to store Stroking.\n     * @private\n     */\n\n\n    _this.mStroking = false;\n    /**\n     * Local variable to store the tile start location.\n     * @private\n     */\n\n    _this.mLocation = new PointF(0, 0);\n    /**\n     * Local variable to store the dictionary properties.\n     * @private\n     */\n\n    _this.mDictionaryProperties = new DictionaryProperties();\n    var rect = null;\n\n    if (arg1 instanceof Rectangle) {\n      rect = arg1;\n    } else if (arg1 instanceof SizeF) {\n      rect = new Rectangle(0, 0, arg1.width, arg1.height);\n    }\n\n    if (arg2 !== null && arg2 instanceof PdfPage) {\n      _this.mPage = arg2;\n    }\n\n    _this.brushStream = new PdfStream();\n    _this.mResources = new PdfResources();\n\n    _this.brushStream.items.setValue(_this.mDictionaryProperties.resources, _this.mResources);\n\n    _this.setBox(rect);\n\n    _this.setObligatoryFields();\n\n    if (arg2 !== null && arg2 instanceof PdfPage) {\n      _this.mPage = arg2;\n      _this.graphics.colorSpace = arg2.document.colorSpace;\n    }\n\n    return _this;\n  }\n  /**\n   * Initializes a new instance of the `PdfTilingBrush` class.\n   * @private\n   * @param rectangle The size of the smallest brush cell.\n   * @param page The Current Page Object.\n   * @param location The Tile start location.\n   * @param matrix The matrix.\n   */\n\n\n  PdfTilingBrush.prototype.initialize = function (rectangle, page, location, matrix) {\n    this.mPage = page;\n    this.mLocation = location;\n    this.mTransformationMatrix = matrix;\n    this.tempBrushStream = this.brushStream;\n    this.brushStream = new PdfStream();\n    var tempResource = new PdfResources();\n    this.brushStream.items.setValue(this.mDictionaryProperties.resources, tempResource);\n    this.setBox(rectangle);\n    this.setObligatoryFields();\n    return this;\n  };\n\n  Object.defineProperty(PdfTilingBrush.prototype, \"location\", {\n    //Properties\n\n    /**\n     * Location representing the start position of the tiles.\n     * @public\n     */\n    get: function () {\n      return this.mLocation;\n    },\n    set: function (value) {\n      this.mLocation = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Sets the obligatory fields.\n   * @private\n   */\n\n  PdfTilingBrush.prototype.setObligatoryFields = function () {\n    this.brushStream.items.setValue(this.mDictionaryProperties.patternType, new PdfNumber(1)); //  Tiling brush.\n\n    this.brushStream.items.setValue(this.mDictionaryProperties.paintType, new PdfNumber(1)); //  Coloured.\n\n    this.brushStream.items.setValue(this.mDictionaryProperties.tilingType, new PdfNumber(1)); //  Constant spacing.\n\n    this.brushStream.items.setValue(this.mDictionaryProperties.xStep, new PdfNumber(this.mBox.right - this.mBox.left));\n    this.brushStream.items.setValue(this.mDictionaryProperties.yStep, new PdfNumber(this.mBox.bottom - this.mBox.top));\n\n    if (this.mPage != null && this.mLocation != null) {\n      if (this.mTransformationMatrix == null && typeof this.mTransformationMatrix === 'undefined') {\n        // Transform the tile origin to fit the location\n        var tileTransform = this.mPage.size.height % this.rectangle.size.height - this.mLocation.y;\n        /* tslint:disable-next-line:max-line-length */\n\n        this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([1, 0, 0, 1, this.mLocation.x, tileTransform]));\n      } else {\n        var tileTransform = 0; // Transform the tile origin to fit the location\n\n        var elements = this.mTransformationMatrix.matrix.elements;\n\n        if (this.mPage.size.height > this.rectangle.size.height) {\n          tileTransform = this.mTransformationMatrix.matrix.offsetY - this.mPage.size.height % this.rectangle.size.height;\n        } else {\n          tileTransform = this.mPage.size.height % this.rectangle.size.height + this.mTransformationMatrix.matrix.offsetY;\n        }\n\n        this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([elements[0], elements[1], elements[2], elements[3], elements[4], tileTransform]));\n      }\n    }\n  };\n  /**\n   * Sets the BBox coordinates.\n   * @private\n   */\n\n\n  PdfTilingBrush.prototype.setBox = function (box) {\n    this.mBox = box;\n    var rect = new RectangleF(this.mBox.left, this.mBox.top, this.mBox.right, this.mBox.bottom);\n    this.brushStream.items.setValue(this.mDictionaryProperties.bBox, PdfArray.fromRectangle(rect));\n  };\n\n  Object.defineProperty(PdfTilingBrush.prototype, \"rectangle\", {\n    //Properties\n\n    /**\n     * Gets the boundary box of the smallest brush cell.\n     * @public\n     */\n    get: function () {\n      return this.mBox;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTilingBrush.prototype, \"size\", {\n    /**\n     * Gets the size of the smallest brush cell.\n     * @public\n     */\n    get: function () {\n      return this.mBox.size;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfTilingBrush.prototype, \"graphics\", {\n    /**\n     * Gets Graphics context of the brush.\n     */\n    get: function () {\n      if (this.mGraphics == null && typeof this.mGraphics === 'undefined') {\n        var gr = new GetResourceEventHandler(this);\n        var g = new PdfGraphics(this.size, gr, this.brushStream);\n        this.mGraphics = g;\n        this.mResources = this.getResources();\n        this.mGraphics.initializeCoordinates();\n      }\n\n      return this.mGraphics;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\n   * Gets the resources and modifies the template dictionary.\n   * @public\n   */\n\n  PdfTilingBrush.prototype.getResources = function () {\n    return this.mResources;\n  };\n\n  Object.defineProperty(PdfTilingBrush.prototype, \"stroking\", {\n    /**\n     * Gets or sets a value indicating whether this PdfTilingBrush\n     * is used for stroking operations.\n     */\n    get: function () {\n      return this.mStroking;\n    },\n    set: function (value) {\n      this.mStroking = value;\n    },\n    enumerable: true,\n    configurable: true\n  }); //PdfBrush methods\n\n  /**\n   * Creates a new copy of a brush.\n   * @public\n   */\n\n  PdfTilingBrush.prototype.clone = function () {\n    var brush = this.initialize(this.rectangle, this.mPage, this.location, this.mTransformationMatrix);\n\n    if (this.mTransformationMatrix != null && this.mTransformationMatrix.matrix != null) {\n      /* tslint:disable-next-line:max-line-length */\n      brush.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray(this.mTransformationMatrix.matrix.elements));\n    }\n\n    brush.brushStream.data = this.tempBrushStream.data;\n    brush.mResources = new PdfResources(this.mResources);\n    brush.brushStream.items.setValue(this.mDictionaryProperties.resources, brush.mResources);\n    return brush;\n  };\n  /**\n   * Monitors the changes of the brush and modify PDF state respectfully.\n   * @param brush The brush\n   * @param streamWriter The stream writer\n   * @param getResources The get resources delegate.\n   * @param saveChanges if set to true the changes should be saved anyway.\n   * @param currentColorSpace The current color space.\n   */\n\n  /* tslint:disable-next-line:max-line-length */\n\n\n  PdfTilingBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n    var diff = false;\n\n    if (brush !== this) {\n      //  Set the Pattern colour space.\n      streamWriter.setColorSpace('Pattern', this.mStroking); //  Set the pattern for non-stroking operations.\n\n      var resources1 = getResources.getResources();\n      var name1 = resources1.getName(this);\n      streamWriter.setColourWithPattern(null, name1, this.mStroking);\n      diff = true;\n    } else if (brush instanceof PdfTilingBrush) {\n      //  Set the /Pattern colour space.\n      streamWriter.setColorSpace('Pattern', this.mStroking); //  Set the pattern for non-stroking operations.\n\n      var resources = getResources.getResources();\n      var name_1 = resources.getName(this);\n      streamWriter.setColourWithPattern(null, name_1, this.mStroking);\n      diff = true;\n    }\n\n    return diff;\n  };\n  /**\n   * Resets the changes, which were made by the brush.\n   * In other words resets the state to the initial one.\n   * @param streamWriter The stream writer.\n   */\n\n\n  PdfTilingBrush.prototype.resetChanges = function (streamWriter) {//  We shouldn't do anything to reset changes.\n    //  All changes will be reset automatically by setting a new colour space.\n  };\n\n  Object.defineProperty(PdfTilingBrush.prototype, \"element\", {\n    /* tslint:enable */\n    // IPdfWrapper Members\n\n    /**\n     * Gets the `element`.\n     * @public\n     */\n    get: function () {\n      return this.brushStream;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PdfTilingBrush;\n}(PdfBrush);\n\nexport { PdfTilingBrush };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","GetResourceEventHandler","PdfBrush","PointF","SizeF","RectangleF","Rectangle","DictionaryProperties","PdfArray","PdfNumber","PdfGraphics","PdfResources","PdfStream","PdfPage","PdfTilingBrush","_super","arg1","arg2","_this","call","mStroking","mLocation","mDictionaryProperties","rect","width","height","mPage","brushStream","mResources","items","setValue","resources","setBox","setObligatoryFields","graphics","colorSpace","document","initialize","rectangle","page","location","matrix","mTransformationMatrix","tempBrushStream","tempResource","defineProperty","get","set","value","enumerable","configurable","patternType","paintType","tilingType","xStep","mBox","right","left","yStep","bottom","top","tileTransform","size","y","x","elements","offsetY","box","bBox","fromRectangle","mGraphics","gr","g","getResources","initializeCoordinates","clone","brush","data","monitorChanges","streamWriter","saveChanges","currentColorSpace","diff","setColorSpace","resources1","name1","getName","setColourWithPattern","name_1","resetChanges"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-tiling-brush.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { GetResourceEventHandler } from './../pdf-graphics';\nimport { PdfBrush } from './pdf-brush';\nimport { PointF, SizeF, RectangleF, Rectangle } from './../../drawing/pdf-drawing';\nimport { DictionaryProperties } from './../../input-output/pdf-dictionary-properties';\nimport { PdfArray } from './../../primitives/pdf-array';\nimport { PdfNumber } from './../../primitives/pdf-number';\nimport { PdfGraphics } from './../pdf-graphics';\nimport { PdfResources } from './../pdf-resources';\nimport { PdfStream } from './../../primitives/pdf-stream';\nimport { PdfPage } from './../../pages/pdf-page';\n/**\n * `PdfTilingBrush` Implements a colored tiling brush.\n */\nvar PdfTilingBrush = /** @class */ (function (_super) {\n    __extends(PdfTilingBrush, _super);\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @public\n     */\n    function PdfTilingBrush(arg1, arg2) {\n        var _this = _super.call(this) || this;\n        /**\n         * Local variable to store Stroking.\n         * @private\n         */\n        _this.mStroking = false;\n        /**\n         * Local variable to store the tile start location.\n         * @private\n         */\n        _this.mLocation = new PointF(0, 0);\n        /**\n         * Local variable to store the dictionary properties.\n         * @private\n         */\n        _this.mDictionaryProperties = new DictionaryProperties();\n        var rect = null;\n        if (arg1 instanceof Rectangle) {\n            rect = arg1;\n        }\n        else if (arg1 instanceof SizeF) {\n            rect = new Rectangle(0, 0, arg1.width, arg1.height);\n        }\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n        }\n        _this.brushStream = new PdfStream();\n        _this.mResources = new PdfResources();\n        _this.brushStream.items.setValue(_this.mDictionaryProperties.resources, _this.mResources);\n        _this.setBox(rect);\n        _this.setObligatoryFields();\n        if (arg2 !== null && arg2 instanceof PdfPage) {\n            _this.mPage = arg2;\n            _this.graphics.colorSpace = arg2.document.colorSpace;\n        }\n        return _this;\n    }\n    /**\n     * Initializes a new instance of the `PdfTilingBrush` class.\n     * @private\n     * @param rectangle The size of the smallest brush cell.\n     * @param page The Current Page Object.\n     * @param location The Tile start location.\n     * @param matrix The matrix.\n     */\n    PdfTilingBrush.prototype.initialize = function (rectangle, page, location, matrix) {\n        this.mPage = page;\n        this.mLocation = location;\n        this.mTransformationMatrix = matrix;\n        this.tempBrushStream = this.brushStream;\n        this.brushStream = new PdfStream();\n        var tempResource = new PdfResources();\n        this.brushStream.items.setValue(this.mDictionaryProperties.resources, tempResource);\n        this.setBox(rectangle);\n        this.setObligatoryFields();\n        return this;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"location\", {\n        //Properties\n        /**\n         * Location representing the start position of the tiles.\n         * @public\n         */\n        get: function () {\n            return this.mLocation;\n        },\n        set: function (value) {\n            this.mLocation = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Sets the obligatory fields.\n     * @private\n     */\n    PdfTilingBrush.prototype.setObligatoryFields = function () {\n        this.brushStream.items.setValue(this.mDictionaryProperties.patternType, new PdfNumber(1));\n        //  Tiling brush.\n        this.brushStream.items.setValue(this.mDictionaryProperties.paintType, new PdfNumber(1));\n        //  Coloured.\n        this.brushStream.items.setValue(this.mDictionaryProperties.tilingType, new PdfNumber(1));\n        //  Constant spacing.\n        this.brushStream.items.setValue(this.mDictionaryProperties.xStep, new PdfNumber((this.mBox.right - this.mBox.left)));\n        this.brushStream.items.setValue(this.mDictionaryProperties.yStep, new PdfNumber((this.mBox.bottom - this.mBox.top)));\n        if ((this.mPage != null) && (this.mLocation != null)) {\n            if ((this.mTransformationMatrix == null && typeof this.mTransformationMatrix === 'undefined')) {\n                // Transform the tile origin to fit the location\n                var tileTransform = (this.mPage.size.height % this.rectangle.size.height) - (this.mLocation.y);\n                /* tslint:disable-next-line:max-line-length */\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([1, 0, 0, 1, this.mLocation.x, tileTransform]));\n            }\n            else {\n                var tileTransform = 0;\n                // Transform the tile origin to fit the location\n                var elements = this.mTransformationMatrix.matrix.elements;\n                if ((this.mPage.size.height > this.rectangle.size.height)) {\n                    tileTransform = (this.mTransformationMatrix.matrix.offsetY\n                        - (this.mPage.size.height % this.rectangle.size.height));\n                }\n                else {\n                    tileTransform = ((this.mPage.size.height % this.rectangle.size.height) + this.mTransformationMatrix.matrix.offsetY);\n                }\n                this.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray([\n                    elements[0], elements[1], elements[2], elements[3], elements[4], tileTransform\n                ]));\n            }\n        }\n    };\n    /**\n     * Sets the BBox coordinates.\n     * @private\n     */\n    PdfTilingBrush.prototype.setBox = function (box) {\n        this.mBox = box;\n        var rect = new RectangleF(this.mBox.left, this.mBox.top, this.mBox.right, this.mBox.bottom);\n        this.brushStream.items.setValue(this.mDictionaryProperties.bBox, PdfArray.fromRectangle(rect));\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"rectangle\", {\n        //Properties\n        /**\n         * Gets the boundary box of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"size\", {\n        /**\n         * Gets the size of the smallest brush cell.\n         * @public\n         */\n        get: function () {\n            return this.mBox.size;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfTilingBrush.prototype, \"graphics\", {\n        /**\n         * Gets Graphics context of the brush.\n         */\n        get: function () {\n            if ((this.mGraphics == null && typeof this.mGraphics === 'undefined')) {\n                var gr = new GetResourceEventHandler(this);\n                var g = new PdfGraphics(this.size, gr, this.brushStream);\n                this.mGraphics = g;\n                this.mResources = this.getResources();\n                this.mGraphics.initializeCoordinates();\n            }\n            return this.mGraphics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the resources and modifies the template dictionary.\n     * @public\n     */\n    PdfTilingBrush.prototype.getResources = function () {\n        return this.mResources;\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"stroking\", {\n        /**\n         * Gets or sets a value indicating whether this PdfTilingBrush\n         * is used for stroking operations.\n         */\n        get: function () {\n            return this.mStroking;\n        },\n        set: function (value) {\n            this.mStroking = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //PdfBrush methods\n    /**\n     * Creates a new copy of a brush.\n     * @public\n     */\n    PdfTilingBrush.prototype.clone = function () {\n        var brush = this.initialize(this.rectangle, this.mPage, this.location, this.mTransformationMatrix);\n        if ((this.mTransformationMatrix != null) && (this.mTransformationMatrix.matrix != null)) {\n            /* tslint:disable-next-line:max-line-length */\n            brush.brushStream.items.setValue(this.mDictionaryProperties.matrix, new PdfArray(this.mTransformationMatrix.matrix.elements));\n        }\n        brush.brushStream.data = this.tempBrushStream.data;\n        brush.mResources = new PdfResources(this.mResources);\n        brush.brushStream.items.setValue(this.mDictionaryProperties.resources, brush.mResources);\n        return brush;\n    };\n    /**\n     * Monitors the changes of the brush and modify PDF state respectfully.\n     * @param brush The brush\n     * @param streamWriter The stream writer\n     * @param getResources The get resources delegate.\n     * @param saveChanges if set to true the changes should be saved anyway.\n     * @param currentColorSpace The current color space.\n     */\n    /* tslint:disable-next-line:max-line-length */\n    PdfTilingBrush.prototype.monitorChanges = function (brush, streamWriter, getResources, saveChanges, currentColorSpace) {\n        var diff = false;\n        if (brush !== this) {\n            //  Set the Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources1 = getResources.getResources();\n            var name1 = resources1.getName(this);\n            streamWriter.setColourWithPattern(null, name1, this.mStroking);\n            diff = true;\n        }\n        else if (brush instanceof PdfTilingBrush) {\n            //  Set the /Pattern colour space.\n            streamWriter.setColorSpace('Pattern', this.mStroking);\n            //  Set the pattern for non-stroking operations.\n            var resources = getResources.getResources();\n            var name_1 = resources.getName(this);\n            streamWriter.setColourWithPattern(null, name_1, this.mStroking);\n            diff = true;\n        }\n        return diff;\n    };\n    /**\n     * Resets the changes, which were made by the brush.\n     * In other words resets the state to the initial one.\n     * @param streamWriter The stream writer.\n     */\n    PdfTilingBrush.prototype.resetChanges = function (streamWriter) {\n        //  We shouldn't do anything to reset changes.\n        //  All changes will be reset automatically by setting a new colour space.\n    };\n    Object.defineProperty(PdfTilingBrush.prototype, \"element\", {\n        /* tslint:enable */\n        // IPdfWrapper Members\n        /**\n         * Gets the `element`.\n         * @public\n         */\n        get: function () {\n            return this.brushStream;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PdfTilingBrush;\n}(PdfBrush));\nexport { PdfTilingBrush };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}