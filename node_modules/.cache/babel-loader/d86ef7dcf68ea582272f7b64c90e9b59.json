{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n/**\n * Accumulation charts base file\n */\n\n\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { stringToNumber, ChartLocation, degreeToLocation, getAnimationFunction, getElement } from '../../common/utils/helper';\nimport { Rect } from '@syncfusion/ej2-svg-base';\nimport { animationComplete } from '../../common/model/constants';\nimport { AccumulationBase } from './accumulation-base';\n/**\n * PieBase class used to do pie base calculations.\n */\n\nvar PieBase =\n/** @class */\nfunction (_super) {\n  __extends(PieBase, _super);\n\n  function PieBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * To initialize the property values.\n   * @private\n   */\n\n\n  PieBase.prototype.initProperties = function (chart, series) {\n    this.accumulation = chart;\n    this.size = Math.min(chart.initialClipRect.width, chart.initialClipRect.height);\n    this.initAngles(series);\n    var r = parseInt(series.radius, 10);\n\n    if ((series.radius.indexOf('%') !== -1 || typeof r === 'number') && !isNaN(r)) {\n      this.isRadiusMapped = false;\n      this.radius = stringToNumber(series.radius, this.size / 2);\n      this.innerRadius = stringToNumber(series.innerRadius, this.radius);\n      this.labelRadius = series.dataLabel.position === 'Inside' ? (this.radius - this.innerRadius) / 2 + this.innerRadius : this.radius + stringToNumber(series.dataLabel.connectorStyle.length || '4%', this.size / 2);\n    } else {\n      var radiusCollection = [];\n      this.isRadiusMapped = true;\n\n      for (var i = 0; i < Object.keys(series.points).length; i++) {\n        if (series.points[i].sliceRadius.indexOf('%') !== -1) {\n          radiusCollection[i] = stringToNumber(series.points[i].sliceRadius, this.size / 2);\n        } else {\n          radiusCollection[i] = parseInt(series.points[i].sliceRadius, 10);\n        }\n      }\n\n      var minRadius = Math.min.apply(null, radiusCollection);\n      var maxRadius = Math.max.apply(null, radiusCollection);\n      this.radius = this.seriesRadius = maxRadius;\n      this.innerRadius = stringToNumber(series.innerRadius, this.seriesRadius);\n      this.innerRadius = this.innerRadius > minRadius ? this.innerRadius / 2 : this.innerRadius;\n    } // this.radius = stringToNumber(series.radius, size / 2);\n    // this.innerRadius = stringToNumber(series.innerRadius, this.radius);\n    // this.labelRadius = series.dataLabel.position === 'Inside' ? (((this.radius - this.innerRadius) / 2) + this.innerRadius) :\n    //     (this.radius + stringToNumber(series.dataLabel.connectorStyle.length || '4%', size / 2));\n\n\n    chart.explodeDistance = series.explode ? stringToNumber(series.explodeOffset, this.radius) : 0;\n    this.findCenter(chart, series);\n    this.defaultLabelBound(series, series.dataLabel.visible, series.dataLabel.position);\n    this.totalAngle -= 0.001;\n  };\n  /*\n   * To get label radius of the pie.\n   * @private\n   */\n\n\n  PieBase.prototype.getLabelRadius = function (series, point) {\n    return series.dataLabel.position === 'Inside' ? (stringToNumber(point.sliceRadius, this.radius) - this.innerRadius) / 2 + this.innerRadius : stringToNumber(point.sliceRadius, this.seriesRadius) + stringToNumber(series.dataLabel.connectorStyle.length || '4%', this.size / 2);\n  };\n  /**\n   * To find the center of the accumulation.\n   * @private\n   */\n\n\n  PieBase.prototype.findCenter = function (accumulation, series) {\n    this.accumulation = accumulation;\n    this.center = {\n      x: stringToNumber(accumulation.center.x, accumulation.initialClipRect.width) + accumulation.initialClipRect.x,\n      y: stringToNumber(accumulation.center.y, accumulation.initialClipRect.height) + accumulation.initialClipRect.y\n    };\n    var accumulationRect = this.getSeriesBound(series);\n    var accumulationRectCenter = new ChartLocation(accumulationRect.x + accumulationRect.width / 2, accumulationRect.y + accumulationRect.height / 2);\n    this.center.x += this.center.x - accumulationRectCenter.x;\n    this.center.y += this.center.y - accumulationRectCenter.y;\n    this.accumulation.origin = this.center;\n  };\n  /**\n   * To find angles from series.\n   */\n\n\n  PieBase.prototype.initAngles = function (series) {\n    var endAngle = isNullOrUndefined(series.endAngle) ? series.startAngle : series.endAngle;\n    this.totalAngle = (endAngle - series.startAngle) % 360;\n    this.startAngle = series.startAngle - 90;\n    this.totalAngle = this.totalAngle <= 0 ? 360 + this.totalAngle : this.totalAngle;\n    this.startAngle = (this.startAngle < 0 ? this.startAngle + 360 : this.startAngle) % 360;\n  };\n  /**\n   * To calculate data-label bound\n   * @private\n   */\n\n\n  PieBase.prototype.defaultLabelBound = function (series, visible, position) {\n    var accumulationBound = this.getSeriesBound(series);\n    series.accumulationBound = accumulationBound;\n    series.labelBound = new Rect(accumulationBound.x, accumulationBound.y, accumulationBound.width + accumulationBound.x, accumulationBound.height + accumulationBound.y);\n\n    if (visible && position === 'Outside') {\n      series.labelBound = new Rect(Infinity, Infinity, -Infinity, -Infinity);\n    }\n  };\n  /**\n   * To calculate series bound\n   * @private\n   */\n\n\n  PieBase.prototype.getSeriesBound = function (series) {\n    var rect = new Rect(Infinity, Infinity, -Infinity, -Infinity);\n    this.initAngles(series);\n    var start = this.startAngle;\n    var total = this.totalAngle;\n    var end = (this.startAngle + total) % 360;\n    end = end === 0 ? 360 : end;\n    series.findMaxBounds(rect, this.getRectFromAngle(start));\n    series.findMaxBounds(rect, this.getRectFromAngle(end));\n    series.findMaxBounds(rect, new Rect(this.center.x, this.center.y, 0, 0));\n    var nextQuandrant = (Math.floor(start / 90) * 90 + 90) % 360;\n    var lastQuadrant = Math.floor(end / 90) * 90 % 360;\n    lastQuadrant = lastQuadrant === 0 ? 360 : lastQuadrant;\n\n    if (total >= 90 || lastQuadrant === nextQuandrant) {\n      series.findMaxBounds(rect, this.getRectFromAngle(nextQuandrant));\n      series.findMaxBounds(rect, this.getRectFromAngle(lastQuadrant));\n    }\n\n    if (start === 0 || start + total >= 360) {\n      series.findMaxBounds(rect, this.getRectFromAngle(0));\n    }\n\n    var length = nextQuandrant === lastQuadrant ? 0 : Math.floor(total / 90);\n\n    for (var i = 1; i < length; i++) {\n      nextQuandrant = nextQuandrant + 90;\n\n      if (nextQuandrant < lastQuadrant || end < start || total === 360) {\n        series.findMaxBounds(rect, this.getRectFromAngle(nextQuandrant));\n      }\n    }\n\n    rect.width -= rect.x;\n    rect.height -= rect.y;\n    return rect;\n  };\n  /**\n   * To get rect location size from angle\n   */\n\n\n  PieBase.prototype.getRectFromAngle = function (angle) {\n    var location = degreeToLocation(angle, this.radius, this.center);\n    return new Rect(location.x, location.y, 0, 0);\n  };\n  /**\n   * To get path arc direction\n   */\n\n\n  PieBase.prototype.getPathArc = function (center, start, end, radius, innerRadius) {\n    var degree = end - start;\n    degree = degree < 0 ? degree + 360 : degree;\n    var flag = degree < 180 ? 0 : 1;\n\n    if (!innerRadius && innerRadius === 0) {\n      return this.getPiePath(center, degreeToLocation(start, radius, center), degreeToLocation(end, radius, center), radius, flag);\n    } else {\n      return this.getDoughnutPath(center, degreeToLocation(start, radius, center), degreeToLocation(end, radius, center), radius, degreeToLocation(start, innerRadius, center), degreeToLocation(end, innerRadius, center), innerRadius, flag);\n    }\n  };\n  /**\n   * To get pie direction\n   */\n\n\n  PieBase.prototype.getPiePath = function (center, start, end, radius, clockWise) {\n    return 'M ' + center.x + ' ' + center.y + ' L ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y + ' Z';\n  };\n  /**\n   * To get doughnut direction\n   */\n\n\n  PieBase.prototype.getDoughnutPath = function (center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n    return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius + ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n  };\n  /**\n   * Method to start animation for pie series.\n   */\n\n\n  PieBase.prototype.doAnimation = function (slice, series) {\n    var _this = this;\n\n    var startAngle = series.startAngle - 90;\n    var duration = this.accumulation.duration ? this.accumulation.duration : series.animation.duration;\n    var value;\n    this.center.x += 1;\n    var radius = Math.max(this.accumulation.availableSize.height, this.accumulation.availableSize.width) * 0.75;\n    radius += radius * 0.414; // formula r + r / 2 * (1.414 -1)\n\n    var effect = getAnimationFunction('Linear'); // need to check animation type\n\n    new Animation({}).animate(slice, {\n      duration: duration,\n      delay: series.animation.delay,\n      progress: function progress(args) {\n        value = effect(args.timeStamp, startAngle, _this.totalAngle, args.duration);\n        slice.setAttribute('d', _this.getPathArc(_this.center, startAngle, value, radius, 0));\n      },\n      end: function end(args) {\n        _this.center.x -= 1;\n        slice.setAttribute('d', _this.getPathArc(_this.center, 0, 359.99999, radius, 0));\n\n        _this.accumulation.trigger(animationComplete, _this.accumulation.isBlazor ? {} : {\n          series: series,\n          accumulation: _this.accumulation,\n          chart: _this.accumulation\n        });\n\n        var datalabelGroup = getElement(_this.accumulation.element.id + '_datalabel_Series_' + series.index);\n        datalabelGroup.style.visibility = _this.accumulation.isDestroyed ? 'hidden' : 'visible';\n      }\n    });\n  };\n\n  return PieBase;\n}(AccumulationBase);\n\nexport { PieBase };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","Animation","isNullOrUndefined","stringToNumber","ChartLocation","degreeToLocation","getAnimationFunction","getElement","Rect","animationComplete","AccumulationBase","PieBase","_super","apply","arguments","initProperties","chart","series","accumulation","size","Math","min","initialClipRect","width","height","initAngles","r","parseInt","radius","indexOf","isNaN","isRadiusMapped","innerRadius","labelRadius","dataLabel","position","connectorStyle","length","radiusCollection","i","keys","points","sliceRadius","minRadius","maxRadius","max","seriesRadius","explodeDistance","explode","explodeOffset","findCenter","defaultLabelBound","visible","totalAngle","getLabelRadius","point","center","x","y","accumulationRect","getSeriesBound","accumulationRectCenter","origin","endAngle","startAngle","accumulationBound","labelBound","Infinity","rect","start","total","end","findMaxBounds","getRectFromAngle","nextQuandrant","floor","lastQuadrant","angle","location","getPathArc","degree","flag","getPiePath","getDoughnutPath","clockWise","innerStart","innerEnd","doAnimation","slice","_this","duration","animation","value","availableSize","effect","animate","delay","progress","args","timeStamp","setAttribute","trigger","isBlazor","datalabelGroup","element","id","index","style","visibility","isDestroyed"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-charts/src/accumulation-chart/renderer/pie-base.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Accumulation charts base file\n */\nimport { Animation, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { stringToNumber, ChartLocation, degreeToLocation, getAnimationFunction, getElement } from '../../common/utils/helper';\nimport { Rect } from '@syncfusion/ej2-svg-base';\nimport { animationComplete } from '../../common/model/constants';\nimport { AccumulationBase } from './accumulation-base';\n/**\n * PieBase class used to do pie base calculations.\n */\nvar PieBase = /** @class */ (function (_super) {\n    __extends(PieBase, _super);\n    function PieBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * To initialize the property values.\n     * @private\n     */\n    PieBase.prototype.initProperties = function (chart, series) {\n        this.accumulation = chart;\n        this.size = Math.min(chart.initialClipRect.width, chart.initialClipRect.height);\n        this.initAngles(series);\n        var r = parseInt(series.radius, 10);\n        if ((series.radius.indexOf('%') !== -1 || typeof r === 'number') && !isNaN(r)) {\n            this.isRadiusMapped = false;\n            this.radius = stringToNumber(series.radius, this.size / 2);\n            this.innerRadius = stringToNumber(series.innerRadius, this.radius);\n            this.labelRadius = series.dataLabel.position === 'Inside' ? (((this.radius - this.innerRadius) / 2) + this.innerRadius) :\n                (this.radius + stringToNumber(series.dataLabel.connectorStyle.length || '4%', this.size / 2));\n        }\n        else {\n            var radiusCollection = [];\n            this.isRadiusMapped = true;\n            for (var i = 0; i < Object.keys(series.points).length; i++) {\n                if (series.points[i].sliceRadius.indexOf('%') !== -1) {\n                    radiusCollection[i] = stringToNumber(series.points[i].sliceRadius, this.size / 2);\n                }\n                else {\n                    radiusCollection[i] = parseInt(series.points[i].sliceRadius, 10);\n                }\n            }\n            var minRadius = Math.min.apply(null, radiusCollection);\n            var maxRadius = Math.max.apply(null, radiusCollection);\n            this.radius = this.seriesRadius = maxRadius;\n            this.innerRadius = stringToNumber(series.innerRadius, this.seriesRadius);\n            this.innerRadius = this.innerRadius > minRadius ? (this.innerRadius / 2) : this.innerRadius;\n        }\n        // this.radius = stringToNumber(series.radius, size / 2);\n        // this.innerRadius = stringToNumber(series.innerRadius, this.radius);\n        // this.labelRadius = series.dataLabel.position === 'Inside' ? (((this.radius - this.innerRadius) / 2) + this.innerRadius) :\n        //     (this.radius + stringToNumber(series.dataLabel.connectorStyle.length || '4%', size / 2));\n        chart.explodeDistance = series.explode ? stringToNumber(series.explodeOffset, this.radius) : 0;\n        this.findCenter(chart, series);\n        this.defaultLabelBound(series, series.dataLabel.visible, series.dataLabel.position);\n        this.totalAngle -= 0.001;\n    };\n    /*\n     * To get label radius of the pie.\n     * @private\n     */\n    PieBase.prototype.getLabelRadius = function (series, point) {\n        return series.dataLabel.position === 'Inside' ?\n            ((((stringToNumber(point.sliceRadius, this.radius) - this.innerRadius)) / 2) + this.innerRadius) :\n            (stringToNumber(point.sliceRadius, this.seriesRadius) + stringToNumber(series.dataLabel.connectorStyle.length || '4%', this.size / 2));\n    };\n    /**\n     * To find the center of the accumulation.\n     * @private\n     */\n    PieBase.prototype.findCenter = function (accumulation, series) {\n        this.accumulation = accumulation;\n        this.center = {\n            x: stringToNumber(accumulation.center.x, accumulation.initialClipRect.width) + (accumulation.initialClipRect.x),\n            y: stringToNumber(accumulation.center.y, accumulation.initialClipRect.height) + (accumulation.initialClipRect.y)\n        };\n        var accumulationRect = this.getSeriesBound(series);\n        var accumulationRectCenter = new ChartLocation(accumulationRect.x + accumulationRect.width / 2, accumulationRect.y + accumulationRect.height / 2);\n        this.center.x += (this.center.x - accumulationRectCenter.x);\n        this.center.y += (this.center.y - accumulationRectCenter.y);\n        this.accumulation.origin = this.center;\n    };\n    /**\n     * To find angles from series.\n     */\n    PieBase.prototype.initAngles = function (series) {\n        var endAngle = isNullOrUndefined(series.endAngle) ? series.startAngle : series.endAngle;\n        this.totalAngle = (endAngle - series.startAngle) % 360;\n        this.startAngle = series.startAngle - 90;\n        this.totalAngle = this.totalAngle <= 0 ? (360 + this.totalAngle) : this.totalAngle;\n        this.startAngle = (this.startAngle < 0 ? (this.startAngle + 360) : this.startAngle) % 360;\n    };\n    /**\n     * To calculate data-label bound\n     * @private\n     */\n    PieBase.prototype.defaultLabelBound = function (series, visible, position) {\n        var accumulationBound = this.getSeriesBound(series);\n        series.accumulationBound = accumulationBound;\n        series.labelBound = new Rect(accumulationBound.x, accumulationBound.y, accumulationBound.width + accumulationBound.x, accumulationBound.height + accumulationBound.y);\n        if (visible && position === 'Outside') {\n            series.labelBound = new Rect(Infinity, Infinity, -Infinity, -Infinity);\n        }\n    };\n    /**\n     * To calculate series bound\n     * @private\n     */\n    PieBase.prototype.getSeriesBound = function (series) {\n        var rect = new Rect(Infinity, Infinity, -Infinity, -Infinity);\n        this.initAngles(series);\n        var start = this.startAngle;\n        var total = this.totalAngle;\n        var end = (this.startAngle + total) % 360;\n        end = (end === 0) ? 360 : end;\n        series.findMaxBounds(rect, this.getRectFromAngle(start));\n        series.findMaxBounds(rect, this.getRectFromAngle(end));\n        series.findMaxBounds(rect, new Rect(this.center.x, this.center.y, 0, 0));\n        var nextQuandrant = (Math.floor(start / 90) * 90 + 90) % 360;\n        var lastQuadrant = (Math.floor(end / 90) * 90) % 360;\n        lastQuadrant = (lastQuadrant === 0) ? 360 : lastQuadrant;\n        if (total >= 90 || lastQuadrant === nextQuandrant) {\n            series.findMaxBounds(rect, this.getRectFromAngle(nextQuandrant));\n            series.findMaxBounds(rect, this.getRectFromAngle(lastQuadrant));\n        }\n        if (start === 0 || (start + total >= 360)) {\n            series.findMaxBounds(rect, this.getRectFromAngle(0));\n        }\n        var length = nextQuandrant === lastQuadrant ? 0 : Math.floor(total / 90);\n        for (var i = 1; i < length; i++) {\n            nextQuandrant = nextQuandrant + 90;\n            if ((nextQuandrant < lastQuadrant || end < start) || total === 360) {\n                series.findMaxBounds(rect, this.getRectFromAngle(nextQuandrant));\n            }\n        }\n        rect.width -= rect.x;\n        rect.height -= rect.y;\n        return rect;\n    };\n    /**\n     * To get rect location size from angle\n     */\n    PieBase.prototype.getRectFromAngle = function (angle) {\n        var location = degreeToLocation(angle, this.radius, this.center);\n        return new Rect(location.x, location.y, 0, 0);\n    };\n    /**\n     * To get path arc direction\n     */\n    PieBase.prototype.getPathArc = function (center, start, end, radius, innerRadius) {\n        var degree = end - start;\n        degree = degree < 0 ? (degree + 360) : degree;\n        var flag = (degree < 180) ? 0 : 1;\n        if (!innerRadius && innerRadius === 0) {\n            return this.getPiePath(center, degreeToLocation(start, radius, center), degreeToLocation(end, radius, center), radius, flag);\n        }\n        else {\n            return this.getDoughnutPath(center, degreeToLocation(start, radius, center), degreeToLocation(end, radius, center), radius, degreeToLocation(start, innerRadius, center), degreeToLocation(end, innerRadius, center), innerRadius, flag);\n        }\n    };\n    /**\n     * To get pie direction\n     */\n    PieBase.prototype.getPiePath = function (center, start, end, radius, clockWise) {\n        return 'M ' + center.x + ' ' + center.y + ' L ' + start.x + ' ' + start.y + ' A ' + radius + ' ' +\n            radius + ' 0 ' + clockWise + ' 1 ' + end.x + ' ' + end.y + ' Z';\n    };\n    /**\n     * To get doughnut direction\n     */\n    PieBase.prototype.getDoughnutPath = function (center, start, end, radius, innerStart, innerEnd, innerRadius, clockWise) {\n        return 'M ' + start.x + ' ' + start.y + ' A ' + radius + ' ' + radius + ' 0 ' + clockWise +\n            ' 1 ' + end.x + ' ' + end.y + ' L ' + innerEnd.x + ' ' + innerEnd.y + ' A ' + innerRadius +\n            ' ' + innerRadius + ' 0 ' + clockWise + ',0 ' + innerStart.x + ' ' + innerStart.y + ' Z';\n    };\n    /**\n     * Method to start animation for pie series.\n     */\n    PieBase.prototype.doAnimation = function (slice, series) {\n        var _this = this;\n        var startAngle = series.startAngle - 90;\n        var duration = this.accumulation.duration ? this.accumulation.duration : series.animation.duration;\n        var value;\n        this.center.x += 1;\n        var radius = Math.max(this.accumulation.availableSize.height, this.accumulation.availableSize.width) * 0.75;\n        radius += radius * (0.414); // formula r + r / 2 * (1.414 -1)\n        var effect = getAnimationFunction('Linear'); // need to check animation type\n        new Animation({}).animate(slice, {\n            duration: duration,\n            delay: series.animation.delay,\n            progress: function (args) {\n                value = effect(args.timeStamp, startAngle, _this.totalAngle, args.duration);\n                slice.setAttribute('d', _this.getPathArc(_this.center, startAngle, value, radius, 0));\n            },\n            end: function (args) {\n                _this.center.x -= 1;\n                slice.setAttribute('d', _this.getPathArc(_this.center, 0, 359.99999, radius, 0));\n                _this.accumulation.trigger(animationComplete, _this.accumulation.isBlazor ? {} :\n                    { series: series, accumulation: _this.accumulation, chart: _this.accumulation });\n                var datalabelGroup = getElement(_this.accumulation.element.id + '_datalabel_Series_' + series.index);\n                datalabelGroup.style.visibility = _this.accumulation.isDestroyed ? 'hidden' : 'visible';\n            }\n        });\n    };\n    return PieBase;\n}(AccumulationBase));\nexport { PieBase };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}