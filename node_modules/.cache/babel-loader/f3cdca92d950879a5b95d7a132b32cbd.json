{"ast":null,"code":"'use strict';\n\nvar global = require('./_global');\n\nvar has = require('./_has');\n\nvar cof = require('./_cof');\n\nvar inheritIfRequired = require('./_inherit-if-required');\n\nvar toPrimitive = require('./_to-primitive');\n\nvar fails = require('./_fails');\n\nvar gOPN = require('./_object-gopn').f;\n\nvar gOPD = require('./_object-gopd').f;\n\nvar dP = require('./_object-dp').f;\n\nvar $trim = require('./_string-trim').trim;\n\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype; // Opera ~12 has broken Object#toString\n\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = ('trim' in String.prototype); // 7.1.3 ToNumber(argument)\n\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66:\n        case 98:\n          radix = 2;\n          maxCode = 49;\n          break;\n        // fast equal /^0b[01]+$/i\n\n        case 79:\n        case 111:\n          radix = 8;\n          maxCode = 55;\n          break;\n        // fast equal /^0o[0-7]+$/i\n\n        default:\n          return +it;\n      }\n\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i); // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n\n        if (code < 48 || code > maxCode) return NaN;\n      }\n\n      return parseInt(digits, radix);\n    }\n  }\n\n  return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number // check on 1..constructor(foo) case\n    && (BROKEN_COF ? fails(function () {\n      proto.valueOf.call(that);\n    }) : cof(that) != NUMBER) ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n\n  for (var keys = require('./_descriptors') ? gOPN(Base) : ( // ES3:\n  'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' + // ES6 (in case, if modules with ES6 Number statics required before):\n  'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' + 'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger').split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n\n  require('./_redefine')(global, NUMBER, $Number);\n}","map":{"version":3,"names":["global","require","has","cof","inheritIfRequired","toPrimitive","fails","gOPN","f","gOPD","dP","$trim","trim","NUMBER","$Number","Base","proto","prototype","BROKEN_COF","TRIM","String","toNumber","argument","it","length","first","charCodeAt","third","radix","maxCode","NaN","digits","slice","i","l","code","parseInt","Number","value","arguments","that","valueOf","call","keys","split","j","key","constructor"],"sources":["D:/Theme/package/node_modules/recharts/node_modules/core-js/modules/es6.number.constructor.js"],"sourcesContent":["'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n"],"mappings":"AAAA;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,WAAD,CAApB;;AACA,IAAIC,GAAG,GAAGD,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,QAAD,CAAjB;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,wBAAD,CAA/B;;AACA,IAAII,WAAW,GAAGJ,OAAO,CAAC,iBAAD,CAAzB;;AACA,IAAIK,KAAK,GAAGL,OAAO,CAAC,UAAD,CAAnB;;AACA,IAAIM,IAAI,GAAGN,OAAO,CAAC,gBAAD,CAAP,CAA0BO,CAArC;;AACA,IAAIC,IAAI,GAAGR,OAAO,CAAC,gBAAD,CAAP,CAA0BO,CAArC;;AACA,IAAIE,EAAE,GAAGT,OAAO,CAAC,cAAD,CAAP,CAAwBO,CAAjC;;AACA,IAAIG,KAAK,GAAGV,OAAO,CAAC,gBAAD,CAAP,CAA0BW,IAAtC;;AACA,IAAIC,MAAM,GAAG,QAAb;AACA,IAAIC,OAAO,GAAGd,MAAM,CAACa,MAAD,CAApB;AACA,IAAIE,IAAI,GAAGD,OAAX;AACA,IAAIE,KAAK,GAAGF,OAAO,CAACG,SAApB,C,CACA;;AACA,IAAIC,UAAU,GAAGf,GAAG,CAACF,OAAO,CAAC,kBAAD,CAAP,CAA4Be,KAA5B,CAAD,CAAH,IAA2CH,MAA5D;AACA,IAAIM,IAAI,IAAG,UAAUC,MAAM,CAACH,SAApB,CAAR,C,CAEA;;AACA,IAAII,QAAQ,GAAG,UAAUC,QAAV,EAAoB;EACjC,IAAIC,EAAE,GAAGlB,WAAW,CAACiB,QAAD,EAAW,KAAX,CAApB;;EACA,IAAI,OAAOC,EAAP,IAAa,QAAb,IAAyBA,EAAE,CAACC,MAAH,GAAY,CAAzC,EAA4C;IAC1CD,EAAE,GAAGJ,IAAI,GAAGI,EAAE,CAACX,IAAH,EAAH,GAAeD,KAAK,CAACY,EAAD,EAAK,CAAL,CAA7B;IACA,IAAIE,KAAK,GAAGF,EAAE,CAACG,UAAH,CAAc,CAAd,CAAZ;IACA,IAAIC,KAAJ,EAAWC,KAAX,EAAkBC,OAAlB;;IACA,IAAIJ,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,EAA9B,EAAkC;MAChCE,KAAK,GAAGJ,EAAE,CAACG,UAAH,CAAc,CAAd,CAAR;MACA,IAAIC,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK,GAA9B,EAAmC,OAAOG,GAAP,CAFH,CAEe;IAChD,CAHD,MAGO,IAAIL,KAAK,KAAK,EAAd,EAAkB;MACvB,QAAQF,EAAE,CAACG,UAAH,CAAc,CAAd,CAAR;QACE,KAAK,EAAL;QAAS,KAAK,EAAL;UAASE,KAAK,GAAG,CAAR;UAAWC,OAAO,GAAG,EAAV;UAAc;QAAO;;QAClD,KAAK,EAAL;QAAS,KAAK,GAAL;UAAUD,KAAK,GAAG,CAAR;UAAWC,OAAO,GAAG,EAAV;UAAc;QAAO;;QACnD;UAAS,OAAO,CAACN,EAAR;MAHX;;MAKA,KAAK,IAAIQ,MAAM,GAAGR,EAAE,CAACS,KAAH,CAAS,CAAT,CAAb,EAA0BC,CAAC,GAAG,CAA9B,EAAiCC,CAAC,GAAGH,MAAM,CAACP,MAA5C,EAAoDW,IAAzD,EAA+DF,CAAC,GAAGC,CAAnE,EAAsED,CAAC,EAAvE,EAA2E;QACzEE,IAAI,GAAGJ,MAAM,CAACL,UAAP,CAAkBO,CAAlB,CAAP,CADyE,CAEzE;QACA;;QACA,IAAIE,IAAI,GAAG,EAAP,IAAaA,IAAI,GAAGN,OAAxB,EAAiC,OAAOC,GAAP;MAClC;;MAAC,OAAOM,QAAQ,CAACL,MAAD,EAASH,KAAT,CAAf;IACH;EACF;;EAAC,OAAO,CAACL,EAAR;AACH,CAvBD;;AAyBA,IAAI,CAACT,OAAO,CAAC,MAAD,CAAR,IAAoB,CAACA,OAAO,CAAC,KAAD,CAA5B,IAAuCA,OAAO,CAAC,MAAD,CAAlD,EAA4D;EAC1DA,OAAO,GAAG,SAASuB,MAAT,CAAgBC,KAAhB,EAAuB;IAC/B,IAAIf,EAAE,GAAGgB,SAAS,CAACf,MAAV,GAAmB,CAAnB,GAAuB,CAAvB,GAA2Bc,KAApC;IACA,IAAIE,IAAI,GAAG,IAAX;IACA,OAAOA,IAAI,YAAY1B,OAAhB,CACL;IADK,IAEDI,UAAU,GAAGZ,KAAK,CAAC,YAAY;MAAEU,KAAK,CAACyB,OAAN,CAAcC,IAAd,CAAmBF,IAAnB;IAA2B,CAA1C,CAAR,GAAsDrC,GAAG,CAACqC,IAAD,CAAH,IAAa3B,MAF5E,IAGDT,iBAAiB,CAAC,IAAIW,IAAJ,CAASM,QAAQ,CAACE,EAAD,CAAjB,CAAD,EAAyBiB,IAAzB,EAA+B1B,OAA/B,CAHhB,GAG0DO,QAAQ,CAACE,EAAD,CAHzE;EAID,CAPD;;EAQA,KAAK,IAAIoB,IAAI,GAAG1C,OAAO,CAAC,gBAAD,CAAP,GAA4BM,IAAI,CAACQ,IAAD,CAAhC,GAAyC,EACvD;EACA,iEACA;EACA,kEAFA,GAGA,gDALuD,EAMvD6B,KANuD,CAMjD,GANiD,CAApD,EAMSC,CAAC,GAAG,CANb,EAMgBC,GANrB,EAM0BH,IAAI,CAACnB,MAAL,GAAcqB,CANxC,EAM2CA,CAAC,EAN5C,EAMgD;IAC9C,IAAI3C,GAAG,CAACa,IAAD,EAAO+B,GAAG,GAAGH,IAAI,CAACE,CAAD,CAAjB,CAAH,IAA4B,CAAC3C,GAAG,CAACY,OAAD,EAAUgC,GAAV,CAApC,EAAoD;MAClDpC,EAAE,CAACI,OAAD,EAAUgC,GAAV,EAAerC,IAAI,CAACM,IAAD,EAAO+B,GAAP,CAAnB,CAAF;IACD;EACF;;EACDhC,OAAO,CAACG,SAAR,GAAoBD,KAApB;EACAA,KAAK,CAAC+B,WAAN,GAAoBjC,OAApB;;EACAb,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAAvB,EAA+Ba,MAA/B,EAAuCC,OAAvC;AACD"},"metadata":{},"sourceType":"script"}