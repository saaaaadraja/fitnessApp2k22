{"ast":null,"code":"/**\n * PdfBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorBlend } from './pdf-color-blend';\n/**\n * `PdfBlend` Represents the blend color space\n * @private\n */\n\nvar PdfBlend =\n/** @class */\nfunction () {\n  function PdfBlend(count) {\n    //Constants\n\n    /**\n     * precision of the GCD calculations.\n     * @private\n     */\n    this.precision = 1000; //\n  }\n\n  Object.defineProperty(PdfBlend.prototype, \"factors\", {\n    //Properties\n\n    /**\n     * Gets or sets the array of factor to the blend.\n     * @public\n     */\n    get: function get() {\n      return this.mFactors;\n    },\n    set: function set(value) {\n      if (value == null) {\n        throw new Error('ArgumentNullException : Factors');\n      }\n\n      this.mFactors = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBlend.prototype, \"positions\", {\n    /**\n     * 'positions' Gets or sets the array of positions\n     * @public\n     */\n    get: function get() {\n      return this.mPositions;\n    },\n    set: function set(value) {\n      var positionarray = value;\n\n      for (var i = 0; i < positionarray.length; i++) {\n        if (positionarray[i] < 0 || positionarray[i] > 1) {\n          positionarray[i] = 0;\n        }\n      }\n\n      this.mPositions = positionarray;\n      this.mPositions = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfBlend.prototype, \"count\", {\n    /**\n     * Gets the number of elements that specify the blend.\n     * @protected\n     */\n    get: function get() {\n      return this.mCount;\n    },\n    enumerable: true,\n    configurable: true\n  }); //Implementation\n\n  /**\n   * Generates a correct color blend.\n   * @param colours The colours.\n   * @param colorSpace The color space.\n   */\n\n  PdfBlend.prototype.generateColorBlend = function (colours, colorSpace) {\n    if (colours == null) {\n      throw new Error('ArgumentNullException : colours');\n    }\n\n    if (this.positions == null) {\n      this.positions = [0];\n    }\n\n    var cBlend = new PdfColorBlend(this.count);\n    var positions = this.positions;\n    var clrs = null;\n\n    if (positions.length === 1) {\n      positions = [3];\n      positions[0] = 0;\n      positions[1] = this.positions[0];\n      positions[2] = 1;\n      /* tslint:disable */\n\n      clrs = new Array(3);\n      clrs[0] = colours[0];\n      clrs[1] = colours[0];\n      clrs[2] = colours[1];\n    } else {\n      var c1 = colours[0];\n      var c2 = colours[1];\n      /* tslint:disable */\n\n      clrs = new Array(this.count);\n      var i = 0;\n      var count = this.count;\n\n      for (i = 0; i < count; ++i) {\n        clrs[i] = this.interpolate(this.mFactors[i], c1, c2, colorSpace);\n      }\n    }\n\n    cBlend.positions = positions;\n    cBlend.colors = clrs;\n    return cBlend;\n  };\n  /**\n   * 'clonePdfBlend' Clones this instance.\n   * @public\n   */\n\n\n  PdfBlend.prototype.clonePdfBlend = function () {\n    var blend = this;\n\n    if (this.mFactors != null) {\n      blend.factors = this.mFactors;\n    }\n\n    if (this.positions != null) {\n      blend.positions = this.positions;\n    }\n\n    return blend;\n  };\n\n  PdfBlend.prototype.gcd = function (u, v) {\n    if (typeof u === 'number' && typeof v === 'number' && typeof v !== 'undefined') {\n      if (u < 0 || u > 1) {\n        throw new Error('ArgumentOutOfRangeException : u');\n      }\n\n      if (v < 0 || v > 1) {\n        throw new Error('ArgumentOutOfRangeException : v');\n      }\n\n      var iU = Math.max(1, u * this.precision);\n      var iV = Math.max(1, v * this.precision);\n      var iResult = this.gcdInt(iU, iV);\n      var result = iResult / this.precision;\n      return result;\n    } else {\n      var values = u;\n\n      if (values == null) {\n        throw new Error('ArgumentNullException : values');\n      }\n\n      if (values.length < 1) {\n        throw new Error('ArgumentException : Not enough values in the array. - values');\n      }\n\n      var gcd = values[0];\n\n      if (values.length > 1) {\n        var count = values.length;\n\n        for (var i = 1; i < count; ++i) {\n          gcd = this.gcd(values[i], gcd);\n\n          if (gcd === 1 / this.precision) {\n            break;\n          }\n        }\n      }\n\n      return gcd;\n    }\n  };\n  /**\n   * Calculate the GCD int of the specified values.\n   * @param u The u.\n   * @param v The v.\n   */\n\n\n  PdfBlend.prototype.gcdInt = function (u, v) {\n    if (u <= 0) {\n      throw new Error('ArgumentOutOfRangeException' + u + 'The arguments cannot be less or equal to zero.');\n    }\n\n    if (v <= 0) {\n      throw new Error('ArgumentOutOfRangeException' + v + 'The arguments cannot be less or equal to zero.');\n    }\n\n    if (u === 1 || v === 1) {\n      return 1;\n    }\n\n    var shift = 0;\n\n    while (this.isEven(u, v)) {\n      ++shift;\n      u >>= 1;\n      v >>= 1;\n    }\n\n    while ((u & 1) <= 0) {\n      u >>= 1;\n    }\n\n    do {\n      while ((v & 1) <= 0) {\n        v >>= 1;\n      }\n\n      if (u > v) {\n        var t = v;\n        v = u;\n        u = t;\n      }\n\n      v = v - u;\n    } while (v !== 0);\n\n    return u << shift;\n  };\n\n  PdfBlend.prototype.isEven = function (arg1, arg2) {\n    if (typeof arg2 === 'number' && typeof arg2 !== 'undefined') {\n      var result = true;\n      result = result && (arg1 & 1) <= 0; //  Is u even?\n\n      result = result && (arg2 & 1) <= 0; //  Is v even?\n\n      return result;\n    } else {\n      return (arg1 & 1) <= 0;\n    }\n  };\n\n  PdfBlend.prototype.interpolate = function (t, color1, color2, colorSpace) {\n    if (color1 instanceof PdfColor) {\n      var color = new PdfColor();\n\n      switch (colorSpace) {\n        case PdfColorSpace.Rgb:\n          var red = this.interpolate(t, color1.red, color2.red);\n          var green = this.interpolate(t, color1.green, color2.green);\n          var blue = this.interpolate(t, color1.blue, color2.blue);\n          color = new PdfColor(red, green, blue);\n          break;\n\n        case PdfColorSpace.GrayScale:\n          var gray = this.interpolate(t, color1.gray, color2.gray);\n          color = new PdfColor(gray);\n          break;\n\n        case PdfColorSpace.Cmyk:\n          var cyan = this.interpolate(t, color1.c, color2.c);\n          var magenta = this.interpolate(t, color1.m, color2.m);\n          var yellow = this.interpolate(t, color1.y, color2.y);\n          var black = this.interpolate(t, color1.k, color2.k);\n          color = new PdfColor(cyan, magenta, yellow, black);\n          break;\n      }\n\n      return color;\n    } else {\n      var t0 = 0;\n      var t1 = 1;\n      var result = 0;\n\n      if (t === t0) {\n        result = color1;\n      } else if (t === t1) {\n        result = color2;\n      } else {\n        result = color1 + (t - t0) * ((color2 - color1) / (t1 - t0));\n      }\n\n      return result;\n    }\n  };\n\n  return PdfBlend;\n}();\n\nexport { PdfBlend };","map":{"version":3,"names":["PdfColorSpace","PdfColor","PdfColorBlend","PdfBlend","count","precision","Object","defineProperty","prototype","get","mFactors","set","value","Error","enumerable","configurable","mPositions","positionarray","i","length","mCount","generateColorBlend","colours","colorSpace","positions","cBlend","clrs","Array","c1","c2","interpolate","colors","clonePdfBlend","blend","factors","gcd","u","v","iU","Math","max","iV","iResult","gcdInt","result","values","shift","isEven","t","arg1","arg2","color1","color2","color","Rgb","red","green","blue","GrayScale","gray","Cmyk","cyan","c","magenta","m","yellow","y","black","k","t0","t1"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-pdf-export/src/implementation/graphics/brushes/pdf-blend.js"],"sourcesContent":["/**\n * PdfBlend.ts class for EJ2-PDF\n */\nimport { PdfColorSpace } from './../enum';\nimport { PdfColor } from './../pdf-color';\nimport { PdfColorBlend } from './pdf-color-blend';\n/**\n * `PdfBlend` Represents the blend color space\n * @private\n */\nvar PdfBlend = /** @class */ (function () {\n    function PdfBlend(count) {\n        //Constants\n        /**\n         * precision of the GCD calculations.\n         * @private\n         */\n        this.precision = 1000;\n        //\n    }\n    Object.defineProperty(PdfBlend.prototype, \"factors\", {\n        //Properties\n        /**\n         * Gets or sets the array of factor to the blend.\n         * @public\n         */\n        get: function () {\n            return this.mFactors;\n        },\n        set: function (value) {\n            if ((value == null)) {\n                throw new Error('ArgumentNullException : Factors');\n            }\n            this.mFactors = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"positions\", {\n        /**\n         * 'positions' Gets or sets the array of positions\n         * @public\n         */\n        get: function () {\n            return this.mPositions;\n        },\n        set: function (value) {\n            var positionarray = value;\n            for (var i = 0; i < positionarray.length; i++) {\n                if (((positionarray[i] < 0) || (positionarray[i] > 1))) {\n                    positionarray[i] = 0;\n                }\n            }\n            this.mPositions = positionarray;\n            this.mPositions = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfBlend.prototype, \"count\", {\n        /**\n         * Gets the number of elements that specify the blend.\n         * @protected\n         */\n        get: function () {\n            return this.mCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    //Implementation\n    /**\n     * Generates a correct color blend.\n     * @param colours The colours.\n     * @param colorSpace The color space.\n     */\n    PdfBlend.prototype.generateColorBlend = function (colours, colorSpace) {\n        if ((colours == null)) {\n            throw new Error('ArgumentNullException : colours');\n        }\n        if ((this.positions == null)) {\n            this.positions = [0];\n        }\n        var cBlend = new PdfColorBlend(this.count);\n        var positions = this.positions;\n        var clrs = null;\n        if ((positions.length === 1)) {\n            positions = [3];\n            positions[0] = 0;\n            positions[1] = this.positions[0];\n            positions[2] = 1;\n            /* tslint:disable */\n            clrs = new Array(3);\n            clrs[0] = colours[0];\n            clrs[1] = colours[0];\n            clrs[2] = colours[1];\n        }\n        else {\n            var c1 = colours[0];\n            var c2 = colours[1];\n            /* tslint:disable */\n            clrs = new Array(this.count);\n            var i = 0;\n            var count = this.count;\n            for (i = 0; i < count; ++i) {\n                clrs[i] = this.interpolate(this.mFactors[i], c1, c2, colorSpace);\n            }\n        }\n        cBlend.positions = positions;\n        cBlend.colors = clrs;\n        return cBlend;\n    };\n    /**\n     * 'clonePdfBlend' Clones this instance.\n     * @public\n     */\n    PdfBlend.prototype.clonePdfBlend = function () {\n        var blend = this;\n        if ((this.mFactors != null)) {\n            blend.factors = (this.mFactors);\n        }\n        if ((this.positions != null)) {\n            blend.positions = (this.positions);\n        }\n        return blend;\n    };\n    PdfBlend.prototype.gcd = function (u, v) {\n        if (typeof u === 'number' && typeof v === 'number' && typeof v !== 'undefined') {\n            if (((u < 0) || (u > 1))) {\n                throw new Error('ArgumentOutOfRangeException : u');\n            }\n            if (((v < 0) || (v > 1))) {\n                throw new Error('ArgumentOutOfRangeException : v');\n            }\n            var iU = (Math.max(1, (u * this.precision)));\n            var iV = (Math.max(1, (v * this.precision)));\n            var iResult = this.gcdInt(iU, iV);\n            var result = ((iResult) / this.precision);\n            return result;\n        }\n        else {\n            var values = u;\n            if ((values == null)) {\n                throw new Error('ArgumentNullException : values');\n            }\n            if ((values.length < 1)) {\n                throw new Error('ArgumentException : Not enough values in the array. - values');\n            }\n            var gcd = values[0];\n            if ((values.length > 1)) {\n                var count = values.length;\n                for (var i = 1; i < count; ++i) {\n                    gcd = this.gcd(values[i], gcd);\n                    if ((gcd === (1 / this.precision))) {\n                        break;\n                    }\n                }\n            }\n            return gcd;\n        }\n    };\n    /**\n     * Calculate the GCD int of the specified values.\n     * @param u The u.\n     * @param v The v.\n     */\n    PdfBlend.prototype.gcdInt = function (u, v) {\n        if ((u <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + u + 'The arguments cannot be less or equal to zero.');\n        }\n        if ((v <= 0)) {\n            throw new Error('ArgumentOutOfRangeException' + v + 'The arguments cannot be less or equal to zero.');\n        }\n        if (((u === 1) || (v === 1))) {\n            return 1;\n        }\n        var shift = 0;\n        while (this.isEven(u, v)) {\n            ++shift;\n            u >>= 1;\n            v >>= 1;\n        }\n        while (((u & 1) <= 0)) {\n            u >>= 1;\n        }\n        do {\n            while ((v & 1) <= 0) {\n                v >>= 1;\n            }\n            if (u > v) {\n                var t = v;\n                v = u;\n                u = t;\n            }\n            v = v - u;\n        } while (v !== 0);\n        return (u << shift);\n    };\n    PdfBlend.prototype.isEven = function (arg1, arg2) {\n        if (typeof arg2 === 'number' && typeof arg2 !== 'undefined') {\n            var result = true;\n            result = (result && ((arg1 & 1) <= 0)); //  Is u even?\n            result = (result && ((arg2 & 1) <= 0)); //  Is v even?\n            return result;\n        }\n        else {\n            return ((arg1 & 1) <= 0);\n        }\n    };\n    PdfBlend.prototype.interpolate = function (t, color1, color2, colorSpace) {\n        if (color1 instanceof PdfColor) {\n            var color = new PdfColor();\n            switch (colorSpace) {\n                case PdfColorSpace.Rgb:\n                    var red = (this.interpolate(t, color1.red, color2.red));\n                    var green = (this.interpolate(t, color1.green, color2.green));\n                    var blue = (this.interpolate(t, color1.blue, color2.blue));\n                    color = new PdfColor(red, green, blue);\n                    break;\n                case PdfColorSpace.GrayScale:\n                    var gray = (this.interpolate(t, color1.gray, color2.gray));\n                    color = new PdfColor(gray);\n                    break;\n                case PdfColorSpace.Cmyk:\n                    var cyan = (this.interpolate(t, color1.c, color2.c));\n                    var magenta = (this.interpolate(t, color1.m, color2.m));\n                    var yellow = (this.interpolate(t, color1.y, color2.y));\n                    var black = (this.interpolate(t, color1.k, color2.k));\n                    color = new PdfColor(cyan, magenta, yellow, black);\n                    break;\n            }\n            return color;\n        }\n        else {\n            var t0 = 0;\n            var t1 = 1;\n            var result = 0;\n            if ((t === t0)) {\n                result = color1;\n            }\n            else if ((t === t1)) {\n                result = color2;\n            }\n            else {\n                result = (color1 + ((t - t0) * ((color2 - color1) / (t1 - t0))));\n            }\n            return result;\n        }\n    };\n    return PdfBlend;\n}());\nexport { PdfBlend };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}