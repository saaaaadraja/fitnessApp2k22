{"ast":null,"code":"import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\n\nvar PdfDocumentPageCollection =\n/** @class */\nfunction () {\n  //constructor\n\n  /**\n   * Initializes a new instance of the `PdfPageCollection` class.\n   * @private\n   */\n  function PdfDocumentPageCollection(document) {\n    /**\n     * It holds the page collection with the `index`.\n     * @private\n     */\n    this.pdfPageCollectionIndex = new Dictionary();\n    this.document = document;\n  }\n\n  Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n    //Property\n\n    /**\n     * Gets the total `number of the pages`.\n     * @private\n     */\n    get: function () {\n      return this.countPages();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n    /**\n     * Gets a `page index` from the document.\n     * @private\n     */\n    get: function () {\n      return this.pdfPageCollectionIndex;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  PdfDocumentPageCollection.prototype.add = function (page) {\n    if (typeof page === 'undefined') {\n      var page_1 = new PdfPage();\n      this.add(page_1);\n      return page_1;\n    } else {\n      var section = this.getLastSection();\n      section.add(page);\n    }\n  };\n  /**\n   * Returns `last section` in the document.\n   * @private\n   */\n\n\n  PdfDocumentPageCollection.prototype.getLastSection = function () {\n    var sc = this.document.sections;\n\n    if (sc.section.length === 0) {\n      sc.add();\n    }\n\n    var section = sc.section[sc.section.length - 1];\n    return section;\n  };\n  /**\n   * Called when `new page has been added`.\n   * @private\n   */\n\n\n  PdfDocumentPageCollection.prototype.onPageAdded = function (args) {// if (PageAdded !== null)\n    // {\n    //     PageAdded(this, args);\n    // }\n  };\n  /**\n   * Gets the `total number of pages`.\n   * @private\n   */\n\n\n  PdfDocumentPageCollection.prototype.countPages = function () {\n    var sc = this.document.sections;\n    var count = 0;\n\n    for (var index = 0; index < sc.section.length; index++) {\n      count += sc.section[index].count;\n    }\n\n    return count;\n  };\n  /**\n   * Gets the `page object` from page index.\n   * @private\n   */\n\n\n  PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n    return this.getPage(index);\n  };\n  /**\n   * Gets a page by its `index` in the document.\n   * @private\n   */\n\n\n  PdfDocumentPageCollection.prototype.getPage = function (index) {\n    if (index < 0 || index >= this.count) {\n      throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n    }\n\n    var page = null;\n    var sectionStartIndex = 0;\n    var sectionCount = 0;\n    var pageIndex = 0;\n    var length = this.document.sections.count;\n\n    for (var i = 0; i < length; i++) {\n      var section = this.document.sections.section[i];\n      sectionCount = section.count;\n      pageIndex = index - sectionStartIndex; // We found a section containing the page.\n\n      if (index >= sectionStartIndex && pageIndex < sectionCount) {\n        page = section.getPages()[pageIndex];\n        break;\n      }\n\n      sectionStartIndex += sectionCount;\n    }\n\n    return page;\n  };\n  /**\n   * Gets the `index of` the page in the document.\n   * @private\n   */\n\n\n  PdfDocumentPageCollection.prototype.indexOf = function (page) {\n    var index = -1;\n\n    if (page == null) {\n      throw new Error('ArgumentNullException: page');\n    } else {\n      var numPages = 0;\n\n      for (var i = 0, len = this.document.sections.count; i < len; i++) {\n        var section = this.document.sections.pdfSectionCollection(i);\n        index = section.indexOf(page);\n\n        if (index >= 0) {\n          index += numPages;\n          break;\n        } else {\n          index = -1;\n        }\n\n        numPages += section.count;\n      }\n    }\n\n    return index;\n  };\n  /**\n   * `Removes` the specified page.\n   * @private\n   */\n\n\n  PdfDocumentPageCollection.prototype.remove = function (page) {\n    if (page == null) {\n      throw Error('ArgumentNullException(\"page\")');\n    }\n\n    var section = null;\n    var len;\n\n    for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n      section = this.document.sections.pdfSectionCollection(i);\n\n      if (section.pages.contains(page)) {\n        section.pages.remove(page);\n        break;\n      }\n    }\n\n    return section;\n  };\n\n  return PdfDocumentPageCollection;\n}();\n\nexport { PdfDocumentPageCollection };","map":{"version":3,"names":["PdfPage","Dictionary","PdfDocumentPageCollection","document","pdfPageCollectionIndex","Object","defineProperty","prototype","get","countPages","enumerable","configurable","add","page","page_1","section","getLastSection","sc","sections","length","onPageAdded","args","count","index","getPageByIndex","getPage","Error","sectionStartIndex","sectionCount","pageIndex","i","getPages","indexOf","numPages","len","pdfSectionCollection","remove","len_1","pages","contains"],"sources":["D:/Theme/package/node_modules/@syncfusion/ej2-pdf-export/src/implementation/pages/pdf-document-page-collection.js"],"sourcesContent":["import { PdfPage } from './pdf-page';\nimport { Dictionary } from './../collections/dictionary';\n/**\n * Represents a virtual collection of all the pages in the document.\n * @private\n */\nvar PdfDocumentPageCollection = /** @class */ (function () {\n    //constructor\n    /**\n     * Initializes a new instance of the `PdfPageCollection` class.\n     * @private\n     */\n    function PdfDocumentPageCollection(document) {\n        /**\n         * It holds the page collection with the `index`.\n         * @private\n         */\n        this.pdfPageCollectionIndex = new Dictionary();\n        this.document = document;\n    }\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"count\", {\n        //Property\n        /**\n         * Gets the total `number of the pages`.\n         * @private\n         */\n        get: function () {\n            return this.countPages();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PdfDocumentPageCollection.prototype, \"pageCollectionIndex\", {\n        /**\n         * Gets a `page index` from the document.\n         * @private\n         */\n        get: function () {\n            return this.pdfPageCollectionIndex;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PdfDocumentPageCollection.prototype.add = function (page) {\n        if (typeof page === 'undefined') {\n            var page_1 = new PdfPage();\n            this.add(page_1);\n            return page_1;\n        }\n        else {\n            var section = this.getLastSection();\n            section.add(page);\n        }\n    };\n    /**\n     * Returns `last section` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getLastSection = function () {\n        var sc = this.document.sections;\n        if (sc.section.length === 0) {\n            sc.add();\n        }\n        var section = sc.section[sc.section.length - 1];\n        return section;\n    };\n    /**\n     * Called when `new page has been added`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.onPageAdded = function (args) {\n        // if (PageAdded !== null)\n        // {\n        //     PageAdded(this, args);\n        // }\n    };\n    /**\n     * Gets the `total number of pages`.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.countPages = function () {\n        var sc = this.document.sections;\n        var count = 0;\n        for (var index = 0; index < sc.section.length; index++) {\n            count += sc.section[index].count;\n        }\n        return count;\n    };\n    /**\n     * Gets the `page object` from page index.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPageByIndex = function (index) {\n        return this.getPage(index);\n    };\n    /**\n     * Gets a page by its `index` in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.getPage = function (index) {\n        if ((index < 0) || (index >= this.count)) {\n            throw Error('ArgumentOutOfRangeException(\"index\", \"Value can not be less 0\")');\n        }\n        var page = null;\n        var sectionStartIndex = 0;\n        var sectionCount = 0;\n        var pageIndex = 0;\n        var length = this.document.sections.count;\n        for (var i = 0; i < length; i++) {\n            var section = this.document.sections.section[i];\n            sectionCount = section.count;\n            pageIndex = index - sectionStartIndex;\n            // We found a section containing the page.\n            if ((index >= sectionStartIndex && pageIndex < sectionCount)) {\n                page = section.getPages()[pageIndex];\n                break;\n            }\n            sectionStartIndex += sectionCount;\n        }\n        return page;\n    };\n    /**\n     * Gets the `index of` the page in the document.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.indexOf = function (page) {\n        var index = -1;\n        if (page == null) {\n            throw new Error('ArgumentNullException: page');\n        }\n        else {\n            var numPages = 0;\n            for (var i = 0, len = this.document.sections.count; i < len; i++) {\n                var section = this.document.sections.pdfSectionCollection(i);\n                index = section.indexOf(page);\n                if (index >= 0) {\n                    index += numPages;\n                    break;\n                }\n                else {\n                    index = -1;\n                }\n                numPages += section.count;\n            }\n        }\n        return index;\n    };\n    /**\n     * `Removes` the specified page.\n     * @private\n     */\n    PdfDocumentPageCollection.prototype.remove = function (page) {\n        if (page == null) {\n            throw Error('ArgumentNullException(\"page\")');\n        }\n        var section = null;\n        var len;\n        for (var i = 0, len_1 = this.document.sections.count; i < len_1; i++) {\n            section = this.document.sections.pdfSectionCollection(i);\n            if (section.pages.contains(page)) {\n                section.pages.remove(page);\n                break;\n            }\n        }\n        return section;\n    };\n    return PdfDocumentPageCollection;\n}());\nexport { PdfDocumentPageCollection };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}